

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu May 11 18:38:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,delta=2
    59                           	psect	text48,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text50,local,class=CODE,merge=1,delta=2
    62                           	psect	text51,local,class=CODE,merge=1,delta=2
    63                           	psect	text52,local,class=CODE,merge=1,delta=2
    64                           	psect	text53,local,class=CODE,merge=1,delta=2
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68     0000                     
    69                           ; Generated 28/03/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F1936 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103     0000                     	;# 
   104     0001                     	;# 
   105     0002                     	;# 
   106     0003                     	;# 
   107     0004                     	;# 
   108     0005                     	;# 
   109     0006                     	;# 
   110     0007                     	;# 
   111     0008                     	;# 
   112     0009                     	;# 
   113     000A                     	;# 
   114     000B                     	;# 
   115     000C                     	;# 
   116     000D                     	;# 
   117     000E                     	;# 
   118     0010                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0013                     	;# 
   122     0015                     	;# 
   123     0016                     	;# 
   124     0016                     	;# 
   125     0017                     	;# 
   126     0018                     	;# 
   127     0019                     	;# 
   128     001A                     	;# 
   129     001B                     	;# 
   130     001C                     	;# 
   131     001E                     	;# 
   132     001F                     	;# 
   133     008C                     	;# 
   134     008D                     	;# 
   135     008E                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     0110                     	;# 
   155     0111                     	;# 
   156     0112                     	;# 
   157     0113                     	;# 
   158     0114                     	;# 
   159     0115                     	;# 
   160     0116                     	;# 
   161     0117                     	;# 
   162     0118                     	;# 
   163     0119                     	;# 
   164     011A                     	;# 
   165     011B                     	;# 
   166     011D                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0191                     	;# 
   170     0191                     	;# 
   171     0192                     	;# 
   172     0193                     	;# 
   173     0193                     	;# 
   174     0193                     	;# 
   175     0194                     	;# 
   176     0195                     	;# 
   177     0196                     	;# 
   178     0199                     	;# 
   179     019A                     	;# 
   180     019B                     	;# 
   181     019B                     	;# 
   182     019B                     	;# 
   183     019B                     	;# 
   184     019C                     	;# 
   185     019C                     	;# 
   186     019D                     	;# 
   187     019E                     	;# 
   188     019F                     	;# 
   189     020D                     	;# 
   190     0210                     	;# 
   191     0211                     	;# 
   192     0212                     	;# 
   193     0213                     	;# 
   194     0214                     	;# 
   195     0215                     	;# 
   196     0215                     	;# 
   197     0216                     	;# 
   198     0217                     	;# 
   199     0291                     	;# 
   200     0291                     	;# 
   201     0292                     	;# 
   202     0293                     	;# 
   203     0294                     	;# 
   204     0295                     	;# 
   205     0295                     	;# 
   206     0296                     	;# 
   207     0298                     	;# 
   208     0298                     	;# 
   209     0299                     	;# 
   210     029A                     	;# 
   211     029B                     	;# 
   212     029C                     	;# 
   213     029C                     	;# 
   214     029D                     	;# 
   215     029E                     	;# 
   216     029F                     	;# 
   217     0311                     	;# 
   218     0311                     	;# 
   219     0312                     	;# 
   220     0313                     	;# 
   221     0314                     	;# 
   222     0315                     	;# 
   223     0315                     	;# 
   224     0316                     	;# 
   225     0318                     	;# 
   226     0318                     	;# 
   227     0319                     	;# 
   228     031A                     	;# 
   229     031C                     	;# 
   230     031C                     	;# 
   231     031D                     	;# 
   232     031E                     	;# 
   233     0394                     	;# 
   234     0395                     	;# 
   235     0396                     	;# 
   236     0415                     	;# 
   237     0416                     	;# 
   238     0417                     	;# 
   239     041C                     	;# 
   240     041D                     	;# 
   241     041E                     	;# 
   242     0791                     	;# 
   243     0792                     	;# 
   244     0793                     	;# 
   245     0794                     	;# 
   246     0795                     	;# 
   247     0798                     	;# 
   248     0799                     	;# 
   249     07A0                     	;# 
   250     07A1                     	;# 
   251     07A3                     	;# 
   252     07A4                     	;# 
   253     07A6                     	;# 
   254     07A7                     	;# 
   255     07A9                     	;# 
   256     07AA                     	;# 
   257     0FE4                     	;# 
   258     0FE5                     	;# 
   259     0FE6                     	;# 
   260     0FE7                     	;# 
   261     0FE8                     	;# 
   262     0FE9                     	;# 
   263     0FEA                     	;# 
   264     0FEB                     	;# 
   265     0FED                     	;# 
   266     0FEE                     	;# 
   267     0FEF                     	;# 
   268     0000                     	;# 
   269     0001                     	;# 
   270     0002                     	;# 
   271     0003                     	;# 
   272     0004                     	;# 
   273     0005                     	;# 
   274     0006                     	;# 
   275     0007                     	;# 
   276     0008                     	;# 
   277     0009                     	;# 
   278     000A                     	;# 
   279     000B                     	;# 
   280     000C                     	;# 
   281     000D                     	;# 
   282     000E                     	;# 
   283     0010                     	;# 
   284     0011                     	;# 
   285     0012                     	;# 
   286     0013                     	;# 
   287     0015                     	;# 
   288     0016                     	;# 
   289     0016                     	;# 
   290     0017                     	;# 
   291     0018                     	;# 
   292     0019                     	;# 
   293     001A                     	;# 
   294     001B                     	;# 
   295     001C                     	;# 
   296     001E                     	;# 
   297     001F                     	;# 
   298     008C                     	;# 
   299     008D                     	;# 
   300     008E                     	;# 
   301     0090                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0095                     	;# 
   306     0096                     	;# 
   307     0097                     	;# 
   308     0098                     	;# 
   309     0099                     	;# 
   310     009A                     	;# 
   311     009B                     	;# 
   312     009B                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     0110                     	;# 
   320     0111                     	;# 
   321     0112                     	;# 
   322     0113                     	;# 
   323     0114                     	;# 
   324     0115                     	;# 
   325     0116                     	;# 
   326     0117                     	;# 
   327     0118                     	;# 
   328     0119                     	;# 
   329     011A                     	;# 
   330     011B                     	;# 
   331     011D                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020D                     	;# 
   355     0210                     	;# 
   356     0211                     	;# 
   357     0212                     	;# 
   358     0213                     	;# 
   359     0214                     	;# 
   360     0215                     	;# 
   361     0215                     	;# 
   362     0216                     	;# 
   363     0217                     	;# 
   364     0291                     	;# 
   365     0291                     	;# 
   366     0292                     	;# 
   367     0293                     	;# 
   368     0294                     	;# 
   369     0295                     	;# 
   370     0295                     	;# 
   371     0296                     	;# 
   372     0298                     	;# 
   373     0298                     	;# 
   374     0299                     	;# 
   375     029A                     	;# 
   376     029B                     	;# 
   377     029C                     	;# 
   378     029C                     	;# 
   379     029D                     	;# 
   380     029E                     	;# 
   381     029F                     	;# 
   382     0311                     	;# 
   383     0311                     	;# 
   384     0312                     	;# 
   385     0313                     	;# 
   386     0314                     	;# 
   387     0315                     	;# 
   388     0315                     	;# 
   389     0316                     	;# 
   390     0318                     	;# 
   391     0318                     	;# 
   392     0319                     	;# 
   393     031A                     	;# 
   394     031C                     	;# 
   395     031C                     	;# 
   396     031D                     	;# 
   397     031E                     	;# 
   398     0394                     	;# 
   399     0395                     	;# 
   400     0396                     	;# 
   401     0415                     	;# 
   402     0416                     	;# 
   403     0417                     	;# 
   404     041C                     	;# 
   405     041D                     	;# 
   406     041E                     	;# 
   407     0791                     	;# 
   408     0792                     	;# 
   409     0793                     	;# 
   410     0794                     	;# 
   411     0795                     	;# 
   412     0798                     	;# 
   413     0799                     	;# 
   414     07A0                     	;# 
   415     07A1                     	;# 
   416     07A3                     	;# 
   417     07A4                     	;# 
   418     07A6                     	;# 
   419     07A7                     	;# 
   420     07A9                     	;# 
   421     07AA                     	;# 
   422     0FE4                     	;# 
   423     0FE5                     	;# 
   424     0FE6                     	;# 
   425     0FE7                     	;# 
   426     0FE8                     	;# 
   427     0FE9                     	;# 
   428     0FEA                     	;# 
   429     0FEB                     	;# 
   430     0FED                     	;# 
   431     0FEE                     	;# 
   432     0FEF                     	;# 
   433     0000                     	;# 
   434     0001                     	;# 
   435     0002                     	;# 
   436     0003                     	;# 
   437     0004                     	;# 
   438     0005                     	;# 
   439     0006                     	;# 
   440     0007                     	;# 
   441     0008                     	;# 
   442     0009                     	;# 
   443     000A                     	;# 
   444     000B                     	;# 
   445     000C                     	;# 
   446     000D                     	;# 
   447     000E                     	;# 
   448     0010                     	;# 
   449     0011                     	;# 
   450     0012                     	;# 
   451     0013                     	;# 
   452     0015                     	;# 
   453     0016                     	;# 
   454     0016                     	;# 
   455     0017                     	;# 
   456     0018                     	;# 
   457     0019                     	;# 
   458     001A                     	;# 
   459     001B                     	;# 
   460     001C                     	;# 
   461     001E                     	;# 
   462     001F                     	;# 
   463     008C                     	;# 
   464     008D                     	;# 
   465     008E                     	;# 
   466     0090                     	;# 
   467     0091                     	;# 
   468     0092                     	;# 
   469     0093                     	;# 
   470     0095                     	;# 
   471     0096                     	;# 
   472     0097                     	;# 
   473     0098                     	;# 
   474     0099                     	;# 
   475     009A                     	;# 
   476     009B                     	;# 
   477     009B                     	;# 
   478     009C                     	;# 
   479     009D                     	;# 
   480     009E                     	;# 
   481     010C                     	;# 
   482     010D                     	;# 
   483     010E                     	;# 
   484     0110                     	;# 
   485     0111                     	;# 
   486     0112                     	;# 
   487     0113                     	;# 
   488     0114                     	;# 
   489     0115                     	;# 
   490     0116                     	;# 
   491     0117                     	;# 
   492     0118                     	;# 
   493     0119                     	;# 
   494     011A                     	;# 
   495     011B                     	;# 
   496     011D                     	;# 
   497     018C                     	;# 
   498     018D                     	;# 
   499     0191                     	;# 
   500     0191                     	;# 
   501     0192                     	;# 
   502     0193                     	;# 
   503     0193                     	;# 
   504     0193                     	;# 
   505     0194                     	;# 
   506     0195                     	;# 
   507     0196                     	;# 
   508     0199                     	;# 
   509     019A                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019C                     	;# 
   515     019C                     	;# 
   516     019D                     	;# 
   517     019E                     	;# 
   518     019F                     	;# 
   519     020D                     	;# 
   520     0210                     	;# 
   521     0211                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0214                     	;# 
   525     0215                     	;# 
   526     0215                     	;# 
   527     0216                     	;# 
   528     0217                     	;# 
   529     0291                     	;# 
   530     0291                     	;# 
   531     0292                     	;# 
   532     0293                     	;# 
   533     0294                     	;# 
   534     0295                     	;# 
   535     0295                     	;# 
   536     0296                     	;# 
   537     0298                     	;# 
   538     0298                     	;# 
   539     0299                     	;# 
   540     029A                     	;# 
   541     029B                     	;# 
   542     029C                     	;# 
   543     029C                     	;# 
   544     029D                     	;# 
   545     029E                     	;# 
   546     029F                     	;# 
   547     0311                     	;# 
   548     0311                     	;# 
   549     0312                     	;# 
   550     0313                     	;# 
   551     0314                     	;# 
   552     0315                     	;# 
   553     0315                     	;# 
   554     0316                     	;# 
   555     0318                     	;# 
   556     0318                     	;# 
   557     0319                     	;# 
   558     031A                     	;# 
   559     031C                     	;# 
   560     031C                     	;# 
   561     031D                     	;# 
   562     031E                     	;# 
   563     0394                     	;# 
   564     0395                     	;# 
   565     0396                     	;# 
   566     0415                     	;# 
   567     0416                     	;# 
   568     0417                     	;# 
   569     041C                     	;# 
   570     041D                     	;# 
   571     041E                     	;# 
   572     0791                     	;# 
   573     0792                     	;# 
   574     0793                     	;# 
   575     0794                     	;# 
   576     0795                     	;# 
   577     0798                     	;# 
   578     0799                     	;# 
   579     07A0                     	;# 
   580     07A1                     	;# 
   581     07A3                     	;# 
   582     07A4                     	;# 
   583     07A6                     	;# 
   584     07A7                     	;# 
   585     07A9                     	;# 
   586     07AA                     	;# 
   587     0FE4                     	;# 
   588     0FE5                     	;# 
   589     0FE6                     	;# 
   590     0FE7                     	;# 
   591     0FE8                     	;# 
   592     0FE9                     	;# 
   593     0FEA                     	;# 
   594     0FEB                     	;# 
   595     0FED                     	;# 
   596     0FEE                     	;# 
   597     0FEF                     	;# 
   598     0000                     	;# 
   599     0001                     	;# 
   600     0002                     	;# 
   601     0003                     	;# 
   602     0004                     	;# 
   603     0005                     	;# 
   604     0006                     	;# 
   605     0007                     	;# 
   606     0008                     	;# 
   607     0009                     	;# 
   608     000A                     	;# 
   609     000B                     	;# 
   610     000C                     	;# 
   611     000D                     	;# 
   612     000E                     	;# 
   613     0010                     	;# 
   614     0011                     	;# 
   615     0012                     	;# 
   616     0013                     	;# 
   617     0015                     	;# 
   618     0016                     	;# 
   619     0016                     	;# 
   620     0017                     	;# 
   621     0018                     	;# 
   622     0019                     	;# 
   623     001A                     	;# 
   624     001B                     	;# 
   625     001C                     	;# 
   626     001E                     	;# 
   627     001F                     	;# 
   628     008C                     	;# 
   629     008D                     	;# 
   630     008E                     	;# 
   631     0090                     	;# 
   632     0091                     	;# 
   633     0092                     	;# 
   634     0093                     	;# 
   635     0095                     	;# 
   636     0096                     	;# 
   637     0097                     	;# 
   638     0098                     	;# 
   639     0099                     	;# 
   640     009A                     	;# 
   641     009B                     	;# 
   642     009B                     	;# 
   643     009C                     	;# 
   644     009D                     	;# 
   645     009E                     	;# 
   646     010C                     	;# 
   647     010D                     	;# 
   648     010E                     	;# 
   649     0110                     	;# 
   650     0111                     	;# 
   651     0112                     	;# 
   652     0113                     	;# 
   653     0114                     	;# 
   654     0115                     	;# 
   655     0116                     	;# 
   656     0117                     	;# 
   657     0118                     	;# 
   658     0119                     	;# 
   659     011A                     	;# 
   660     011B                     	;# 
   661     011D                     	;# 
   662     018C                     	;# 
   663     018D                     	;# 
   664     0191                     	;# 
   665     0191                     	;# 
   666     0192                     	;# 
   667     0193                     	;# 
   668     0193                     	;# 
   669     0193                     	;# 
   670     0194                     	;# 
   671     0195                     	;# 
   672     0196                     	;# 
   673     0199                     	;# 
   674     019A                     	;# 
   675     019B                     	;# 
   676     019B                     	;# 
   677     019B                     	;# 
   678     019B                     	;# 
   679     019C                     	;# 
   680     019C                     	;# 
   681     019D                     	;# 
   682     019E                     	;# 
   683     019F                     	;# 
   684     020D                     	;# 
   685     0210                     	;# 
   686     0211                     	;# 
   687     0212                     	;# 
   688     0213                     	;# 
   689     0214                     	;# 
   690     0215                     	;# 
   691     0215                     	;# 
   692     0216                     	;# 
   693     0217                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029F                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0314                     	;# 
   717     0315                     	;# 
   718     0315                     	;# 
   719     0316                     	;# 
   720     0318                     	;# 
   721     0318                     	;# 
   722     0319                     	;# 
   723     031A                     	;# 
   724     031C                     	;# 
   725     031C                     	;# 
   726     031D                     	;# 
   727     031E                     	;# 
   728     0394                     	;# 
   729     0395                     	;# 
   730     0396                     	;# 
   731     0415                     	;# 
   732     0416                     	;# 
   733     0417                     	;# 
   734     041C                     	;# 
   735     041D                     	;# 
   736     041E                     	;# 
   737     0791                     	;# 
   738     0792                     	;# 
   739     0793                     	;# 
   740     0794                     	;# 
   741     0795                     	;# 
   742     0798                     	;# 
   743     0799                     	;# 
   744     07A0                     	;# 
   745     07A1                     	;# 
   746     07A3                     	;# 
   747     07A4                     	;# 
   748     07A6                     	;# 
   749     07A7                     	;# 
   750     07A9                     	;# 
   751     07AA                     	;# 
   752     0FE4                     	;# 
   753     0FE5                     	;# 
   754     0FE6                     	;# 
   755     0FE7                     	;# 
   756     0FE8                     	;# 
   757     0FE9                     	;# 
   758     0FEA                     	;# 
   759     0FEB                     	;# 
   760     0FED                     	;# 
   761     0FEE                     	;# 
   762     0FEF                     	;# 
   763     0000                     	;# 
   764     0001                     	;# 
   765     0002                     	;# 
   766     0003                     	;# 
   767     0004                     	;# 
   768     0005                     	;# 
   769     0006                     	;# 
   770     0007                     	;# 
   771     0008                     	;# 
   772     0009                     	;# 
   773     000A                     	;# 
   774     000B                     	;# 
   775     000C                     	;# 
   776     000D                     	;# 
   777     000E                     	;# 
   778     0010                     	;# 
   779     0011                     	;# 
   780     0012                     	;# 
   781     0013                     	;# 
   782     0015                     	;# 
   783     0016                     	;# 
   784     0016                     	;# 
   785     0017                     	;# 
   786     0018                     	;# 
   787     0019                     	;# 
   788     001A                     	;# 
   789     001B                     	;# 
   790     001C                     	;# 
   791     001E                     	;# 
   792     001F                     	;# 
   793     008C                     	;# 
   794     008D                     	;# 
   795     008E                     	;# 
   796     0090                     	;# 
   797     0091                     	;# 
   798     0092                     	;# 
   799     0093                     	;# 
   800     0095                     	;# 
   801     0096                     	;# 
   802     0097                     	;# 
   803     0098                     	;# 
   804     0099                     	;# 
   805     009A                     	;# 
   806     009B                     	;# 
   807     009B                     	;# 
   808     009C                     	;# 
   809     009D                     	;# 
   810     009E                     	;# 
   811     010C                     	;# 
   812     010D                     	;# 
   813     010E                     	;# 
   814     0110                     	;# 
   815     0111                     	;# 
   816     0112                     	;# 
   817     0113                     	;# 
   818     0114                     	;# 
   819     0115                     	;# 
   820     0116                     	;# 
   821     0117                     	;# 
   822     0118                     	;# 
   823     0119                     	;# 
   824     011A                     	;# 
   825     011B                     	;# 
   826     011D                     	;# 
   827     018C                     	;# 
   828     018D                     	;# 
   829     0191                     	;# 
   830     0191                     	;# 
   831     0192                     	;# 
   832     0193                     	;# 
   833     0193                     	;# 
   834     0193                     	;# 
   835     0194                     	;# 
   836     0195                     	;# 
   837     0196                     	;# 
   838     0199                     	;# 
   839     019A                     	;# 
   840     019B                     	;# 
   841     019B                     	;# 
   842     019B                     	;# 
   843     019B                     	;# 
   844     019C                     	;# 
   845     019C                     	;# 
   846     019D                     	;# 
   847     019E                     	;# 
   848     019F                     	;# 
   849     020D                     	;# 
   850     0210                     	;# 
   851     0211                     	;# 
   852     0212                     	;# 
   853     0213                     	;# 
   854     0214                     	;# 
   855     0215                     	;# 
   856     0215                     	;# 
   857     0216                     	;# 
   858     0217                     	;# 
   859     0291                     	;# 
   860     0291                     	;# 
   861     0292                     	;# 
   862     0293                     	;# 
   863     0294                     	;# 
   864     0295                     	;# 
   865     0295                     	;# 
   866     0296                     	;# 
   867     0298                     	;# 
   868     0298                     	;# 
   869     0299                     	;# 
   870     029A                     	;# 
   871     029B                     	;# 
   872     029C                     	;# 
   873     029C                     	;# 
   874     029D                     	;# 
   875     029E                     	;# 
   876     029F                     	;# 
   877     0311                     	;# 
   878     0311                     	;# 
   879     0312                     	;# 
   880     0313                     	;# 
   881     0314                     	;# 
   882     0315                     	;# 
   883     0315                     	;# 
   884     0316                     	;# 
   885     0318                     	;# 
   886     0318                     	;# 
   887     0319                     	;# 
   888     031A                     	;# 
   889     031C                     	;# 
   890     031C                     	;# 
   891     031D                     	;# 
   892     031E                     	;# 
   893     0394                     	;# 
   894     0395                     	;# 
   895     0396                     	;# 
   896     0415                     	;# 
   897     0416                     	;# 
   898     0417                     	;# 
   899     041C                     	;# 
   900     041D                     	;# 
   901     041E                     	;# 
   902     0791                     	;# 
   903     0792                     	;# 
   904     0793                     	;# 
   905     0794                     	;# 
   906     0795                     	;# 
   907     0798                     	;# 
   908     0799                     	;# 
   909     07A0                     	;# 
   910     07A1                     	;# 
   911     07A3                     	;# 
   912     07A4                     	;# 
   913     07A6                     	;# 
   914     07A7                     	;# 
   915     07A9                     	;# 
   916     07AA                     	;# 
   917     0FE4                     	;# 
   918     0FE5                     	;# 
   919     0FE6                     	;# 
   920     0FE7                     	;# 
   921     0FE8                     	;# 
   922     0FE9                     	;# 
   923     0FEA                     	;# 
   924     0FEB                     	;# 
   925     0FED                     	;# 
   926     0FEE                     	;# 
   927     0FEF                     	;# 
   928     0000                     	;# 
   929     0001                     	;# 
   930     0002                     	;# 
   931     0003                     	;# 
   932     0004                     	;# 
   933     0005                     	;# 
   934     0006                     	;# 
   935     0007                     	;# 
   936     0008                     	;# 
   937     0009                     	;# 
   938     000A                     	;# 
   939     000B                     	;# 
   940     000C                     	;# 
   941     000D                     	;# 
   942     000E                     	;# 
   943     0010                     	;# 
   944     0011                     	;# 
   945     0012                     	;# 
   946     0013                     	;# 
   947     0015                     	;# 
   948     0016                     	;# 
   949     0016                     	;# 
   950     0017                     	;# 
   951     0018                     	;# 
   952     0019                     	;# 
   953     001A                     	;# 
   954     001B                     	;# 
   955     001C                     	;# 
   956     001E                     	;# 
   957     001F                     	;# 
   958     008C                     	;# 
   959     008D                     	;# 
   960     008E                     	;# 
   961     0090                     	;# 
   962     0091                     	;# 
   963     0092                     	;# 
   964     0093                     	;# 
   965     0095                     	;# 
   966     0096                     	;# 
   967     0097                     	;# 
   968     0098                     	;# 
   969     0099                     	;# 
   970     009A                     	;# 
   971     009B                     	;# 
   972     009B                     	;# 
   973     009C                     	;# 
   974     009D                     	;# 
   975     009E                     	;# 
   976     010C                     	;# 
   977     010D                     	;# 
   978     010E                     	;# 
   979     0110                     	;# 
   980     0111                     	;# 
   981     0112                     	;# 
   982     0113                     	;# 
   983     0114                     	;# 
   984     0115                     	;# 
   985     0116                     	;# 
   986     0117                     	;# 
   987     0118                     	;# 
   988     0119                     	;# 
   989     011A                     	;# 
   990     011B                     	;# 
   991     011D                     	;# 
   992     018C                     	;# 
   993     018D                     	;# 
   994     0191                     	;# 
   995     0191                     	;# 
   996     0192                     	;# 
   997     0193                     	;# 
   998     0193                     	;# 
   999     0193                     	;# 
  1000     0194                     	;# 
  1001     0195                     	;# 
  1002     0196                     	;# 
  1003     0199                     	;# 
  1004     019A                     	;# 
  1005     019B                     	;# 
  1006     019B                     	;# 
  1007     019B                     	;# 
  1008     019B                     	;# 
  1009     019C                     	;# 
  1010     019C                     	;# 
  1011     019D                     	;# 
  1012     019E                     	;# 
  1013     019F                     	;# 
  1014     020D                     	;# 
  1015     0210                     	;# 
  1016     0211                     	;# 
  1017     0212                     	;# 
  1018     0213                     	;# 
  1019     0214                     	;# 
  1020     0215                     	;# 
  1021     0215                     	;# 
  1022     0216                     	;# 
  1023     0217                     	;# 
  1024     0291                     	;# 
  1025     0291                     	;# 
  1026     0292                     	;# 
  1027     0293                     	;# 
  1028     0294                     	;# 
  1029     0295                     	;# 
  1030     0295                     	;# 
  1031     0296                     	;# 
  1032     0298                     	;# 
  1033     0298                     	;# 
  1034     0299                     	;# 
  1035     029A                     	;# 
  1036     029B                     	;# 
  1037     029C                     	;# 
  1038     029C                     	;# 
  1039     029D                     	;# 
  1040     029E                     	;# 
  1041     029F                     	;# 
  1042     0311                     	;# 
  1043     0311                     	;# 
  1044     0312                     	;# 
  1045     0313                     	;# 
  1046     0314                     	;# 
  1047     0315                     	;# 
  1048     0315                     	;# 
  1049     0316                     	;# 
  1050     0318                     	;# 
  1051     0318                     	;# 
  1052     0319                     	;# 
  1053     031A                     	;# 
  1054     031C                     	;# 
  1055     031C                     	;# 
  1056     031D                     	;# 
  1057     031E                     	;# 
  1058     0394                     	;# 
  1059     0395                     	;# 
  1060     0396                     	;# 
  1061     0415                     	;# 
  1062     0416                     	;# 
  1063     0417                     	;# 
  1064     041C                     	;# 
  1065     041D                     	;# 
  1066     041E                     	;# 
  1067     0791                     	;# 
  1068     0792                     	;# 
  1069     0793                     	;# 
  1070     0794                     	;# 
  1071     0795                     	;# 
  1072     0798                     	;# 
  1073     0799                     	;# 
  1074     07A0                     	;# 
  1075     07A1                     	;# 
  1076     07A3                     	;# 
  1077     07A4                     	;# 
  1078     07A6                     	;# 
  1079     07A7                     	;# 
  1080     07A9                     	;# 
  1081     07AA                     	;# 
  1082     0FE4                     	;# 
  1083     0FE5                     	;# 
  1084     0FE6                     	;# 
  1085     0FE7                     	;# 
  1086     0FE8                     	;# 
  1087     0FE9                     	;# 
  1088     0FEA                     	;# 
  1089     0FEB                     	;# 
  1090     0FED                     	;# 
  1091     0FEE                     	;# 
  1092     0FEF                     	;# 
  1093     0000                     	;# 
  1094     0001                     	;# 
  1095     0002                     	;# 
  1096     0003                     	;# 
  1097     0004                     	;# 
  1098     0005                     	;# 
  1099     0006                     	;# 
  1100     0007                     	;# 
  1101     0008                     	;# 
  1102     0009                     	;# 
  1103     000A                     	;# 
  1104     000B                     	;# 
  1105     000C                     	;# 
  1106     000D                     	;# 
  1107     000E                     	;# 
  1108     0010                     	;# 
  1109     0011                     	;# 
  1110     0012                     	;# 
  1111     0013                     	;# 
  1112     0015                     	;# 
  1113     0016                     	;# 
  1114     0016                     	;# 
  1115     0017                     	;# 
  1116     0018                     	;# 
  1117     0019                     	;# 
  1118     001A                     	;# 
  1119     001B                     	;# 
  1120     001C                     	;# 
  1121     001E                     	;# 
  1122     001F                     	;# 
  1123     008C                     	;# 
  1124     008D                     	;# 
  1125     008E                     	;# 
  1126     0090                     	;# 
  1127     0091                     	;# 
  1128     0092                     	;# 
  1129     0093                     	;# 
  1130     0095                     	;# 
  1131     0096                     	;# 
  1132     0097                     	;# 
  1133     0098                     	;# 
  1134     0099                     	;# 
  1135     009A                     	;# 
  1136     009B                     	;# 
  1137     009B                     	;# 
  1138     009C                     	;# 
  1139     009D                     	;# 
  1140     009E                     	;# 
  1141     010C                     	;# 
  1142     010D                     	;# 
  1143     010E                     	;# 
  1144     0110                     	;# 
  1145     0111                     	;# 
  1146     0112                     	;# 
  1147     0113                     	;# 
  1148     0114                     	;# 
  1149     0115                     	;# 
  1150     0116                     	;# 
  1151     0117                     	;# 
  1152     0118                     	;# 
  1153     0119                     	;# 
  1154     011A                     	;# 
  1155     011B                     	;# 
  1156     011D                     	;# 
  1157     018C                     	;# 
  1158     018D                     	;# 
  1159     0191                     	;# 
  1160     0191                     	;# 
  1161     0192                     	;# 
  1162     0193                     	;# 
  1163     0193                     	;# 
  1164     0193                     	;# 
  1165     0194                     	;# 
  1166     0195                     	;# 
  1167     0196                     	;# 
  1168     0199                     	;# 
  1169     019A                     	;# 
  1170     019B                     	;# 
  1171     019B                     	;# 
  1172     019B                     	;# 
  1173     019B                     	;# 
  1174     019C                     	;# 
  1175     019C                     	;# 
  1176     019D                     	;# 
  1177     019E                     	;# 
  1178     019F                     	;# 
  1179     020D                     	;# 
  1180     0210                     	;# 
  1181     0211                     	;# 
  1182     0212                     	;# 
  1183     0213                     	;# 
  1184     0214                     	;# 
  1185     0215                     	;# 
  1186     0215                     	;# 
  1187     0216                     	;# 
  1188     0217                     	;# 
  1189     0291                     	;# 
  1190     0291                     	;# 
  1191     0292                     	;# 
  1192     0293                     	;# 
  1193     0294                     	;# 
  1194     0295                     	;# 
  1195     0295                     	;# 
  1196     0296                     	;# 
  1197     0298                     	;# 
  1198     0298                     	;# 
  1199     0299                     	;# 
  1200     029A                     	;# 
  1201     029B                     	;# 
  1202     029C                     	;# 
  1203     029C                     	;# 
  1204     029D                     	;# 
  1205     029E                     	;# 
  1206     029F                     	;# 
  1207     0311                     	;# 
  1208     0311                     	;# 
  1209     0312                     	;# 
  1210     0313                     	;# 
  1211     0314                     	;# 
  1212     0315                     	;# 
  1213     0315                     	;# 
  1214     0316                     	;# 
  1215     0318                     	;# 
  1216     0318                     	;# 
  1217     0319                     	;# 
  1218     031A                     	;# 
  1219     031C                     	;# 
  1220     031C                     	;# 
  1221     031D                     	;# 
  1222     031E                     	;# 
  1223     0394                     	;# 
  1224     0395                     	;# 
  1225     0396                     	;# 
  1226     0415                     	;# 
  1227     0416                     	;# 
  1228     0417                     	;# 
  1229     041C                     	;# 
  1230     041D                     	;# 
  1231     041E                     	;# 
  1232     0791                     	;# 
  1233     0792                     	;# 
  1234     0793                     	;# 
  1235     0794                     	;# 
  1236     0795                     	;# 
  1237     0798                     	;# 
  1238     0799                     	;# 
  1239     07A0                     	;# 
  1240     07A1                     	;# 
  1241     07A3                     	;# 
  1242     07A4                     	;# 
  1243     07A6                     	;# 
  1244     07A7                     	;# 
  1245     07A9                     	;# 
  1246     07AA                     	;# 
  1247     0FE4                     	;# 
  1248     0FE5                     	;# 
  1249     0FE6                     	;# 
  1250     0FE7                     	;# 
  1251     0FE8                     	;# 
  1252     0FE9                     	;# 
  1253     0FEA                     	;# 
  1254     0FEB                     	;# 
  1255     0FED                     	;# 
  1256     0FEE                     	;# 
  1257     0FEF                     	;# 
  1258     0000                     	;# 
  1259     0001                     	;# 
  1260     0002                     	;# 
  1261     0003                     	;# 
  1262     0004                     	;# 
  1263     0005                     	;# 
  1264     0006                     	;# 
  1265     0007                     	;# 
  1266     0008                     	;# 
  1267     0009                     	;# 
  1268     000A                     	;# 
  1269     000B                     	;# 
  1270     000C                     	;# 
  1271     000D                     	;# 
  1272     000E                     	;# 
  1273     0010                     	;# 
  1274     0011                     	;# 
  1275     0012                     	;# 
  1276     0013                     	;# 
  1277     0015                     	;# 
  1278     0016                     	;# 
  1279     0016                     	;# 
  1280     0017                     	;# 
  1281     0018                     	;# 
  1282     0019                     	;# 
  1283     001A                     	;# 
  1284     001B                     	;# 
  1285     001C                     	;# 
  1286     001E                     	;# 
  1287     001F                     	;# 
  1288     008C                     	;# 
  1289     008D                     	;# 
  1290     008E                     	;# 
  1291     0090                     	;# 
  1292     0091                     	;# 
  1293     0092                     	;# 
  1294     0093                     	;# 
  1295     0095                     	;# 
  1296     0096                     	;# 
  1297     0097                     	;# 
  1298     0098                     	;# 
  1299     0099                     	;# 
  1300     009A                     	;# 
  1301     009B                     	;# 
  1302     009B                     	;# 
  1303     009C                     	;# 
  1304     009D                     	;# 
  1305     009E                     	;# 
  1306     010C                     	;# 
  1307     010D                     	;# 
  1308     010E                     	;# 
  1309     0110                     	;# 
  1310     0111                     	;# 
  1311     0112                     	;# 
  1312     0113                     	;# 
  1313     0114                     	;# 
  1314     0115                     	;# 
  1315     0116                     	;# 
  1316     0117                     	;# 
  1317     0118                     	;# 
  1318     0119                     	;# 
  1319     011A                     	;# 
  1320     011B                     	;# 
  1321     011D                     	;# 
  1322     018C                     	;# 
  1323     018D                     	;# 
  1324     0191                     	;# 
  1325     0191                     	;# 
  1326     0192                     	;# 
  1327     0193                     	;# 
  1328     0193                     	;# 
  1329     0193                     	;# 
  1330     0194                     	;# 
  1331     0195                     	;# 
  1332     0196                     	;# 
  1333     0199                     	;# 
  1334     019A                     	;# 
  1335     019B                     	;# 
  1336     019B                     	;# 
  1337     019B                     	;# 
  1338     019B                     	;# 
  1339     019C                     	;# 
  1340     019C                     	;# 
  1341     019D                     	;# 
  1342     019E                     	;# 
  1343     019F                     	;# 
  1344     020D                     	;# 
  1345     0210                     	;# 
  1346     0211                     	;# 
  1347     0212                     	;# 
  1348     0213                     	;# 
  1349     0214                     	;# 
  1350     0215                     	;# 
  1351     0215                     	;# 
  1352     0216                     	;# 
  1353     0217                     	;# 
  1354     0291                     	;# 
  1355     0291                     	;# 
  1356     0292                     	;# 
  1357     0293                     	;# 
  1358     0294                     	;# 
  1359     0295                     	;# 
  1360     0295                     	;# 
  1361     0296                     	;# 
  1362     0298                     	;# 
  1363     0298                     	;# 
  1364     0299                     	;# 
  1365     029A                     	;# 
  1366     029B                     	;# 
  1367     029C                     	;# 
  1368     029C                     	;# 
  1369     029D                     	;# 
  1370     029E                     	;# 
  1371     029F                     	;# 
  1372     0311                     	;# 
  1373     0311                     	;# 
  1374     0312                     	;# 
  1375     0313                     	;# 
  1376     0314                     	;# 
  1377     0315                     	;# 
  1378     0315                     	;# 
  1379     0316                     	;# 
  1380     0318                     	;# 
  1381     0318                     	;# 
  1382     0319                     	;# 
  1383     031A                     	;# 
  1384     031C                     	;# 
  1385     031C                     	;# 
  1386     031D                     	;# 
  1387     031E                     	;# 
  1388     0394                     	;# 
  1389     0395                     	;# 
  1390     0396                     	;# 
  1391     0415                     	;# 
  1392     0416                     	;# 
  1393     0417                     	;# 
  1394     041C                     	;# 
  1395     041D                     	;# 
  1396     041E                     	;# 
  1397     0791                     	;# 
  1398     0792                     	;# 
  1399     0793                     	;# 
  1400     0794                     	;# 
  1401     0795                     	;# 
  1402     0798                     	;# 
  1403     0799                     	;# 
  1404     07A0                     	;# 
  1405     07A1                     	;# 
  1406     07A3                     	;# 
  1407     07A4                     	;# 
  1408     07A6                     	;# 
  1409     07A7                     	;# 
  1410     07A9                     	;# 
  1411     07AA                     	;# 
  1412     0FE4                     	;# 
  1413     0FE5                     	;# 
  1414     0FE6                     	;# 
  1415     0FE7                     	;# 
  1416     0FE8                     	;# 
  1417     0FE9                     	;# 
  1418     0FEA                     	;# 
  1419     0FEB                     	;# 
  1420     0FED                     	;# 
  1421     0FEE                     	;# 
  1422     0FEF                     	;# 
  1423     0000                     	;# 
  1424     0001                     	;# 
  1425     0002                     	;# 
  1426     0003                     	;# 
  1427     0004                     	;# 
  1428     0005                     	;# 
  1429     0006                     	;# 
  1430     0007                     	;# 
  1431     0008                     	;# 
  1432     0009                     	;# 
  1433     000A                     	;# 
  1434     000B                     	;# 
  1435     000C                     	;# 
  1436     000D                     	;# 
  1437     000E                     	;# 
  1438     0010                     	;# 
  1439     0011                     	;# 
  1440     0012                     	;# 
  1441     0013                     	;# 
  1442     0015                     	;# 
  1443     0016                     	;# 
  1444     0016                     	;# 
  1445     0017                     	;# 
  1446     0018                     	;# 
  1447     0019                     	;# 
  1448     001A                     	;# 
  1449     001B                     	;# 
  1450     001C                     	;# 
  1451     001E                     	;# 
  1452     001F                     	;# 
  1453     008C                     	;# 
  1454     008D                     	;# 
  1455     008E                     	;# 
  1456     0090                     	;# 
  1457     0091                     	;# 
  1458     0092                     	;# 
  1459     0093                     	;# 
  1460     0095                     	;# 
  1461     0096                     	;# 
  1462     0097                     	;# 
  1463     0098                     	;# 
  1464     0099                     	;# 
  1465     009A                     	;# 
  1466     009B                     	;# 
  1467     009B                     	;# 
  1468     009C                     	;# 
  1469     009D                     	;# 
  1470     009E                     	;# 
  1471     010C                     	;# 
  1472     010D                     	;# 
  1473     010E                     	;# 
  1474     0110                     	;# 
  1475     0111                     	;# 
  1476     0112                     	;# 
  1477     0113                     	;# 
  1478     0114                     	;# 
  1479     0115                     	;# 
  1480     0116                     	;# 
  1481     0117                     	;# 
  1482     0118                     	;# 
  1483     0119                     	;# 
  1484     011A                     	;# 
  1485     011B                     	;# 
  1486     011D                     	;# 
  1487     018C                     	;# 
  1488     018D                     	;# 
  1489     0191                     	;# 
  1490     0191                     	;# 
  1491     0192                     	;# 
  1492     0193                     	;# 
  1493     0193                     	;# 
  1494     0193                     	;# 
  1495     0194                     	;# 
  1496     0195                     	;# 
  1497     0196                     	;# 
  1498     0199                     	;# 
  1499     019A                     	;# 
  1500     019B                     	;# 
  1501     019B                     	;# 
  1502     019B                     	;# 
  1503     019B                     	;# 
  1504     019C                     	;# 
  1505     019C                     	;# 
  1506     019D                     	;# 
  1507     019E                     	;# 
  1508     019F                     	;# 
  1509     020D                     	;# 
  1510     0210                     	;# 
  1511     0211                     	;# 
  1512     0212                     	;# 
  1513     0213                     	;# 
  1514     0214                     	;# 
  1515     0215                     	;# 
  1516     0215                     	;# 
  1517     0216                     	;# 
  1518     0217                     	;# 
  1519     0291                     	;# 
  1520     0291                     	;# 
  1521     0292                     	;# 
  1522     0293                     	;# 
  1523     0294                     	;# 
  1524     0295                     	;# 
  1525     0295                     	;# 
  1526     0296                     	;# 
  1527     0298                     	;# 
  1528     0298                     	;# 
  1529     0299                     	;# 
  1530     029A                     	;# 
  1531     029B                     	;# 
  1532     029C                     	;# 
  1533     029C                     	;# 
  1534     029D                     	;# 
  1535     029E                     	;# 
  1536     029F                     	;# 
  1537     0311                     	;# 
  1538     0311                     	;# 
  1539     0312                     	;# 
  1540     0313                     	;# 
  1541     0314                     	;# 
  1542     0315                     	;# 
  1543     0315                     	;# 
  1544     0316                     	;# 
  1545     0318                     	;# 
  1546     0318                     	;# 
  1547     0319                     	;# 
  1548     031A                     	;# 
  1549     031C                     	;# 
  1550     031C                     	;# 
  1551     031D                     	;# 
  1552     031E                     	;# 
  1553     0394                     	;# 
  1554     0395                     	;# 
  1555     0396                     	;# 
  1556     0415                     	;# 
  1557     0416                     	;# 
  1558     0417                     	;# 
  1559     041C                     	;# 
  1560     041D                     	;# 
  1561     041E                     	;# 
  1562     0791                     	;# 
  1563     0792                     	;# 
  1564     0793                     	;# 
  1565     0794                     	;# 
  1566     0795                     	;# 
  1567     0798                     	;# 
  1568     0799                     	;# 
  1569     07A0                     	;# 
  1570     07A1                     	;# 
  1571     07A3                     	;# 
  1572     07A4                     	;# 
  1573     07A6                     	;# 
  1574     07A7                     	;# 
  1575     07A9                     	;# 
  1576     07AA                     	;# 
  1577     0FE4                     	;# 
  1578     0FE5                     	;# 
  1579     0FE6                     	;# 
  1580     0FE7                     	;# 
  1581     0FE8                     	;# 
  1582     0FE9                     	;# 
  1583     0FEA                     	;# 
  1584     0FEB                     	;# 
  1585     0FED                     	;# 
  1586     0FEE                     	;# 
  1587     0FEF                     	;# 
  1588     0000                     	;# 
  1589     0001                     	;# 
  1590     0002                     	;# 
  1591     0003                     	;# 
  1592     0004                     	;# 
  1593     0005                     	;# 
  1594     0006                     	;# 
  1595     0007                     	;# 
  1596     0008                     	;# 
  1597     0009                     	;# 
  1598     000A                     	;# 
  1599     000B                     	;# 
  1600     000C                     	;# 
  1601     000D                     	;# 
  1602     000E                     	;# 
  1603     0010                     	;# 
  1604     0011                     	;# 
  1605     0012                     	;# 
  1606     0013                     	;# 
  1607     0015                     	;# 
  1608     0016                     	;# 
  1609     0016                     	;# 
  1610     0017                     	;# 
  1611     0018                     	;# 
  1612     0019                     	;# 
  1613     001A                     	;# 
  1614     001B                     	;# 
  1615     001C                     	;# 
  1616     001E                     	;# 
  1617     001F                     	;# 
  1618     008C                     	;# 
  1619     008D                     	;# 
  1620     008E                     	;# 
  1621     0090                     	;# 
  1622     0091                     	;# 
  1623     0092                     	;# 
  1624     0093                     	;# 
  1625     0095                     	;# 
  1626     0096                     	;# 
  1627     0097                     	;# 
  1628     0098                     	;# 
  1629     0099                     	;# 
  1630     009A                     	;# 
  1631     009B                     	;# 
  1632     009B                     	;# 
  1633     009C                     	;# 
  1634     009D                     	;# 
  1635     009E                     	;# 
  1636     010C                     	;# 
  1637     010D                     	;# 
  1638     010E                     	;# 
  1639     0110                     	;# 
  1640     0111                     	;# 
  1641     0112                     	;# 
  1642     0113                     	;# 
  1643     0114                     	;# 
  1644     0115                     	;# 
  1645     0116                     	;# 
  1646     0117                     	;# 
  1647     0118                     	;# 
  1648     0119                     	;# 
  1649     011A                     	;# 
  1650     011B                     	;# 
  1651     011D                     	;# 
  1652     018C                     	;# 
  1653     018D                     	;# 
  1654     0191                     	;# 
  1655     0191                     	;# 
  1656     0192                     	;# 
  1657     0193                     	;# 
  1658     0193                     	;# 
  1659     0193                     	;# 
  1660     0194                     	;# 
  1661     0195                     	;# 
  1662     0196                     	;# 
  1663     0199                     	;# 
  1664     019A                     	;# 
  1665     019B                     	;# 
  1666     019B                     	;# 
  1667     019B                     	;# 
  1668     019B                     	;# 
  1669     019C                     	;# 
  1670     019C                     	;# 
  1671     019D                     	;# 
  1672     019E                     	;# 
  1673     019F                     	;# 
  1674     020D                     	;# 
  1675     0210                     	;# 
  1676     0211                     	;# 
  1677     0212                     	;# 
  1678     0213                     	;# 
  1679     0214                     	;# 
  1680     0215                     	;# 
  1681     0215                     	;# 
  1682     0216                     	;# 
  1683     0217                     	;# 
  1684     0291                     	;# 
  1685     0291                     	;# 
  1686     0292                     	;# 
  1687     0293                     	;# 
  1688     0294                     	;# 
  1689     0295                     	;# 
  1690     0295                     	;# 
  1691     0296                     	;# 
  1692     0298                     	;# 
  1693     0298                     	;# 
  1694     0299                     	;# 
  1695     029A                     	;# 
  1696     029B                     	;# 
  1697     029C                     	;# 
  1698     029C                     	;# 
  1699     029D                     	;# 
  1700     029E                     	;# 
  1701     029F                     	;# 
  1702     0311                     	;# 
  1703     0311                     	;# 
  1704     0312                     	;# 
  1705     0313                     	;# 
  1706     0314                     	;# 
  1707     0315                     	;# 
  1708     0315                     	;# 
  1709     0316                     	;# 
  1710     0318                     	;# 
  1711     0318                     	;# 
  1712     0319                     	;# 
  1713     031A                     	;# 
  1714     031C                     	;# 
  1715     031C                     	;# 
  1716     031D                     	;# 
  1717     031E                     	;# 
  1718     0394                     	;# 
  1719     0395                     	;# 
  1720     0396                     	;# 
  1721     0415                     	;# 
  1722     0416                     	;# 
  1723     0417                     	;# 
  1724     041C                     	;# 
  1725     041D                     	;# 
  1726     041E                     	;# 
  1727     0791                     	;# 
  1728     0792                     	;# 
  1729     0793                     	;# 
  1730     0794                     	;# 
  1731     0795                     	;# 
  1732     0798                     	;# 
  1733     0799                     	;# 
  1734     07A0                     	;# 
  1735     07A1                     	;# 
  1736     07A3                     	;# 
  1737     07A4                     	;# 
  1738     07A6                     	;# 
  1739     07A7                     	;# 
  1740     07A9                     	;# 
  1741     07AA                     	;# 
  1742     0FE4                     	;# 
  1743     0FE5                     	;# 
  1744     0FE6                     	;# 
  1745     0FE7                     	;# 
  1746     0FE8                     	;# 
  1747     0FE9                     	;# 
  1748     0FEA                     	;# 
  1749     0FEB                     	;# 
  1750     0FED                     	;# 
  1751     0FEE                     	;# 
  1752     0FEF                     	;# 
  1753     0000                     	;# 
  1754     0001                     	;# 
  1755     0002                     	;# 
  1756     0003                     	;# 
  1757     0004                     	;# 
  1758     0005                     	;# 
  1759     0006                     	;# 
  1760     0007                     	;# 
  1761     0008                     	;# 
  1762     0009                     	;# 
  1763     000A                     	;# 
  1764     000B                     	;# 
  1765     000C                     	;# 
  1766     000D                     	;# 
  1767     000E                     	;# 
  1768     0010                     	;# 
  1769     0011                     	;# 
  1770     0012                     	;# 
  1771     0013                     	;# 
  1772     0015                     	;# 
  1773     0016                     	;# 
  1774     0016                     	;# 
  1775     0017                     	;# 
  1776     0018                     	;# 
  1777     0019                     	;# 
  1778     001A                     	;# 
  1779     001B                     	;# 
  1780     001C                     	;# 
  1781     001E                     	;# 
  1782     001F                     	;# 
  1783     008C                     	;# 
  1784     008D                     	;# 
  1785     008E                     	;# 
  1786     0090                     	;# 
  1787     0091                     	;# 
  1788     0092                     	;# 
  1789     0093                     	;# 
  1790     0095                     	;# 
  1791     0096                     	;# 
  1792     0097                     	;# 
  1793     0098                     	;# 
  1794     0099                     	;# 
  1795     009A                     	;# 
  1796     009B                     	;# 
  1797     009B                     	;# 
  1798     009C                     	;# 
  1799     009D                     	;# 
  1800     009E                     	;# 
  1801     010C                     	;# 
  1802     010D                     	;# 
  1803     010E                     	;# 
  1804     0110                     	;# 
  1805     0111                     	;# 
  1806     0112                     	;# 
  1807     0113                     	;# 
  1808     0114                     	;# 
  1809     0115                     	;# 
  1810     0116                     	;# 
  1811     0117                     	;# 
  1812     0118                     	;# 
  1813     0119                     	;# 
  1814     011A                     	;# 
  1815     011B                     	;# 
  1816     011D                     	;# 
  1817     018C                     	;# 
  1818     018D                     	;# 
  1819     0191                     	;# 
  1820     0191                     	;# 
  1821     0192                     	;# 
  1822     0193                     	;# 
  1823     0193                     	;# 
  1824     0193                     	;# 
  1825     0194                     	;# 
  1826     0195                     	;# 
  1827     0196                     	;# 
  1828     0199                     	;# 
  1829     019A                     	;# 
  1830     019B                     	;# 
  1831     019B                     	;# 
  1832     019B                     	;# 
  1833     019B                     	;# 
  1834     019C                     	;# 
  1835     019C                     	;# 
  1836     019D                     	;# 
  1837     019E                     	;# 
  1838     019F                     	;# 
  1839     020D                     	;# 
  1840     0210                     	;# 
  1841     0211                     	;# 
  1842     0212                     	;# 
  1843     0213                     	;# 
  1844     0214                     	;# 
  1845     0215                     	;# 
  1846     0215                     	;# 
  1847     0216                     	;# 
  1848     0217                     	;# 
  1849     0291                     	;# 
  1850     0291                     	;# 
  1851     0292                     	;# 
  1852     0293                     	;# 
  1853     0294                     	;# 
  1854     0295                     	;# 
  1855     0295                     	;# 
  1856     0296                     	;# 
  1857     0298                     	;# 
  1858     0298                     	;# 
  1859     0299                     	;# 
  1860     029A                     	;# 
  1861     029B                     	;# 
  1862     029C                     	;# 
  1863     029C                     	;# 
  1864     029D                     	;# 
  1865     029E                     	;# 
  1866     029F                     	;# 
  1867     0311                     	;# 
  1868     0311                     	;# 
  1869     0312                     	;# 
  1870     0313                     	;# 
  1871     0314                     	;# 
  1872     0315                     	;# 
  1873     0315                     	;# 
  1874     0316                     	;# 
  1875     0318                     	;# 
  1876     0318                     	;# 
  1877     0319                     	;# 
  1878     031A                     	;# 
  1879     031C                     	;# 
  1880     031C                     	;# 
  1881     031D                     	;# 
  1882     031E                     	;# 
  1883     0394                     	;# 
  1884     0395                     	;# 
  1885     0396                     	;# 
  1886     0415                     	;# 
  1887     0416                     	;# 
  1888     0417                     	;# 
  1889     041C                     	;# 
  1890     041D                     	;# 
  1891     041E                     	;# 
  1892     0791                     	;# 
  1893     0792                     	;# 
  1894     0793                     	;# 
  1895     0794                     	;# 
  1896     0795                     	;# 
  1897     0798                     	;# 
  1898     0799                     	;# 
  1899     07A0                     	;# 
  1900     07A1                     	;# 
  1901     07A3                     	;# 
  1902     07A4                     	;# 
  1903     07A6                     	;# 
  1904     07A7                     	;# 
  1905     07A9                     	;# 
  1906     07AA                     	;# 
  1907     0FE4                     	;# 
  1908     0FE5                     	;# 
  1909     0FE6                     	;# 
  1910     0FE7                     	;# 
  1911     0FE8                     	;# 
  1912     0FE9                     	;# 
  1913     0FEA                     	;# 
  1914     0FEB                     	;# 
  1915     0FED                     	;# 
  1916     0FEE                     	;# 
  1917     0FEF                     	;# 
  1918     0000                     	;# 
  1919     0001                     	;# 
  1920     0002                     	;# 
  1921     0003                     	;# 
  1922     0004                     	;# 
  1923     0005                     	;# 
  1924     0006                     	;# 
  1925     0007                     	;# 
  1926     0008                     	;# 
  1927     0009                     	;# 
  1928     000A                     	;# 
  1929     000B                     	;# 
  1930     000C                     	;# 
  1931     000D                     	;# 
  1932     000E                     	;# 
  1933     0010                     	;# 
  1934     0011                     	;# 
  1935     0012                     	;# 
  1936     0013                     	;# 
  1937     0015                     	;# 
  1938     0016                     	;# 
  1939     0016                     	;# 
  1940     0017                     	;# 
  1941     0018                     	;# 
  1942     0019                     	;# 
  1943     001A                     	;# 
  1944     001B                     	;# 
  1945     001C                     	;# 
  1946     001E                     	;# 
  1947     001F                     	;# 
  1948     008C                     	;# 
  1949     008D                     	;# 
  1950     008E                     	;# 
  1951     0090                     	;# 
  1952     0091                     	;# 
  1953     0092                     	;# 
  1954     0093                     	;# 
  1955     0095                     	;# 
  1956     0096                     	;# 
  1957     0097                     	;# 
  1958     0098                     	;# 
  1959     0099                     	;# 
  1960     009A                     	;# 
  1961     009B                     	;# 
  1962     009B                     	;# 
  1963     009C                     	;# 
  1964     009D                     	;# 
  1965     009E                     	;# 
  1966     010C                     	;# 
  1967     010D                     	;# 
  1968     010E                     	;# 
  1969     0110                     	;# 
  1970     0111                     	;# 
  1971     0112                     	;# 
  1972     0113                     	;# 
  1973     0114                     	;# 
  1974     0115                     	;# 
  1975     0116                     	;# 
  1976     0117                     	;# 
  1977     0118                     	;# 
  1978     0119                     	;# 
  1979     011A                     	;# 
  1980     011B                     	;# 
  1981     011D                     	;# 
  1982     018C                     	;# 
  1983     018D                     	;# 
  1984     0191                     	;# 
  1985     0191                     	;# 
  1986     0192                     	;# 
  1987     0193                     	;# 
  1988     0193                     	;# 
  1989     0193                     	;# 
  1990     0194                     	;# 
  1991     0195                     	;# 
  1992     0196                     	;# 
  1993     0199                     	;# 
  1994     019A                     	;# 
  1995     019B                     	;# 
  1996     019B                     	;# 
  1997     019B                     	;# 
  1998     019B                     	;# 
  1999     019C                     	;# 
  2000     019C                     	;# 
  2001     019D                     	;# 
  2002     019E                     	;# 
  2003     019F                     	;# 
  2004     020D                     	;# 
  2005     0210                     	;# 
  2006     0211                     	;# 
  2007     0212                     	;# 
  2008     0213                     	;# 
  2009     0214                     	;# 
  2010     0215                     	;# 
  2011     0215                     	;# 
  2012     0216                     	;# 
  2013     0217                     	;# 
  2014     0291                     	;# 
  2015     0291                     	;# 
  2016     0292                     	;# 
  2017     0293                     	;# 
  2018     0294                     	;# 
  2019     0295                     	;# 
  2020     0295                     	;# 
  2021     0296                     	;# 
  2022     0298                     	;# 
  2023     0298                     	;# 
  2024     0299                     	;# 
  2025     029A                     	;# 
  2026     029B                     	;# 
  2027     029C                     	;# 
  2028     029C                     	;# 
  2029     029D                     	;# 
  2030     029E                     	;# 
  2031     029F                     	;# 
  2032     0311                     	;# 
  2033     0311                     	;# 
  2034     0312                     	;# 
  2035     0313                     	;# 
  2036     0314                     	;# 
  2037     0315                     	;# 
  2038     0315                     	;# 
  2039     0316                     	;# 
  2040     0318                     	;# 
  2041     0318                     	;# 
  2042     0319                     	;# 
  2043     031A                     	;# 
  2044     031C                     	;# 
  2045     031C                     	;# 
  2046     031D                     	;# 
  2047     031E                     	;# 
  2048     0394                     	;# 
  2049     0395                     	;# 
  2050     0396                     	;# 
  2051     0415                     	;# 
  2052     0416                     	;# 
  2053     0417                     	;# 
  2054     041C                     	;# 
  2055     041D                     	;# 
  2056     041E                     	;# 
  2057     0791                     	;# 
  2058     0792                     	;# 
  2059     0793                     	;# 
  2060     0794                     	;# 
  2061     0795                     	;# 
  2062     0798                     	;# 
  2063     0799                     	;# 
  2064     07A0                     	;# 
  2065     07A1                     	;# 
  2066     07A3                     	;# 
  2067     07A4                     	;# 
  2068     07A6                     	;# 
  2069     07A7                     	;# 
  2070     07A9                     	;# 
  2071     07AA                     	;# 
  2072     0FE4                     	;# 
  2073     0FE5                     	;# 
  2074     0FE6                     	;# 
  2075     0FE7                     	;# 
  2076     0FE8                     	;# 
  2077     0FE9                     	;# 
  2078     0FEA                     	;# 
  2079     0FEB                     	;# 
  2080     0FED                     	;# 
  2081     0FEE                     	;# 
  2082     0FEF                     	;# 
  2083                           
  2084                           	psect	nvBANK0
  2085     005E                     __pnvBANK0:
  2086     005E                     _TMR1_InterruptHandler:
  2087     005E                     	ds	2
  2088     000E                     _PORTCbits	set	14
  2089     000D                     _PORTBbits	set	13
  2090     000B                     _INTCONbits	set	11
  2091     0019                     _T1GCONbits	set	25
  2092     0018                     _T1CONbits	set	24
  2093     0018                     _T1CON	set	24
  2094     0016                     _TMR1L	set	22
  2095     0017                     _TMR1H	set	23
  2096     0019                     _T1GCON	set	25
  2097     001C                     _T2CONbits	set	28
  2098     001C                     _T2CON	set	28
  2099     0011                     _PIR1bits	set	17
  2100     001A                     _TMR2	set	26
  2101     001B                     _PR2	set	27
  2102     008E                     _TRISCbits	set	142
  2103     0091                     _PIE1bits	set	145
  2104     0095                     _OPTION_REGbits	set	149
  2105     008E                     _TRISC	set	142
  2106     008D                     _TRISB	set	141
  2107     008C                     _TRISA	set	140
  2108     0090                     _TRISE	set	144
  2109     0097                     _WDTCON	set	151
  2110     0098                     _OSCTUNE	set	152
  2111     0099                     _OSCCON	set	153
  2112     010C                     _LATAbits	set	268
  2113     010D                     _LATBbits	set	269
  2114     010E                     _LATCbits	set	270
  2115     011D                     _APFCON	set	285
  2116     010E                     _LATC	set	270
  2117     010D                     _LATB	set	269
  2118     010C                     _LATA	set	268
  2119     0110                     _LATE	set	272
  2120     0116                     _BORCON	set	278
  2121     018C                     _ANSELA	set	396
  2122     018D                     _ANSELB	set	397
  2123     020D                     _WPUB	set	525
  2124     0210                     _WPUE	set	528
  2125     029E                     _CCPTMRS0bits	set	670
  2126     0291                     _CCPR1L	set	657
  2127     0292                     _CCPR1H	set	658
  2128     0296                     _PSTR1CON	set	662
  2129     0294                     _PWM1CON	set	660
  2130     0295                     _ECCP1AS	set	661
  2131     0293                     _CCP1CON	set	659
  2132                           
  2133                           	psect	cinit
  2134     001B                     start_initialization:	
  2135                           ; #config settings
  2136                           
  2137     001B                     __initialization:
  2138                           
  2139                           ; Clear objects allocated to COMMON
  2140     001B  01FA               	clrf	__pbssCOMMON& (0+127)
  2141     001C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2142                           
  2143                           ; Clear objects allocated to BANK0
  2144     001D  3020               	movlw	low __pbssBANK0
  2145     001E  0084               	movwf	4
  2146     001F  3000               	movlw	high __pbssBANK0
  2147     0020  0085               	movwf	5
  2148     0021  3028               	movlw	40
  2149     0022  318C  24C4  3180   	fcall	clear_ram0
  2150     0025                     end_of_initialization:	
  2151                           ;End of C runtime variable initialization code
  2152                           
  2153     0025                     __end_of__initialization:
  2154     0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2155     0026  0020               	movlb	0
  2156     0027  3187  2F22         	ljmp	_main	;jump to C main() function
  2157                           
  2158                           	psect	bssCOMMON
  2159     007A                     __pbssCOMMON:
  2160     007A                     _is_on:
  2161     007A                     	ds	1
  2162     007B                     _current:
  2163     007B                     	ds	1
  2164                           
  2165                           	psect	bssBANK0
  2166     0020                     __pbssBANK0:
  2167     0020                     _digit_displayed:
  2168     0020                     	ds	4
  2169     0024                     _digit_values:
  2170     0024                     	ds	4
  2171     0028                     _date_displayed_ticks:
  2172     0028                     	ds	2
  2173     002A                     _timer_count:
  2174     002A                     	ds	2
  2175     002C                     _timer1ReloadVal:
  2176     002C                     	ds	2
  2177     002E                     _state:
  2178     002E                     	ds	1
  2179     002F                     _timer_ticked:
  2180     002F                     	ds	1
  2181     0030                     _updated_time:
  2182     0030                     	ds	9
  2183     0039                     _time:
  2184     0039                     	ds	9
  2185     0042                     _btn3:
  2186     0042                     	ds	2
  2187     0044                     _btn2:
  2188     0044                     	ds	2
  2189     0046                     _btn1:
  2190     0046                     	ds	2
  2191                           
  2192                           	psect	clrtext
  2193     0CC4                     clear_ram0:	
  2194                           ;	Called with FSR0 containing the base address, and
  2195                           ;	WREG with the size to clear
  2196                           
  2197     0CC4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2198     0CC5                     clrloop0:
  2199     0CC5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2200     0CC6  3101               	addfsr 0,1
  2201     0CC7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2202     0CC8  2CC5               	goto	clrloop0	;have we reached the end yet?
  2203     0CC9  3400               	retlw	0	;all done for this memory range, return
  2204                           
  2205                           	psect	cstackCOMMON
  2206     0070                     __pcstackCOMMON:
  2207     0070                     ?_PIN_MANAGER_Initialize:
  2208     0070                     ?_OSCILLATOR_Initialize:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211     0070                     ?_WDT_Initialize:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214     0070                     ?_EPWM1_Initialize:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217     0070                     ?_TMR2_Initialize:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220     0070                     ?_TMR1_Initialize:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223     0070                     ?_TMR1_DefaultInterruptHandler:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226     0070                     ??_TMR1_DefaultInterruptHandler:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229     0070                     ?_decrease_hour:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232     0070                     ?_increase_hour:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235     0070                     ?_set_digit_displayed_all:	
  2236                           ; 1 bytes @ 0x0
  2237                           
  2238     0070                     ?_decrease_minute:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241     0070                     ?_increase_minute:	
  2242                           ; 1 bytes @ 0x0
  2243                           
  2244     0070                     ?_decrease_date:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247     0070                     ?_increase_date:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250     0070                     ?_update_time:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253     0070                     ?_decrease_month:	
  2254                           ; 1 bytes @ 0x0
  2255                           
  2256     0070                     ?_increase_month:	
  2257                           ; 1 bytes @ 0x0
  2258                           
  2259     0070                     ?_read_time:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262     0070                     ?_refresh_digits:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265     0070                     ?_add_second:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268     0070                     ?_SYSTEM_Initialize:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271     0070                     ?_TMR1_WriteTimer:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274     0070                     ?_TMR1_ISR:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277     0070                     ?_INTERRUPT_InterruptManager:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280     0070                     ?_tmr1_ISR:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283     0070                     ??_tmr1_ISR:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286     0070                     ?_read_buttons:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289     0070                     ?_set_time_digits:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292     0070                     ?_set_date_digits:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295     0070                     ?_handle_display_time:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298     0070                     ?_handle_display_date:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301     0070                     ?_handle_set_hour:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304     0070                     ?_handle_set_minute:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307     0070                     ?_handle_set_day:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310     0070                     ?_handle_set_month:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313     0070                     ?_handle_state:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316     0070                     ?_main:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319     0070                     ?_i2c_start:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322     0070                     ?_i2c_stop:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325     0070                     ?_bit_out:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328     0070                     ?_bit_in:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331     0070                     ?_i2c_wr:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334     0070                     ?_i2c_rd:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337     0070                     ?_on_digit:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340     0070                     ?_off_digits:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343     0070                     TMR1_WriteTimer@timerVal:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346                           
  2347                           ; 2 bytes @ 0x0
  2348     0070                     	ds	2
  2349     0072                     ??_PIN_MANAGER_Initialize:
  2350     0072                     ??_OSCILLATOR_Initialize:	
  2351                           ; 1 bytes @ 0x2
  2352                           
  2353     0072                     ??_WDT_Initialize:	
  2354                           ; 1 bytes @ 0x2
  2355                           
  2356     0072                     ??_EPWM1_Initialize:	
  2357                           ; 1 bytes @ 0x2
  2358                           
  2359     0072                     ??_TMR2_Initialize:	
  2360                           ; 1 bytes @ 0x2
  2361                           
  2362     0072                     ?_TMR1_SetInterruptHandler:	
  2363                           ; 1 bytes @ 0x2
  2364                           
  2365     0072                     ?_read_button:	
  2366                           ; 1 bytes @ 0x2
  2367                           
  2368     0072                     ?_copy_time_fields:	
  2369                           ; 1 bytes @ 0x2
  2370                           
  2371     0072                     ??_decrease_hour:	
  2372                           ; 1 bytes @ 0x2
  2373                           
  2374     0072                     ?_set_digit_displayed:	
  2375                           ; 1 bytes @ 0x2
  2376                           
  2377     0072                     ??_decrease_minute:	
  2378                           ; 1 bytes @ 0x2
  2379                           
  2380     0072                     ??_decrease_date:	
  2381                           ; 1 bytes @ 0x2
  2382                           
  2383     0072                     ??_increase_date:	
  2384                           ; 1 bytes @ 0x2
  2385                           
  2386     0072                     ??_decrease_month:	
  2387                           ; 1 bytes @ 0x2
  2388                           
  2389     0072                     ??_increase_month:	
  2390                           ; 1 bytes @ 0x2
  2391                           
  2392     0072                     ??_add_second:	
  2393                           ; 1 bytes @ 0x2
  2394                           
  2395     0072                     ??_TMR1_WriteTimer:	
  2396                           ; 1 bytes @ 0x2
  2397                           
  2398     0072                     ??_TMR1_ISR:	
  2399                           ; 1 bytes @ 0x2
  2400                           
  2401     0072                     ??_INTERRUPT_InterruptManager:	
  2402                           ; 1 bytes @ 0x2
  2403                           
  2404     0072                     ??_i2c_start:	
  2405                           ; 1 bytes @ 0x2
  2406                           
  2407     0072                     ??_i2c_stop:	
  2408                           ; 1 bytes @ 0x2
  2409                           
  2410     0072                     ??_bit_out:	
  2411                           ; 1 bytes @ 0x2
  2412                           
  2413     0072                     ??_bit_in:	
  2414                           ; 1 bytes @ 0x2
  2415                           
  2416     0072                     ??_on_digit:	
  2417                           ; 1 bytes @ 0x2
  2418                           
  2419     0072                     ??_off_digits:	
  2420                           ; 1 bytes @ 0x2
  2421                           
  2422     0072                     ?___bmul:	
  2423                           ; 1 bytes @ 0x2
  2424                           
  2425     0072                     ?___awdiv:	
  2426                           ; 1 bytes @ 0x2
  2427                           
  2428     0072                     ?___awmod:	
  2429                           ; 2 bytes @ 0x2
  2430                           
  2431     0072                     set_digit_displayed@dig1:	
  2432                           ; 2 bytes @ 0x2
  2433                           
  2434     0072                     read_button@pin_val:	
  2435                           ; 1 bytes @ 0x2
  2436                           
  2437     0072                     decrease_hour@time:	
  2438                           ; 1 bytes @ 0x2
  2439                           
  2440     0072                     decrease_minute@time:	
  2441                           ; 1 bytes @ 0x2
  2442                           
  2443     0072                     decrease_date@time:	
  2444                           ; 1 bytes @ 0x2
  2445                           
  2446     0072                     decrease_month@time:	
  2447                           ; 1 bytes @ 0x2
  2448                           
  2449     0072                     copy_time_fields@dest_time:	
  2450                           ; 1 bytes @ 0x2
  2451                           
  2452     0072                     ___bmul@multiplicand:	
  2453                           ; 1 bytes @ 0x2
  2454                           
  2455     0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2456                           ; 1 bytes @ 0x2
  2457                           
  2458     0072                     ___awdiv@divisor:	
  2459                           ; 2 bytes @ 0x2
  2460                           
  2461     0072                     ___awmod@divisor:	
  2462                           ; 2 bytes @ 0x2
  2463                           
  2464                           
  2465                           ; 2 bytes @ 0x2
  2466     0072                     	ds	1
  2467     0073                     ??_read_button:
  2468     0073                     ??_copy_time_fields:	
  2469                           ; 1 bytes @ 0x3
  2470                           
  2471     0073                     ??___bmul:	
  2472                           ; 1 bytes @ 0x3
  2473                           
  2474     0073                     bit_out@data:	
  2475                           ; 1 bytes @ 0x3
  2476                           
  2477     0073                     bit_in@data:	
  2478                           ; 1 bytes @ 0x3
  2479                           
  2480     0073                     set_digit_displayed@dig2:	
  2481                           ; 1 bytes @ 0x3
  2482                           
  2483     0073                     increase_date@time:	
  2484                           ; 1 bytes @ 0x3
  2485                           
  2486     0073                     increase_month@time:	
  2487                           ; 1 bytes @ 0x3
  2488                           
  2489     0073                     copy_time_fields@src_time:	
  2490                           ; 1 bytes @ 0x3
  2491                           
  2492     0073                     add_second@time:	
  2493                           ; 1 bytes @ 0x3
  2494                           
  2495                           
  2496                           ; 1 bytes @ 0x3
  2497     0073                     	ds	1
  2498     0074                     ??_TMR1_Initialize:
  2499     0074                     ??_TMR1_SetInterruptHandler:	
  2500                           ; 1 bytes @ 0x4
  2501                           
  2502     0074                     ??_SYSTEM_Initialize:	
  2503                           ; 1 bytes @ 0x4
  2504                           
  2505     0074                     ??_i2c_wr:	
  2506                           ; 1 bytes @ 0x4
  2507                           
  2508     0074                     ??_i2c_rd:	
  2509                           ; 1 bytes @ 0x4
  2510                           
  2511     0074                     set_digit_displayed@dig3:	
  2512                           ; 1 bytes @ 0x4
  2513                           
  2514     0074                     on_digit@number:	
  2515                           ; 1 bytes @ 0x4
  2516                           
  2517     0074                     ___bmul@product:	
  2518                           ; 1 bytes @ 0x4
  2519                           
  2520     0074                     ___awdiv@dividend:	
  2521                           ; 1 bytes @ 0x4
  2522                           
  2523     0074                     ___awmod@dividend:	
  2524                           ; 2 bytes @ 0x4
  2525                           
  2526                           
  2527                           ; 2 bytes @ 0x4
  2528     0074                     	ds	1
  2529     0075                     ??_set_digit_displayed:
  2530     0075                     ??_refresh_digits:	
  2531                           ; 1 bytes @ 0x5
  2532                           
  2533     0075                     i2c_wr@ack:	
  2534                           ; 1 bytes @ 0x5
  2535                           
  2536     0075                     i2c_rd@ack:	
  2537                           ; 1 bytes @ 0x5
  2538                           
  2539     0075                     set_digit_displayed@dig0:	
  2540                           ; 1 bytes @ 0x5
  2541                           
  2542     0075                     read_button@btn:	
  2543                           ; 1 bytes @ 0x5
  2544                           
  2545     0075                     ___bmul@multiplier:	
  2546                           ; 1 bytes @ 0x5
  2547                           
  2548                           
  2549                           ; 1 bytes @ 0x5
  2550     0075                     	ds	1
  2551     0076                     ??_set_digit_displayed_all:
  2552     0076                     ??_read_buttons:	
  2553                           ; 1 bytes @ 0x6
  2554                           
  2555     0076                     ??___awdiv:	
  2556                           ; 1 bytes @ 0x6
  2557                           
  2558     0076                     ??___awmod:	
  2559                           ; 1 bytes @ 0x6
  2560                           
  2561     0076                     i2c_wr@data:	
  2562                           ; 1 bytes @ 0x6
  2563                           
  2564     0076                     i2c_rd@i:	
  2565                           ; 1 bytes @ 0x6
  2566                           
  2567                           
  2568                           ; 1 bytes @ 0x6
  2569     0076                     	ds	1
  2570     0077                     i2c_wr@i:
  2571     0077                     i2c_rd@ret:	
  2572                           ; 1 bytes @ 0x7
  2573                           
  2574     0077                     ___awmod@counter:	
  2575                           ; 1 bytes @ 0x7
  2576                           
  2577                           
  2578                           ; 1 bytes @ 0x7
  2579     0077                     	ds	1
  2580     0078                     ?_i2c_wr_bytes:
  2581     0078                     ?_i2c_rd_bytes:	
  2582                           ; 1 bytes @ 0x8
  2583                           
  2584     0078                     i2c_wr_bytes@size:	
  2585                           ; 1 bytes @ 0x8
  2586                           
  2587     0078                     i2c_rd_bytes@size:	
  2588                           ; 1 bytes @ 0x8
  2589                           
  2590     0078                     ___awmod@sign:	
  2591                           ; 1 bytes @ 0x8
  2592                           
  2593                           
  2594                           ; 1 bytes @ 0x8
  2595     0078                     	ds	1
  2596     0079                     ??_set_digits:
  2597     0079                     ??_increase_hour:	
  2598                           ; 1 bytes @ 0x9
  2599                           
  2600     0079                     ??_increase_minute:	
  2601                           ; 1 bytes @ 0x9
  2602                           
  2603     0079                     ??_i2c_wr_bytes:	
  2604                           ; 1 bytes @ 0x9
  2605                           
  2606     0079                     set_digits@dig0:	
  2607                           ; 1 bytes @ 0x9
  2608                           
  2609     0079                     increase_minute@time:	
  2610                           ; 1 bytes @ 0x9
  2611                           
  2612                           
  2613                           ; 1 bytes @ 0x9
  2614     0079                     	ds	1
  2615     007A                     ??_handle_display_time:
  2616     007A                     ??_handle_display_date:	
  2617                           ; 1 bytes @ 0xA
  2618                           
  2619     007A                     ??_handle_set_hour:	
  2620                           ; 1 bytes @ 0xA
  2621                           
  2622     007A                     ??_handle_set_minute:	
  2623                           ; 1 bytes @ 0xA
  2624                           
  2625     007A                     ??_handle_set_day:	
  2626                           ; 1 bytes @ 0xA
  2627                           
  2628     007A                     ??_handle_set_month:	
  2629                           ; 1 bytes @ 0xA
  2630                           
  2631     007A                     ??_main:	
  2632                           ; 1 bytes @ 0xA
  2633                           
  2634                           
  2635                           	psect	cstackBANK0
  2636     0048                     __pcstackBANK0:	
  2637                           ; 1 bytes @ 0xA
  2638                           
  2639     0048                     ??_i2c_rd_bytes:
  2640     0048                     i2c_wr_bytes@byte_arr:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643     0048                     increase_hour@time:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646     0048                     ___awdiv@counter:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649                           
  2650                           ; 1 bytes @ 0x0
  2651     0048                     	ds	1
  2652     0049                     i2c_wr_bytes@i:
  2653     0049                     ___awdiv@sign:	
  2654                           ; 1 bytes @ 0x1
  2655                           
  2656                           
  2657                           ; 1 bytes @ 0x1
  2658     0049                     	ds	1
  2659     004A                     i2c_rd_bytes@byte_arr:
  2660     004A                     ___awdiv@quotient:	
  2661                           ; 1 bytes @ 0x2
  2662                           
  2663                           
  2664                           ; 2 bytes @ 0x2
  2665     004A                     	ds	1
  2666     004B                     i2c_rd_bytes@i:
  2667                           
  2668                           ; 1 bytes @ 0x3
  2669     004B                     	ds	1
  2670     004C                     ?_set_digits:
  2671     004C                     ??_update_time:	
  2672                           ; 1 bytes @ 0x4
  2673                           
  2674     004C                     ??_read_time:	
  2675                           ; 1 bytes @ 0x4
  2676                           
  2677     004C                     set_digits@dig1:	
  2678                           ; 1 bytes @ 0x4
  2679                           
  2680                           
  2681                           ; 1 bytes @ 0x4
  2682     004C                     	ds	1
  2683     004D                     set_digits@dig2:
  2684                           
  2685                           ; 1 bytes @ 0x5
  2686     004D                     	ds	1
  2687     004E                     set_digits@dig3:
  2688     004E                     read_time@reg_arr:	
  2689                           ; 1 bytes @ 0x6
  2690                           
  2691                           
  2692                           ; 7 bytes @ 0x6
  2693     004E                     	ds	1
  2694     004F                     ??_set_time_digits:
  2695     004F                     ??_set_date_digits:	
  2696                           ; 1 bytes @ 0x7
  2697                           
  2698                           
  2699                           ; 1 bytes @ 0x7
  2700     004F                     	ds	5
  2701     0054                     update_time@reg_arr:
  2702                           
  2703                           ; 7 bytes @ 0xC
  2704     0054                     	ds	1
  2705     0055                     read_time@time:
  2706                           
  2707                           ; 1 bytes @ 0xD
  2708     0055                     	ds	2
  2709     0057                     set_time_digits@tm:
  2710     0057                     set_date_digits@tm:	
  2711                           ; 1 bytes @ 0xF
  2712                           
  2713                           
  2714                           ; 1 bytes @ 0xF
  2715     0057                     	ds	4
  2716     005B                     update_time@time:
  2717                           
  2718                           ; 1 bytes @ 0x13
  2719     005B                     	ds	1
  2720     005C                     ??_handle_state:
  2721                           
  2722                           ; 1 bytes @ 0x14
  2723     005C                     	ds	2
  2724                           
  2725                           	psect	maintext
  2726     0722                     __pmaintext:	
  2727 ;;
  2728 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2729 ;;
  2730 ;; *************** function _main *****************
  2731 ;; Defined at:
  2732 ;;		line 225 in file "main.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : B1F/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2746 ;;      Params:         0       0       0       0       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0       0
  2749 ;;      Totals:         0       0       0       0       0       0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels required when called: 9
  2752 ;; This function calls:
  2753 ;;		_SYSTEM_Initialize
  2754 ;;		_TMR1_SetInterruptHandler
  2755 ;;		_add_second
  2756 ;;		_handle_state
  2757 ;;		_read_buttons
  2758 ;;		_read_time
  2759 ;;		_refresh_digits
  2760 ;;		_set_time_digits
  2761 ;; This function is called by:
  2762 ;;		Startup code after reset
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766     0722                     _main:	
  2767                           ;psect for function _main
  2768                           
  2769     0722                     l3230:	
  2770                           ;incstack = 0
  2771                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2772                           
  2773                           
  2774                           ;main.c: 227:     SYSTEM_Initialize();
  2775     0722  318D  2537  3187   	fcall	_SYSTEM_Initialize
  2776                           
  2777                           ;main.c: 232:     TMR1_SetInterruptHandler(tmr1_ISR);
  2778     0725  304A               	movlw	low _tmr1_ISR
  2779     0726  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2780     0727  300D               	movlw	high _tmr1_ISR
  2781     0728  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2782     0729  318C  24B8  3187   	fcall	_TMR1_SetInterruptHandler
  2783     072C                     l3232:
  2784                           
  2785                           ;main.c: 235:     (INTCONbits.GIE = 1);
  2786     072C  178B               	bsf	11,7	;volatile
  2787     072D                     l3234:
  2788                           
  2789                           ;main.c: 238:     (INTCONbits.PEIE = 1);
  2790     072D  170B               	bsf	11,6	;volatile
  2791     072E                     l3236:
  2792                           
  2793                           ;main.c: 246:     read_time(&time);
  2794     072E  3039               	movlw	(low (_time| 0))& (0+255)
  2795     072F  3181  21C2  3187   	fcall	_read_time
  2796     0732                     l3238:
  2797                           
  2798                           ;main.c: 247:     set_time_digits(&time);
  2799     0732  3039               	movlw	(low (_time| 0))& (0+255)
  2800     0733  3185  25E8  3187   	fcall	_set_time_digits
  2801     0736                     l3240:
  2802                           
  2803                           ;main.c: 250:         if (timer_ticked) {
  2804     0736  0020               	movlb	0	; select bank0
  2805     0737  082F               	movf	_timer_ticked,w	;volatile
  2806     0738  1903               	btfsc	3,2
  2807     0739  2F3B               	goto	u3031
  2808     073A  2F3C               	goto	u3030
  2809     073B                     u3031:
  2810     073B  2F36               	goto	l3240
  2811     073C                     u3030:
  2812     073C                     l3242:
  2813                           
  2814                           ;main.c: 251:             refresh_digits();
  2815     073C  318E  26D7  3187   	fcall	_refresh_digits
  2816                           
  2817                           ;main.c: 252:             read_buttons();
  2818     073F  318E  26BB  3187   	fcall	_read_buttons
  2819                           
  2820                           ;main.c: 253:             handle_state();
  2821     0742  318F  2719  3187   	fcall	_handle_state
  2822     0745                     l3244:
  2823                           
  2824                           ;main.c: 254:             if (timer_count == 0) {
  2825     0745  0020               	movlb	0	; select bank0
  2826     0746  082A               	movf	_timer_count,w	;volatile
  2827     0747  042B               	iorwf	_timer_count+1,w	;volatile
  2828     0748  1D03               	btfss	3,2
  2829     0749  2F4B               	goto	u3041
  2830     074A  2F4C               	goto	u3040
  2831     074B                     u3041:
  2832     074B  2F64               	goto	l3256
  2833     074C                     u3040:
  2834     074C                     l3246:
  2835                           
  2836                           ;main.c: 255:                 add_second(&time);
  2837     074C  3039               	movlw	(low (_time| 0))& (0+255)
  2838     074D  318E  261A  3187   	fcall	_add_second
  2839     0750                     l3248:
  2840                           
  2841                           ;main.c: 256:                 if (time.ss == 0) {
  2842     0750  0020               	movlb	0	; select bank0
  2843     0751  083D               	movf	_time+4,w
  2844     0752  1D03               	btfss	3,2
  2845     0753  2F55               	goto	u3051
  2846     0754  2F56               	goto	u3050
  2847     0755                     u3051:
  2848     0755  2F64               	goto	l3256
  2849     0756                     u3050:
  2850     0756                     l3250:
  2851                           
  2852                           ;main.c: 257:                     read_time(&time);
  2853     0756  3039               	movlw	(low (_time| 0))& (0+255)
  2854     0757  3181  21C2  3187   	fcall	_read_time
  2855     075A                     l3252:
  2856                           
  2857                           ;main.c: 258:                     if (state == DISPLAY_TIME) set_time_digits(&time);
  2858     075A  0020               	movlb	0	; select bank0
  2859     075B  082E               	movf	_state,w
  2860     075C  1D03               	btfss	3,2
  2861     075D  2F5F               	goto	u3061
  2862     075E  2F60               	goto	u3060
  2863     075F                     u3061:
  2864     075F  2F64               	goto	l3256
  2865     0760                     u3060:
  2866     0760                     l3254:
  2867     0760  3039               	movlw	(low (_time| 0))& (0+255)
  2868     0761  3185  25E8  3187   	fcall	_set_time_digits
  2869     0764                     l3256:
  2870                           
  2871                           ;main.c: 261:             timer_ticked = 0;
  2872     0764  0020               	movlb	0	; select bank0
  2873     0765  01AF               	clrf	_timer_ticked	;volatile
  2874     0766  2F36               	goto	l3240
  2875     0767  3180  2819         	ljmp	start
  2876     0769                     __end_of_main:
  2877                           
  2878                           	psect	text1
  2879     0ED7                     __ptext1:	
  2880 ;; *************** function _refresh_digits *****************
  2881 ;; Defined at:
  2882 ;;		line 127 in file "nixie.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2896 ;;      Params:         0       0       0       0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0
  2899 ;;      Totals:         0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 4
  2903 ;; This function calls:
  2904 ;;		_off_digits
  2905 ;;		_on_digit
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911     0ED7                     _refresh_digits:	
  2912                           ;psect for function _refresh_digits
  2913                           
  2914     0ED7                     l2746:	
  2915                           ;incstack = 0
  2916                           ; Regs used in _refresh_digits: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2917                           
  2918                           
  2919                           ;nixie.c: 128:     if (is_on) {
  2920     0ED7  087A               	movf	_is_on,w
  2921     0ED8  1903               	btfsc	3,2
  2922     0ED9  2EDB               	goto	u2251
  2923     0EDA  2EDC               	goto	u2250
  2924     0EDB                     u2251:
  2925     0EDB  2EE1               	goto	l2752
  2926     0EDC                     u2250:
  2927     0EDC                     l2748:
  2928                           
  2929                           ;nixie.c: 129:         off_digits();
  2930     0EDC  318C  24BE  318E   	fcall	_off_digits
  2931     0EDF                     l2750:
  2932                           
  2933                           ;nixie.c: 130:         is_on = 0;
  2934     0EDF  01FA               	clrf	_is_on
  2935                           
  2936                           ;nixie.c: 131:     } else {
  2937     0EE0  2EF4               	goto	l600
  2938     0EE1                     l2752:
  2939                           
  2940                           ;nixie.c: 132:         if (digit_displayed[current]) on_digit(current);
  2941     0EE1  087B               	movf	_current,w
  2942     0EE2  3E20               	addlw	(low (_digit_displayed| 0))& (0+255)
  2943     0EE3  0086               	movwf	6
  2944     0EE4  0187               	clrf	7
  2945     0EE5  0801               	movf	1,w
  2946     0EE6  1903               	btfsc	3,2
  2947     0EE7  2EE9               	goto	u2261
  2948     0EE8  2EEA               	goto	u2260
  2949     0EE9                     u2261:
  2950     0EE9  2EEE               	goto	l2756
  2951     0EEA                     u2260:
  2952     0EEA                     l2754:
  2953     0EEA  087B               	movf	_current,w
  2954     0EEB  3183  233F  318E   	fcall	_on_digit
  2955     0EEE                     l2756:
  2956                           
  2957                           ;nixie.c: 133:         current = (current + 1) % 4;
  2958     0EEE  087B               	movf	_current,w
  2959     0EEF  3E01               	addlw	1
  2960     0EF0  3903               	andlw	3
  2961     0EF1  00FB               	movwf	_current
  2962     0EF2                     l2758:
  2963                           
  2964                           ;nixie.c: 134:         is_on = 1;
  2965     0EF2  01FA               	clrf	_is_on
  2966     0EF3  0AFA               	incf	_is_on,f
  2967     0EF4                     l600:
  2968     0EF4  0008               	return
  2969     0EF5                     __end_of_refresh_digits:
  2970                           
  2971                           	psect	text2
  2972     033F                     __ptext2:	
  2973 ;; *************** function _on_digit *****************
  2974 ;; Defined at:
  2975 ;;		line 30 in file "nixie.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  number          1    wreg     unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  number          1    4[COMMON] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2989 ;;      Params:         0       0       0       0       0       0       0       0
  2990 ;;      Locals:         1       0       0       0       0       0       0       0
  2991 ;;      Temps:          2       0       0       0       0       0       0       0
  2992 ;;      Totals:         3       0       0       0       0       0       0       0
  2993 ;;Total ram usage:        3 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 3
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_refresh_digits
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003     033F                     _on_digit:	
  3004                           ;psect for function _on_digit
  3005                           
  3006                           
  3007                           ;incstack = 0
  3008                           ; Regs used in _on_digit: [wreg-fsr1h+status,2+status,0]
  3009                           ;on_digit@number stored from wreg
  3010     033F  00F4               	movwf	on_digit@number
  3011     0340                     l2654:
  3012                           
  3013                           ;nixie.c: 31:     switch (digit_values[number]) {
  3014     0340  2B7D               	goto	l2656
  3015     0341                     l455:	
  3016                           ;nixie.c: 33:             do { LATBbits.LATB4 = 0; } while(0);
  3017                           
  3018     0341  0022               	movlb	2	; select bank2
  3019     0342  120D               	bcf	13,4	;volatile
  3020     0343                     l457:	
  3021                           ;nixie.c: 34:             do { LATBbits.LATB2 = 0; } while(0);
  3022                           
  3023     0343  110D               	bcf	13,2	;volatile
  3024     0344                     l459:	
  3025                           ;nixie.c: 35:             do { LATBbits.LATB1 = 0; } while(0);
  3026                           
  3027     0344  108D               	bcf	13,1	;volatile
  3028     0345                     l461:	
  3029                           ;nixie.c: 36:             do { LATBbits.LATB3 = 0; } while(0);
  3030                           
  3031     0345  118D               	bcf	13,3	;volatile
  3032     0346  2BC1               	goto	l2658
  3033     0347                     l465:	
  3034                           ;nixie.c: 39:             do { LATBbits.LATB4 = 0; } while(0);
  3035                           
  3036     0347  0022               	movlb	2	; select bank2
  3037     0348  120D               	bcf	13,4	;volatile
  3038     0349                     l467:	
  3039                           ;nixie.c: 40:             do { LATBbits.LATB2 = 1; } while(0);
  3040                           
  3041     0349  150D               	bsf	13,2	;volatile
  3042     034A                     l469:	
  3043                           ;nixie.c: 41:             do { LATBbits.LATB1 = 0; } while(0);
  3044                           
  3045     034A  108D               	bcf	13,1	;volatile
  3046     034B                     l471:	
  3047                           ;nixie.c: 42:             do { LATBbits.LATB3 = 0; } while(0);
  3048                           
  3049     034B  118D               	bcf	13,3	;volatile
  3050     034C  2BC1               	goto	l2658
  3051     034D                     l474:	
  3052                           ;nixie.c: 45:             do { LATBbits.LATB4 = 1; } while(0);
  3053                           
  3054     034D  0022               	movlb	2	; select bank2
  3055     034E  160D               	bsf	13,4	;volatile
  3056     034F                     l476:	
  3057                           ;nixie.c: 46:             do { LATBbits.LATB2 = 0; } while(0);
  3058                           
  3059     034F  110D               	bcf	13,2	;volatile
  3060     0350                     l478:	
  3061                           ;nixie.c: 47:             do { LATBbits.LATB1 = 1; } while(0);
  3062                           
  3063     0350  148D               	bsf	13,1	;volatile
  3064     0351                     l480:	
  3065                           ;nixie.c: 48:             do { LATBbits.LATB3 = 0; } while(0);
  3066                           
  3067     0351  118D               	bcf	13,3	;volatile
  3068     0352  2BC1               	goto	l2658
  3069     0353                     l483:	
  3070                           ;nixie.c: 51:             do { LATBbits.LATB4 = 1; } while(0);
  3071                           
  3072     0353  0022               	movlb	2	; select bank2
  3073     0354  160D               	bsf	13,4	;volatile
  3074     0355                     l485:	
  3075                           ;nixie.c: 52:             do { LATBbits.LATB2 = 1; } while(0);
  3076                           
  3077     0355  150D               	bsf	13,2	;volatile
  3078     0356                     l487:	
  3079                           ;nixie.c: 53:             do { LATBbits.LATB1 = 1; } while(0);
  3080                           
  3081     0356  148D               	bsf	13,1	;volatile
  3082     0357                     l489:	
  3083                           ;nixie.c: 54:             do { LATBbits.LATB3 = 0; } while(0);
  3084                           
  3085     0357  118D               	bcf	13,3	;volatile
  3086     0358  2BC1               	goto	l2658
  3087     0359                     l492:	
  3088                           ;nixie.c: 57:             do { LATBbits.LATB4 = 1; } while(0);
  3089                           
  3090     0359  0022               	movlb	2	; select bank2
  3091     035A  160D               	bsf	13,4	;volatile
  3092     035B                     l494:	
  3093                           ;nixie.c: 58:             do { LATBbits.LATB2 = 1; } while(0);
  3094                           
  3095     035B  150D               	bsf	13,2	;volatile
  3096     035C                     l496:	
  3097                           ;nixie.c: 59:             do { LATBbits.LATB1 = 0; } while(0);
  3098                           
  3099     035C  108D               	bcf	13,1	;volatile
  3100     035D                     l498:	
  3101                           ;nixie.c: 60:             do { LATBbits.LATB3 = 0; } while(0);
  3102                           
  3103     035D  118D               	bcf	13,3	;volatile
  3104     035E  2BC1               	goto	l2658
  3105     035F                     l501:	
  3106                           ;nixie.c: 63:             do { LATBbits.LATB4 = 1; } while(0);
  3107                           
  3108     035F  0022               	movlb	2	; select bank2
  3109     0360  160D               	bsf	13,4	;volatile
  3110     0361                     l503:	
  3111                           ;nixie.c: 64:             do { LATBbits.LATB2 = 0; } while(0);
  3112                           
  3113     0361  110D               	bcf	13,2	;volatile
  3114     0362                     l505:	
  3115                           ;nixie.c: 65:             do { LATBbits.LATB1 = 0; } while(0);
  3116                           
  3117     0362  108D               	bcf	13,1	;volatile
  3118     0363                     l507:	
  3119                           ;nixie.c: 66:             do { LATBbits.LATB3 = 1; } while(0);
  3120                           
  3121     0363  158D               	bsf	13,3	;volatile
  3122     0364  2BC1               	goto	l2658
  3123     0365                     l510:	
  3124                           ;nixie.c: 69:             do { LATBbits.LATB4 = 0; } while(0);
  3125                           
  3126     0365  0022               	movlb	2	; select bank2
  3127     0366  120D               	bcf	13,4	;volatile
  3128     0367                     l512:	
  3129                           ;nixie.c: 70:             do { LATBbits.LATB2 = 1; } while(0);
  3130                           
  3131     0367  150D               	bsf	13,2	;volatile
  3132     0368                     l514:	
  3133                           ;nixie.c: 71:             do { LATBbits.LATB1 = 1; } while(0);
  3134                           
  3135     0368  148D               	bsf	13,1	;volatile
  3136     0369                     l516:	
  3137                           ;nixie.c: 72:             do { LATBbits.LATB3 = 0; } while(0);
  3138                           
  3139     0369  118D               	bcf	13,3	;volatile
  3140     036A  2BC1               	goto	l2658
  3141     036B                     l519:	
  3142                           ;nixie.c: 75:             do { LATBbits.LATB4 = 0; } while(0);
  3143                           
  3144     036B  0022               	movlb	2	; select bank2
  3145     036C  120D               	bcf	13,4	;volatile
  3146     036D                     l521:	
  3147                           ;nixie.c: 76:             do { LATBbits.LATB2 = 0; } while(0);
  3148                           
  3149     036D  110D               	bcf	13,2	;volatile
  3150     036E                     l523:	
  3151                           ;nixie.c: 77:             do { LATBbits.LATB1 = 0; } while(0);
  3152                           
  3153     036E  108D               	bcf	13,1	;volatile
  3154     036F                     l525:	
  3155                           ;nixie.c: 78:             do { LATBbits.LATB3 = 1; } while(0);
  3156                           
  3157     036F  158D               	bsf	13,3	;volatile
  3158     0370  2BC1               	goto	l2658
  3159     0371                     l528:	
  3160                           ;nixie.c: 81:             do { LATBbits.LATB4 = 0; } while(0);
  3161                           
  3162     0371  0022               	movlb	2	; select bank2
  3163     0372  120D               	bcf	13,4	;volatile
  3164     0373                     l530:	
  3165                           ;nixie.c: 82:             do { LATBbits.LATB2 = 0; } while(0);
  3166                           
  3167     0373  110D               	bcf	13,2	;volatile
  3168     0374                     l532:	
  3169                           ;nixie.c: 83:             do { LATBbits.LATB1 = 1; } while(0);
  3170                           
  3171     0374  148D               	bsf	13,1	;volatile
  3172     0375                     l534:	
  3173                           ;nixie.c: 84:             do { LATBbits.LATB3 = 0; } while(0);
  3174                           
  3175     0375  118D               	bcf	13,3	;volatile
  3176     0376  2BC1               	goto	l2658
  3177     0377                     l537:	
  3178                           ;nixie.c: 87:             do { LATBbits.LATB4 = 1; } while(0);
  3179                           
  3180     0377  0022               	movlb	2	; select bank2
  3181     0378  160D               	bsf	13,4	;volatile
  3182     0379                     l539:	
  3183                           ;nixie.c: 88:             do { LATBbits.LATB2 = 0; } while(0);
  3184                           
  3185     0379  110D               	bcf	13,2	;volatile
  3186     037A                     l541:	
  3187                           ;nixie.c: 89:             do { LATBbits.LATB1 = 0; } while(0);
  3188                           
  3189     037A  108D               	bcf	13,1	;volatile
  3190     037B                     l543:	
  3191                           ;nixie.c: 90:             do { LATBbits.LATB3 = 0; } while(0);
  3192                           
  3193     037B  118D               	bcf	13,3	;volatile
  3194     037C  2BC1               	goto	l2658
  3195     037D                     l2656:
  3196     037D  0874               	movf	on_digit@number,w
  3197     037E  3E24               	addlw	(low (_digit_values| 0))& (0+255)
  3198     037F  0086               	movwf	6
  3199     0380  0187               	clrf	7
  3200     0381  0801               	movf	1,w
  3201     0382  00F2               	movwf	??_on_digit
  3202     0383  01F3               	clrf	??_on_digit+1
  3203                           
  3204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3205                           ; Switch size 1, requested type "simple"
  3206                           ; Number of cases is 1, Range of values is 0 to 0
  3207                           ; switch strategies available:
  3208                           ; Name         Instructions Cycles
  3209                           ; simple_byte            4     3 (average)
  3210                           ; direct_byte            8     6 (fixed)
  3211                           ; jumptable            260     6 (fixed)
  3212                           ;	Chosen strategy is simple_byte
  3213     0384  0873               	movf	??_on_digit+1,w
  3214     0385  3A00               	xorlw	0	; case 0
  3215     0386  1903               	skipnz
  3216     0387  2B89               	goto	l3338
  3217     0388  2BC1               	goto	l2658
  3218     0389                     l3338:
  3219                           
  3220                           ; Switch size 1, requested type "simple"
  3221                           ; Number of cases is 10, Range of values is 0 to 9
  3222                           ; switch strategies available:
  3223                           ; Name         Instructions Cycles
  3224                           ; direct_byte           26     6 (fixed)
  3225                           ; simple_byte           31    16 (average)
  3226                           ; jumptable            260     6 (fixed)
  3227                           ;	Chosen strategy is simple_byte
  3228     0389  0872               	movf	??_on_digit,w
  3229     038A  3A00               	xorlw	0	; case 0
  3230     038B  1903               	skipnz
  3231     038C  2B41               	goto	l455
  3232     038D  3A01               	xorlw	1	; case 1
  3233     038E  1903               	skipnz
  3234     038F  2B47               	goto	l465
  3235     0390  3A03               	xorlw	3	; case 2
  3236     0391  1903               	skipnz
  3237     0392  2B4D               	goto	l474
  3238     0393  3A01               	xorlw	1	; case 3
  3239     0394  1903               	skipnz
  3240     0395  2B53               	goto	l483
  3241     0396  3A07               	xorlw	7	; case 4
  3242     0397  1903               	skipnz
  3243     0398  2B59               	goto	l492
  3244     0399  3A01               	xorlw	1	; case 5
  3245     039A  1903               	skipnz
  3246     039B  2B5F               	goto	l501
  3247     039C  3A03               	xorlw	3	; case 6
  3248     039D  1903               	skipnz
  3249     039E  2B65               	goto	l510
  3250     039F  3A01               	xorlw	1	; case 7
  3251     03A0  1903               	skipnz
  3252     03A1  2B6B               	goto	l519
  3253     03A2  3A0F               	xorlw	15	; case 8
  3254     03A3  1903               	skipnz
  3255     03A4  2B71               	goto	l528
  3256     03A5  3A01               	xorlw	1	; case 9
  3257     03A6  1903               	skipnz
  3258     03A7  2B77               	goto	l537
  3259     03A8  2BC1               	goto	l2658
  3260     03A9                     l547:	
  3261                           ;nixie.c: 95:             do { LATAbits.LATA0 = 1; } while(0);
  3262                           
  3263     03A9  0022               	movlb	2	; select bank2
  3264     03AA  140C               	bsf	12,0	;volatile
  3265     03AB                     l549:	
  3266                           ;nixie.c: 96:             do { LATAbits.LATA1 = 0; } while(0);
  3267                           
  3268     03AB  108C               	bcf	12,1	;volatile
  3269     03AC                     l551:	
  3270                           ;nixie.c: 97:             do { LATAbits.LATA7 = 0; } while(0);
  3271                           
  3272     03AC  138C               	bcf	12,7	;volatile
  3273     03AD                     l553:	
  3274                           ;nixie.c: 98:             do { LATAbits.LATA6 = 0; } while(0);
  3275                           
  3276     03AD  130C               	bcf	12,6	;volatile
  3277     03AE  2BD7               	goto	l583
  3278     03AF                     l557:	
  3279                           ;nixie.c: 101:             do { LATAbits.LATA0 = 0; } while(0);
  3280                           
  3281     03AF  0022               	movlb	2	; select bank2
  3282     03B0  100C               	bcf	12,0	;volatile
  3283     03B1                     l559:	
  3284                           ;nixie.c: 102:             do { LATAbits.LATA1 = 1; } while(0);
  3285                           
  3286     03B1  148C               	bsf	12,1	;volatile
  3287     03B2                     l561:	
  3288                           ;nixie.c: 103:             do { LATAbits.LATA7 = 0; } while(0);
  3289                           
  3290     03B2  138C               	bcf	12,7	;volatile
  3291     03B3                     l563:	
  3292                           ;nixie.c: 104:             do { LATAbits.LATA6 = 0; } while(0);
  3293                           
  3294     03B3  130C               	bcf	12,6	;volatile
  3295     03B4  2BD7               	goto	l583
  3296     03B5                     l566:	
  3297                           ;nixie.c: 107:             do { LATAbits.LATA0 = 0; } while(0);
  3298                           
  3299     03B5  0022               	movlb	2	; select bank2
  3300     03B6  100C               	bcf	12,0	;volatile
  3301     03B7                     l568:	
  3302                           ;nixie.c: 108:             do { LATAbits.LATA1 = 0; } while(0);
  3303                           
  3304     03B7  108C               	bcf	12,1	;volatile
  3305     03B8                     l570:	
  3306                           ;nixie.c: 109:             do { LATAbits.LATA7 = 1; } while(0);
  3307                           
  3308     03B8  178C               	bsf	12,7	;volatile
  3309     03B9                     l572:	
  3310                           ;nixie.c: 110:             do { LATAbits.LATA6 = 0; } while(0);
  3311                           
  3312     03B9  130C               	bcf	12,6	;volatile
  3313     03BA  2BD7               	goto	l583
  3314     03BB                     l575:	
  3315                           ;nixie.c: 113:             do { LATAbits.LATA0 = 0; } while(0);
  3316                           
  3317     03BB  0022               	movlb	2	; select bank2
  3318     03BC  100C               	bcf	12,0	;volatile
  3319     03BD                     l577:	
  3320                           ;nixie.c: 114:             do { LATAbits.LATA1 = 0; } while(0);
  3321                           
  3322     03BD  108C               	bcf	12,1	;volatile
  3323     03BE                     l579:	
  3324                           ;nixie.c: 115:             do { LATAbits.LATA7 = 0; } while(0);
  3325                           
  3326     03BE  138C               	bcf	12,7	;volatile
  3327     03BF                     l581:	
  3328                           ;nixie.c: 116:             do { LATAbits.LATA6 = 1; } while(0);
  3329                           
  3330     03BF  170C               	bsf	12,6	;volatile
  3331     03C0  2BD7               	goto	l583
  3332     03C1                     l2658:
  3333     03C1  0874               	movf	on_digit@number,w
  3334     03C2  00F2               	movwf	??_on_digit
  3335     03C3  01F3               	clrf	??_on_digit+1
  3336                           
  3337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3338                           ; Switch size 1, requested type "simple"
  3339                           ; Number of cases is 1, Range of values is 0 to 0
  3340                           ; switch strategies available:
  3341                           ; Name         Instructions Cycles
  3342                           ; simple_byte            4     3 (average)
  3343                           ; direct_byte            8     6 (fixed)
  3344                           ; jumptable            260     6 (fixed)
  3345                           ;	Chosen strategy is simple_byte
  3346     03C4  0873               	movf	??_on_digit+1,w
  3347     03C5  3A00               	xorlw	0	; case 0
  3348     03C6  1903               	skipnz
  3349     03C7  2BC9               	goto	l3340
  3350     03C8  2BD7               	goto	l583
  3351     03C9                     l3340:
  3352                           
  3353                           ; Switch size 1, requested type "simple"
  3354                           ; Number of cases is 4, Range of values is 0 to 3
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte           13     7 (average)
  3358                           ; direct_byte           14     6 (fixed)
  3359                           ; jumptable            260     6 (fixed)
  3360                           ;	Chosen strategy is simple_byte
  3361     03C9  0872               	movf	??_on_digit,w
  3362     03CA  3A00               	xorlw	0	; case 0
  3363     03CB  1903               	skipnz
  3364     03CC  2BA9               	goto	l547
  3365     03CD  3A01               	xorlw	1	; case 1
  3366     03CE  1903               	skipnz
  3367     03CF  2BAF               	goto	l557
  3368     03D0  3A03               	xorlw	3	; case 2
  3369     03D1  1903               	skipnz
  3370     03D2  2BB5               	goto	l566
  3371     03D3  3A01               	xorlw	1	; case 3
  3372     03D4  1903               	skipnz
  3373     03D5  2BBB               	goto	l575
  3374     03D6  2BD7               	goto	l583
  3375     03D7                     l583:
  3376     03D7  0008               	return
  3377     03D8                     __end_of_on_digit:
  3378                           
  3379                           	psect	text3
  3380     0CBE                     __ptext3:	
  3381 ;; *************** function _off_digits *****************
  3382 ;; Defined at:
  3383 ;;		line 120 in file "nixie.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		None
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3397 ;;      Params:         0       0       0       0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 3
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_refresh_digits
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411     0CBE                     _off_digits:	
  3412                           ;psect for function _off_digits
  3413                           
  3414     0CBE                     l586:	
  3415                           ;incstack = 0
  3416                           ; Regs used in _off_digits: []
  3417                           ;nixie.c: 121:     do { LATAbits.LATA0 = 0; } while(0);
  3418                           
  3419     0CBE  0022               	movlb	2	; select bank2
  3420     0CBF  100C               	bcf	12,0	;volatile
  3421     0CC0                     l588:	
  3422                           ;nixie.c: 122:     do { LATAbits.LATA1 = 0; } while(0);
  3423                           
  3424     0CC0  108C               	bcf	12,1	;volatile
  3425     0CC1                     l590:	
  3426                           ;nixie.c: 123:     do { LATAbits.LATA7 = 0; } while(0);
  3427                           
  3428     0CC1  138C               	bcf	12,7	;volatile
  3429     0CC2                     l592:	
  3430                           ;nixie.c: 124:     do { LATAbits.LATA6 = 0; } while(0);
  3431                           
  3432     0CC2  130C               	bcf	12,6	;volatile
  3433     0CC3                     l594:
  3434     0CC3  0008               	return
  3435     0CC4                     __end_of_off_digits:
  3436                           
  3437                           	psect	text4
  3438     01C2                     __ptext4:	
  3439 ;; *************** function _read_time *****************
  3440 ;; Defined at:
  3441 ;;		line 9 in file "time.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  time            1    wreg     PTR struct Time
  3444 ;;		 -> time(9), 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  time            1   13[BANK0 ] PTR struct Time
  3447 ;;		 -> time(9), 
  3448 ;;  reg_arr         7    6[BANK0 ] unsigned char [7]
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3458 ;;      Params:         0       0       0       0       0       0       0       0
  3459 ;;      Locals:         0       8       0       0       0       0       0       0
  3460 ;;      Temps:          0       2       0       0       0       0       0       0
  3461 ;;      Totals:         0      10       0       0       0       0       0       0
  3462 ;;Total ram usage:       10 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; Hardware stack levels required when called: 6
  3465 ;; This function calls:
  3466 ;;		___bmul
  3467 ;;		_i2c_rd_bytes
  3468 ;;		_i2c_start
  3469 ;;		_i2c_stop
  3470 ;;		_i2c_wr
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476     01C2                     _read_time:	
  3477                           ;psect for function _read_time
  3478                           
  3479                           
  3480                           ;incstack = 0
  3481                           ; Regs used in _read_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3482                           ;read_time@time stored from wreg
  3483     01C2  0020               	movlb	0	; select bank0
  3484     01C3  00D5               	movwf	read_time@time
  3485     01C4                     l3198:
  3486                           
  3487                           ;time.c: 10:     i2c_start();
  3488     01C4  318C  24EF  3181   	fcall	_i2c_start
  3489     01C7                     l3200:
  3490                           
  3491                           ;time.c: 11:     i2c_wr(0xD0);
  3492     01C7  30D0               	movlw	208
  3493     01C8  318D  25B7  3181   	fcall	_i2c_wr
  3494     01CB                     l3202:
  3495                           
  3496                           ;time.c: 12:     i2c_wr(0x00);
  3497     01CB  3000               	movlw	0
  3498     01CC  318D  25B7  3181   	fcall	_i2c_wr
  3499                           
  3500                           ;time.c: 14:     i2c_start();
  3501     01CF  318C  24EF  3181   	fcall	_i2c_start
  3502     01D2                     l3204:
  3503                           
  3504                           ;time.c: 15:     i2c_wr(0xD1);
  3505     01D2  30D1               	movlw	209
  3506     01D3  318D  25B7  3181   	fcall	_i2c_wr
  3507     01D6                     l3206:
  3508                           
  3509                           ;time.c: 17:     uint8_t reg_arr[7];;time.c: 19:     i2c_rd_bytes(reg_arr, 7);
  3510     01D6  3007               	movlw	7
  3511     01D7  00F8               	movwf	i2c_rd_bytes@size
  3512     01D8  304E               	movlw	(low (read_time@reg_arr| 0))& (0+255)
  3513     01D9  318F  2750  3181   	fcall	_i2c_rd_bytes
  3514                           
  3515                           ;time.c: 21:     i2c_stop();
  3516     01DC  318D  2517  3181   	fcall	_i2c_stop
  3517     01DF                     l3208:
  3518                           
  3519                           ;time.c: 23:     time->ss = (reg_arr[0] >> 4)*10 + (reg_arr[0] & 0x0F);
  3520     01DF  0020               	movlb	0	; select bank0
  3521     01E0  0855               	movf	read_time@time,w
  3522     01E1  3E04               	addlw	4
  3523     01E2  0086               	movwf	6
  3524     01E3  0187               	clrf	7
  3525     01E4  300F               	movlw	15
  3526     01E5  054E               	andwf	read_time@reg_arr,w
  3527     01E6  00CC               	movwf	??_read_time
  3528     01E7  300A               	movlw	10
  3529     01E8  00F2               	movwf	___bmul@multiplicand
  3530     01E9  084E               	movf	read_time@reg_arr,w
  3531     01EA  00CD               	movwf	??_read_time+1
  3532     01EB  3004               	movlw	4
  3533     01EC                     u2935:
  3534     01EC  36CD               	lsrf	??_read_time+1,f
  3535     01ED  0B89               	decfsz	9,f
  3536     01EE  29EC               	goto	u2935
  3537     01EF  084D               	movf	??_read_time+1,w
  3538     01F0  318D  2572  3181   	fcall	___bmul
  3539     01F3  0020               	movlb	0	; select bank0
  3540     01F4  074C               	addwf	??_read_time,w
  3541     01F5  0081               	movwf	1
  3542     01F6                     l3210:
  3543                           
  3544                           ;time.c: 25:     time->mm = (reg_arr[1] >> 4)*10 + (reg_arr[1] & 0x0F);
  3545     01F6  0855               	movf	read_time@time,w
  3546     01F7  3E03               	addlw	3
  3547     01F8  0086               	movwf	6
  3548     01F9  0187               	clrf	7
  3549     01FA  300F               	movlw	15
  3550     01FB  054F               	andwf	read_time@reg_arr+1,w
  3551     01FC  00CC               	movwf	??_read_time
  3552     01FD  300A               	movlw	10
  3553     01FE  00F2               	movwf	___bmul@multiplicand
  3554     01FF  084F               	movf	read_time@reg_arr+1,w
  3555     0200  00CD               	movwf	??_read_time+1
  3556     0201  3004               	movlw	4
  3557     0202                     u2945:
  3558     0202  36CD               	lsrf	??_read_time+1,f
  3559     0203  0B89               	decfsz	9,f
  3560     0204  2A02               	goto	u2945
  3561     0205  084D               	movf	??_read_time+1,w
  3562     0206  318D  2572  3181   	fcall	___bmul
  3563     0209  0020               	movlb	0	; select bank0
  3564     020A  074C               	addwf	??_read_time,w
  3565     020B  0081               	movwf	1
  3566     020C                     l3212:
  3567                           
  3568                           ;time.c: 27:     time->is_12 = reg_arr[2] >> 6;
  3569     020C  0A55               	incf	read_time@time,w
  3570     020D  0086               	movwf	6
  3571     020E  0187               	clrf	7
  3572     020F  0850               	movf	read_time@reg_arr+2,w
  3573     0210  00CC               	movwf	??_read_time
  3574     0211  3006               	movlw	6
  3575     0212                     u2955:
  3576     0212  36CC               	lsrf	??_read_time,f
  3577     0213  0B89               	decfsz	9,f
  3578     0214  2A12               	goto	u2955
  3579     0215  084C               	movf	??_read_time,w
  3580     0216  0081               	movwf	1
  3581     0217                     l3214:
  3582                           
  3583                           ;time.c: 29:     if (time->is_12) {
  3584     0217  0A55               	incf	read_time@time,w
  3585     0218  0086               	movwf	6
  3586     0219  0187               	clrf	7
  3587     021A  0801               	movf	1,w
  3588     021B  1903               	btfsc	3,2
  3589     021C  2A1E               	goto	u2961
  3590     021D  2A1F               	goto	u2960
  3591     021E                     u2961:
  3592     021E  2A42               	goto	l3220
  3593     021F                     u2960:
  3594     021F                     l3216:
  3595                           
  3596                           ;time.c: 30:         time->pm = reg_arr[2] >> 5;
  3597     021F  0855               	movf	read_time@time,w
  3598     0220  3E02               	addlw	2
  3599     0221  0086               	movwf	6
  3600     0222  0187               	clrf	7
  3601     0223  0850               	movf	read_time@reg_arr+2,w
  3602     0224  00CC               	movwf	??_read_time
  3603     0225  3005               	movlw	5
  3604     0226                     u2975:
  3605     0226  36CC               	lsrf	??_read_time,f
  3606     0227  0B89               	decfsz	9,f
  3607     0228  2A26               	goto	u2975
  3608     0229  084C               	movf	??_read_time,w
  3609     022A  0081               	movwf	1
  3610     022B                     l3218:
  3611                           
  3612                           ;time.c: 31:         time->hh = (reg_arr[2] >> 4 & 0x01) * 10 + (reg_arr[2] & 0x0F);
  3613     022B  0855               	movf	read_time@time,w
  3614     022C  0086               	movwf	6
  3615     022D  0187               	clrf	7
  3616     022E  300F               	movlw	15
  3617     022F  0550               	andwf	read_time@reg_arr+2,w
  3618     0230  00CC               	movwf	??_read_time
  3619     0231  300A               	movlw	10
  3620     0232  00F2               	movwf	___bmul@multiplicand
  3621     0233  0850               	movf	read_time@reg_arr+2,w
  3622     0234  00CD               	movwf	??_read_time+1
  3623     0235  3004               	movlw	4
  3624     0236                     u2985:
  3625     0236  36CD               	lsrf	??_read_time+1,f
  3626     0237  0B89               	decfsz	9,f
  3627     0238  2A36               	goto	u2985
  3628     0239  084D               	movf	??_read_time+1,w
  3629     023A  3901               	andlw	1
  3630     023B  318D  2572  3181   	fcall	___bmul
  3631     023E  0020               	movlb	0	; select bank0
  3632     023F  074C               	addwf	??_read_time,w
  3633     0240  0081               	movwf	1
  3634                           
  3635                           ;time.c: 32:     } else {
  3636     0241  2A58               	goto	l3222
  3637     0242                     l3220:
  3638                           
  3639                           ;time.c: 33:         time->hh = (reg_arr[2] >> 4 & 0x03) * 10 + (reg_arr[2] & 0x0F);
  3640     0242  0855               	movf	read_time@time,w
  3641     0243  0086               	movwf	6
  3642     0244  0187               	clrf	7
  3643     0245  300F               	movlw	15
  3644     0246  0550               	andwf	read_time@reg_arr+2,w
  3645     0247  00CC               	movwf	??_read_time
  3646     0248  300A               	movlw	10
  3647     0249  00F2               	movwf	___bmul@multiplicand
  3648     024A  0850               	movf	read_time@reg_arr+2,w
  3649     024B  00CD               	movwf	??_read_time+1
  3650     024C  3004               	movlw	4
  3651     024D                     u2995:
  3652     024D  36CD               	lsrf	??_read_time+1,f
  3653     024E  0B89               	decfsz	9,f
  3654     024F  2A4D               	goto	u2995
  3655     0250  084D               	movf	??_read_time+1,w
  3656     0251  3903               	andlw	3
  3657     0252  318D  2572  3181   	fcall	___bmul
  3658     0255  0020               	movlb	0	; select bank0
  3659     0256  074C               	addwf	??_read_time,w
  3660     0257  0081               	movwf	1
  3661     0258                     l3222:
  3662                           
  3663                           ;time.c: 36:     time->day = reg_arr[3];
  3664     0258  0855               	movf	read_time@time,w
  3665     0259  3E05               	addlw	5
  3666     025A  0086               	movwf	6
  3667     025B  0187               	clrf	7
  3668     025C  0851               	movf	read_time@reg_arr+3,w
  3669     025D  0081               	movwf	1
  3670     025E                     l3224:
  3671                           
  3672                           ;time.c: 38:     time->dd = (reg_arr[4] >> 4)*10 + (reg_arr[4] & 0x0F);
  3673     025E  0855               	movf	read_time@time,w
  3674     025F  3E06               	addlw	6
  3675     0260  0086               	movwf	6
  3676     0261  0187               	clrf	7
  3677     0262  300F               	movlw	15
  3678     0263  0552               	andwf	read_time@reg_arr+4,w
  3679     0264  00CC               	movwf	??_read_time
  3680     0265  300A               	movlw	10
  3681     0266  00F2               	movwf	___bmul@multiplicand
  3682     0267  0852               	movf	read_time@reg_arr+4,w
  3683     0268  00CD               	movwf	??_read_time+1
  3684     0269  3004               	movlw	4
  3685     026A                     u3005:
  3686     026A  36CD               	lsrf	??_read_time+1,f
  3687     026B  0B89               	decfsz	9,f
  3688     026C  2A6A               	goto	u3005
  3689     026D  084D               	movf	??_read_time+1,w
  3690     026E  318D  2572  3181   	fcall	___bmul
  3691     0271  0020               	movlb	0	; select bank0
  3692     0272  074C               	addwf	??_read_time,w
  3693     0273  0081               	movwf	1
  3694     0274                     l3226:
  3695                           
  3696                           ;time.c: 40:     time->MM = (reg_arr[5] >> 4)*10 + (reg_arr[5] & 0x0F);
  3697     0274  0855               	movf	read_time@time,w
  3698     0275  3E07               	addlw	7
  3699     0276  0086               	movwf	6
  3700     0277  0187               	clrf	7
  3701     0278  300F               	movlw	15
  3702     0279  0553               	andwf	read_time@reg_arr+5,w
  3703     027A  00CC               	movwf	??_read_time
  3704     027B  300A               	movlw	10
  3705     027C  00F2               	movwf	___bmul@multiplicand
  3706     027D  0853               	movf	read_time@reg_arr+5,w
  3707     027E  00CD               	movwf	??_read_time+1
  3708     027F  3004               	movlw	4
  3709     0280                     u3015:
  3710     0280  36CD               	lsrf	??_read_time+1,f
  3711     0281  0B89               	decfsz	9,f
  3712     0282  2A80               	goto	u3015
  3713     0283  084D               	movf	??_read_time+1,w
  3714     0284  318D  2572  3181   	fcall	___bmul
  3715     0287  0020               	movlb	0	; select bank0
  3716     0288  074C               	addwf	??_read_time,w
  3717     0289  0081               	movwf	1
  3718     028A                     l3228:
  3719                           
  3720                           ;time.c: 42:     time->yy = (reg_arr[6] >> 4)*10 + (reg_arr[6] & 0x0F);
  3721     028A  0855               	movf	read_time@time,w
  3722     028B  3E08               	addlw	8
  3723     028C  0086               	movwf	6
  3724     028D  0187               	clrf	7
  3725     028E  300F               	movlw	15
  3726     028F  0554               	andwf	read_time@reg_arr+6,w
  3727     0290  00CC               	movwf	??_read_time
  3728     0291  300A               	movlw	10
  3729     0292  00F2               	movwf	___bmul@multiplicand
  3730     0293  0854               	movf	read_time@reg_arr+6,w
  3731     0294  00CD               	movwf	??_read_time+1
  3732     0295  3004               	movlw	4
  3733     0296                     u3025:
  3734     0296  36CD               	lsrf	??_read_time+1,f
  3735     0297  0B89               	decfsz	9,f
  3736     0298  2A96               	goto	u3025
  3737     0299  084D               	movf	??_read_time+1,w
  3738     029A  318D  2572  3181   	fcall	___bmul
  3739     029D  0020               	movlb	0	; select bank0
  3740     029E  074C               	addwf	??_read_time,w
  3741     029F  0081               	movwf	1
  3742     02A0                     l629:
  3743     02A0  0008               	return
  3744     02A1                     __end_of_read_time:
  3745                           
  3746                           	psect	text5
  3747     0F50                     __ptext5:	
  3748 ;; *************** function _i2c_rd_bytes *****************
  3749 ;; Defined at:
  3750 ;;		line 122 in file "i2c.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  byte_arr        1    wreg     PTR unsigned char 
  3753 ;;		 -> read_time@reg_arr(7), 
  3754 ;;  size            1    8[COMMON] unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  byte_arr        1    2[BANK0 ] PTR unsigned char 
  3757 ;;		 -> read_time@reg_arr(7), 
  3758 ;;  i               1    3[BANK0 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3768 ;;      Params:         1       0       0       0       0       0       0       0
  3769 ;;      Locals:         0       2       0       0       0       0       0       0
  3770 ;;      Temps:          0       2       0       0       0       0       0       0
  3771 ;;      Totals:         1       4       0       0       0       0       0       0
  3772 ;;Total ram usage:        5 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 5
  3775 ;; This function calls:
  3776 ;;		_i2c_rd
  3777 ;; This function is called by:
  3778 ;;		_read_time
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782     0F50                     _i2c_rd_bytes:	
  3783                           ;psect for function _i2c_rd_bytes
  3784                           
  3785                           
  3786                           ;incstack = 0
  3787                           ; Regs used in _i2c_rd_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3788                           ;i2c_rd_bytes@byte_arr stored from wreg
  3789     0F50  0020               	movlb	0	; select bank0
  3790     0F51  00CA               	movwf	i2c_rd_bytes@byte_arr
  3791     0F52                     l3168:
  3792                           
  3793                           ;i2c.c: 122: void i2c_rd_bytes(uint8_t* byte_arr, uint8_t size);i2c.c: 123: {;i2c.c: 124
      +                          :     for(uint8_t i=0; i < size - 1; i++)
  3794     0F52  01CB               	clrf	i2c_rd_bytes@i
  3795     0F53  2F66               	goto	l3174
  3796     0F54                     l3170:
  3797                           
  3798                           ;i2c.c: 125:     {;i2c.c: 126:        byte_arr[i] = i2c_rd(0x00);
  3799     0F54  3000               	movlw	0
  3800     0F55  318E  2601  318F   	fcall	_i2c_rd
  3801     0F58  0020               	movlb	0	; select bank0
  3802     0F59  00C8               	movwf	??_i2c_rd_bytes
  3803     0F5A  084B               	movf	i2c_rd_bytes@i,w
  3804     0F5B  074A               	addwf	i2c_rd_bytes@byte_arr,w
  3805     0F5C  00C9               	movwf	??_i2c_rd_bytes+1
  3806     0F5D  0849               	movf	??_i2c_rd_bytes+1,w
  3807     0F5E  0086               	movwf	6
  3808     0F5F  0187               	clrf	7
  3809     0F60  0848               	movf	??_i2c_rd_bytes,w
  3810     0F61  0081               	movwf	1
  3811     0F62                     l3172:
  3812                           
  3813                           ;i2c.c: 127:     }
  3814     0F62  3001               	movlw	1
  3815     0F63  00C8               	movwf	??_i2c_rd_bytes
  3816     0F64  0848               	movf	??_i2c_rd_bytes,w
  3817     0F65  07CB               	addwf	i2c_rd_bytes@i,f
  3818     0F66                     l3174:
  3819     0F66  0878               	movf	i2c_rd_bytes@size,w
  3820     0F67  3EFF               	addlw	255
  3821     0F68  00C8               	movwf	??_i2c_rd_bytes
  3822     0F69  30FF               	movlw	255
  3823     0F6A  1803               	skipnc
  3824     0F6B  3000               	movlw	0
  3825     0F6C  00C9               	movwf	??_i2c_rd_bytes+1
  3826     0F6D  0849               	movf	??_i2c_rd_bytes+1,w
  3827     0F6E  3A80               	xorlw	128
  3828     0F6F  3C80               	sublw	128
  3829     0F70  1D03               	skipz
  3830     0F71  2F74               	goto	u2925
  3831     0F72  0848               	movf	??_i2c_rd_bytes,w
  3832     0F73  024B               	subwf	i2c_rd_bytes@i,w
  3833     0F74                     u2925:
  3834     0F74  1C03               	skipc
  3835     0F75  2F77               	goto	u2921
  3836     0F76  2F78               	goto	u2920
  3837     0F77                     u2921:
  3838     0F77  2F54               	goto	l3170
  3839     0F78                     u2920:
  3840     0F78                     l3176:
  3841                           
  3842                           ;i2c.c: 129:     byte_arr[size - 1] = i2c_rd(0x80);
  3843     0F78  3080               	movlw	128
  3844     0F79  318E  2601  318F   	fcall	_i2c_rd
  3845     0F7C  0020               	movlb	0	; select bank0
  3846     0F7D  00C8               	movwf	??_i2c_rd_bytes
  3847     0F7E  0878               	movf	i2c_rd_bytes@size,w
  3848     0F7F  074A               	addwf	i2c_rd_bytes@byte_arr,w
  3849     0F80  00C9               	movwf	??_i2c_rd_bytes+1
  3850     0F81  0849               	movf	??_i2c_rd_bytes+1,w
  3851     0F82  3EFF               	addlw	-1
  3852     0F83  0086               	movwf	6
  3853     0F84  0187               	clrf	7
  3854     0F85  0848               	movf	??_i2c_rd_bytes,w
  3855     0F86  0081               	movwf	1
  3856     0F87                     l427:
  3857     0F87  0008               	return
  3858     0F88                     __end_of_i2c_rd_bytes:
  3859                           
  3860                           	psect	text6
  3861     0E01                     __ptext6:	
  3862 ;; *************** function _i2c_rd *****************
  3863 ;; Defined at:
  3864 ;;		line 107 in file "i2c.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  ack             1    wreg     unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  ack             1    5[COMMON] unsigned char 
  3869 ;;  ret             1    7[COMMON] unsigned char 
  3870 ;;  i               1    6[COMMON] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      unsigned char 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3880 ;;      Params:         0       0       0       0       0       0       0       0
  3881 ;;      Locals:         3       0       0       0       0       0       0       0
  3882 ;;      Temps:          1       0       0       0       0       0       0       0
  3883 ;;      Totals:         4       0       0       0       0       0       0       0
  3884 ;;Total ram usage:        4 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 4
  3887 ;; This function calls:
  3888 ;;		_bit_in
  3889 ;;		_bit_out
  3890 ;; This function is called by:
  3891 ;;		_i2c_rd_bytes
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895     0E01                     _i2c_rd:	
  3896                           ;psect for function _i2c_rd
  3897                           
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _i2c_rd: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3901                           ;i2c_rd@ack stored from wreg
  3902     0E01  00F5               	movwf	i2c_rd@ack
  3903     0E02                     l3036:
  3904                           
  3905                           ;i2c.c: 107: uint8_t i2c_rd(uint8_t ack);i2c.c: 108: {;i2c.c: 109:     uint8_t i;;i2c.c:
      +                           110:     uint8_t ret=0;
  3906     0E02  01F7               	clrf	i2c_rd@ret
  3907                           
  3908                           ;i2c.c: 112:     for (i = 0; i < 8; i++)
  3909     0E03  01F6               	clrf	i2c_rd@i
  3910     0E04                     l3042:
  3911                           
  3912                           ;i2c.c: 113:     {;i2c.c: 114:         ret = (uint8_t)(ret << 1);
  3913     0E04  3577               	lslf	i2c_rd@ret,w
  3914     0E05  00F7               	movwf	i2c_rd@ret
  3915     0E06                     l3044:
  3916                           
  3917                           ;i2c.c: 115:         bit_in(&ret);
  3918     0E06  3077               	movlw	(low (i2c_rd@ret| 0))& (0+255)
  3919     0E07  318D  255E  318E   	fcall	_bit_in
  3920     0E0A                     l3046:
  3921                           
  3922                           ;i2c.c: 116:     }
  3923     0E0A  3001               	movlw	1
  3924     0E0B  00F4               	movwf	??_i2c_rd
  3925     0E0C  0874               	movf	??_i2c_rd,w
  3926     0E0D  07F6               	addwf	i2c_rd@i,f
  3927     0E0E                     l3048:
  3928     0E0E  3008               	movlw	8
  3929     0E0F  0276               	subwf	i2c_rd@i,w
  3930     0E10  1C03               	skipc
  3931     0E11  2E13               	goto	u2711
  3932     0E12  2E14               	goto	u2710
  3933     0E13                     u2711:
  3934     0E13  2E04               	goto	l3042
  3935     0E14                     u2710:
  3936     0E14                     l3050:
  3937                           
  3938                           ;i2c.c: 118:     bit_out(ack);
  3939     0E14  0875               	movf	i2c_rd@ack,w
  3940     0E15  318E  269F  318E   	fcall	_bit_out
  3941     0E18                     l3052:
  3942                           
  3943                           ;i2c.c: 119:     return ret;
  3944     0E18  0877               	movf	i2c_rd@ret,w
  3945     0E19                     l421:
  3946     0E19  0008               	return
  3947     0E1A                     __end_of_i2c_rd:
  3948                           
  3949                           	psect	text7
  3950     0D72                     __ptext7:	
  3951 ;; *************** function ___bmul *****************
  3952 ;; Defined at:
  3953 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  multiplier      1    wreg     unsigned char 
  3956 ;;  multiplicand    1    2[COMMON] unsigned char 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  multiplier      1    5[COMMON] unsigned char 
  3959 ;;  product         1    4[COMMON] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      unsigned char 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3969 ;;      Params:         1       0       0       0       0       0       0       0
  3970 ;;      Locals:         2       0       0       0       0       0       0       0
  3971 ;;      Temps:          1       0       0       0       0       0       0       0
  3972 ;;      Totals:         4       0       0       0       0       0       0       0
  3973 ;;Total ram usage:        4 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 3
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_read_time
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983     0D72                     ___bmul:	
  3984                           ;psect for function ___bmul
  3985                           
  3986                           
  3987                           ;incstack = 0
  3988                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3989                           ;___bmul@multiplier stored from wreg
  3990     0D72  00F5               	movwf	___bmul@multiplier
  3991     0D73                     l2668:
  3992     0D73  01F4               	clrf	___bmul@product
  3993     0D74                     l2670:
  3994     0D74  1C75               	btfss	___bmul@multiplier,0
  3995     0D75  2D77               	goto	u2121
  3996     0D76  2D78               	goto	u2120
  3997     0D77                     u2121:
  3998     0D77  2D7C               	goto	l2674
  3999     0D78                     u2120:
  4000     0D78                     l2672:
  4001     0D78  0872               	movf	___bmul@multiplicand,w
  4002     0D79  00F3               	movwf	??___bmul
  4003     0D7A  0873               	movf	??___bmul,w
  4004     0D7B  07F4               	addwf	___bmul@product,f
  4005     0D7C                     l2674:
  4006     0D7C  1003               	clrc
  4007     0D7D  0DF2               	rlf	___bmul@multiplicand,f
  4008     0D7E                     l2676:
  4009     0D7E  1003               	clrc
  4010     0D7F  0CF5               	rrf	___bmul@multiplier,f
  4011     0D80  0875               	movf	___bmul@multiplier,w
  4012     0D81  1D03               	btfss	3,2
  4013     0D82  2D84               	goto	u2131
  4014     0D83  2D85               	goto	u2130
  4015     0D84                     u2131:
  4016     0D84  2D74               	goto	l2670
  4017     0D85                     u2130:
  4018     0D85                     l2678:
  4019     0D85  0874               	movf	___bmul@product,w
  4020     0D86                     l882:
  4021     0D86  0008               	return
  4022     0D87                     __end_of___bmul:
  4023                           
  4024                           	psect	text8
  4025     0EBB                     __ptext8:	
  4026 ;; *************** function _read_buttons *****************
  4027 ;; Defined at:
  4028 ;;		line 86 in file "main.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4042 ;;      Params:         0       0       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 4
  4049 ;; This function calls:
  4050 ;;		_read_button
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056     0EBB                     _read_buttons:	
  4057                           ;psect for function _read_buttons
  4058                           
  4059     0EBB                     l2692:	
  4060                           ;incstack = 0
  4061                           ; Regs used in _read_buttons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4062                           
  4063                           
  4064                           ;main.c: 87:     read_button(&btn1, PORTBbits.RB7);
  4065     0EBB  3000               	movlw	0
  4066     0EBC  0020               	movlb	0	; select bank0
  4067     0EBD  1B8D               	btfsc	13,7	;volatile
  4068     0EBE  3001               	movlw	1
  4069     0EBF  00F2               	movwf	read_button@pin_val
  4070     0EC0  3046               	movlw	(low (_btn1| 0))& (0+255)
  4071     0EC1  3184  2470  318E   	fcall	_read_button
  4072                           
  4073                           ;main.c: 88:     read_button(&btn2, PORTBbits.RB6);
  4074     0EC4  3000               	movlw	0
  4075     0EC5  0020               	movlb	0	; select bank0
  4076     0EC6  1B0D               	btfsc	13,6	;volatile
  4077     0EC7  3001               	movlw	1
  4078     0EC8  00F2               	movwf	read_button@pin_val
  4079     0EC9  3044               	movlw	(low (_btn2| 0))& (0+255)
  4080     0ECA  3184  2470  318E   	fcall	_read_button
  4081                           
  4082                           ;main.c: 89:     read_button(&btn3, PORTBbits.RB5);
  4083     0ECD  3000               	movlw	0
  4084     0ECE  0020               	movlb	0	; select bank0
  4085     0ECF  1A8D               	btfsc	13,5	;volatile
  4086     0ED0  3001               	movlw	1
  4087     0ED1  00F2               	movwf	read_button@pin_val
  4088     0ED2  3042               	movlw	(low (_btn3| 0))& (0+255)
  4089     0ED3  3184  2470  318E   	fcall	_read_button
  4090     0ED6                     l260:
  4091     0ED6  0008               	return
  4092     0ED7                     __end_of_read_buttons:
  4093                           
  4094                           	psect	text9
  4095     0470                     __ptext9:	
  4096 ;; *************** function _read_button *****************
  4097 ;; Defined at:
  4098 ;;		line 3 in file "button.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  btn             1    wreg     PTR struct Button
  4101 ;;		 -> btn3(2), btn2(2), btn1(2), 
  4102 ;;  pin_val         1    2[COMMON] unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  btn             1    5[COMMON] PTR struct Button
  4105 ;;		 -> btn3(2), btn2(2), btn1(2), 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4115 ;;      Params:         1       0       0       0       0       0       0       0
  4116 ;;      Locals:         1       0       0       0       0       0       0       0
  4117 ;;      Temps:          2       0       0       0       0       0       0       0
  4118 ;;      Totals:         4       0       0       0       0       0       0       0
  4119 ;;Total ram usage:        4 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 3
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_read_buttons
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129     0470                     _read_button:	
  4130                           ;psect for function _read_button
  4131                           
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _read_button: [wreg-fsr1h+status,2+status,0]
  4135                           ;read_button@btn stored from wreg
  4136     0470  00F5               	movwf	read_button@btn
  4137     0471                     l2502:
  4138                           
  4139                           ;button.c: 3: void read_button(Button* btn, uint8_t pin_val);button.c: 4: {;button.c: 5:
      +                               if(pin_val == 0)
  4140     0471  0872               	movf	read_button@pin_val,w
  4141     0472  1D03               	btfss	3,2
  4142     0473  2C75               	goto	u1881
  4143     0474  2C76               	goto	u1880
  4144     0475                     u1881:
  4145     0475  2CCF               	goto	l2526
  4146     0476                     u1880:
  4147     0476  2CB6               	goto	l2524
  4148     0477                     l2506:
  4149                           
  4150                           ;button.c: 9:             btn->pressed_tick_count++;
  4151     0477  3001               	movlw	1
  4152     0478  00F3               	movwf	??_read_button
  4153     0479  0A75               	incf	read_button@btn,w
  4154     047A  0086               	movwf	6
  4155     047B  0187               	clrf	7
  4156     047C  0873               	movf	??_read_button,w
  4157     047D  0781               	addwf	1,f
  4158     047E                     l2508:
  4159                           
  4160                           ;button.c: 10:             if(btn->pressed_tick_count > 5) btn->state = PRESSED;
  4161     047E  0A75               	incf	read_button@btn,w
  4162     047F  0086               	movwf	6
  4163     0480  0187               	clrf	7
  4164     0481  3006               	movlw	6
  4165     0482  0201               	subwf	1,w
  4166     0483  1C03               	skipc
  4167     0484  2C86               	goto	u1891
  4168     0485  2C87               	goto	u1890
  4169     0486                     u1891:
  4170     0486  2CD7               	goto	l614
  4171     0487                     u1890:
  4172     0487                     l2510:
  4173     0487  0875               	movf	read_button@btn,w
  4174     0488  0086               	movwf	6
  4175     0489  0187               	clrf	7
  4176     048A  0181               	clrf	1
  4177     048B  0A81               	incf	1,f
  4178     048C  2CD7               	goto	l614
  4179     048D                     l2512:
  4180                           
  4181                           ;button.c: 13:             btn->pressed_tick_count++;
  4182     048D  3001               	movlw	1
  4183     048E  00F3               	movwf	??_read_button
  4184     048F  0A75               	incf	read_button@btn,w
  4185     0490  0086               	movwf	6
  4186     0491  0187               	clrf	7
  4187     0492  0873               	movf	??_read_button,w
  4188     0493  0781               	addwf	1,f
  4189     0494                     l2514:
  4190                           
  4191                           ;button.c: 14:             btn->state = HOLD_PRESSED;
  4192     0494  0875               	movf	read_button@btn,w
  4193     0495  0086               	movwf	6
  4194     0496  0187               	clrf	7
  4195     0497  3002               	movlw	2
  4196     0498  0081               	movwf	1
  4197                           
  4198                           ;button.c: 15:             break;
  4199     0499  2CD7               	goto	l614
  4200     049A                     l2516:
  4201                           
  4202                           ;button.c: 17:             btn->pressed_tick_count++;
  4203     049A  3001               	movlw	1
  4204     049B  00F3               	movwf	??_read_button
  4205     049C  0A75               	incf	read_button@btn,w
  4206     049D  0086               	movwf	6
  4207     049E  0187               	clrf	7
  4208     049F  0873               	movf	??_read_button,w
  4209     04A0  0781               	addwf	1,f
  4210     04A1                     l2518:
  4211                           
  4212                           ;button.c: 18:             if(btn->pressed_tick_count > 250) btn->state = LONG_PRESSED;
  4213     04A1  0A75               	incf	read_button@btn,w
  4214     04A2  0086               	movwf	6
  4215     04A3  0187               	clrf	7
  4216     04A4  30FB               	movlw	251
  4217     04A5  0201               	subwf	1,w
  4218     04A6  1C03               	skipc
  4219     04A7  2CA9               	goto	u1901
  4220     04A8  2CAA               	goto	u1900
  4221     04A9                     u1901:
  4222     04A9  2CD7               	goto	l614
  4223     04AA                     u1900:
  4224     04AA                     l2520:
  4225     04AA  0875               	movf	read_button@btn,w
  4226     04AB  0086               	movwf	6
  4227     04AC  0187               	clrf	7
  4228     04AD  3003               	movlw	3
  4229     04AE  0081               	movwf	1
  4230     04AF  2CD7               	goto	l614
  4231     04B0                     l2522:
  4232                           
  4233                           ;button.c: 21:               btn->state = HOLD_LONG_PRESSED;
  4234     04B0  0875               	movf	read_button@btn,w
  4235     04B1  0086               	movwf	6
  4236     04B2  0187               	clrf	7
  4237     04B3  3004               	movlw	4
  4238     04B4  0081               	movwf	1
  4239                           
  4240                           ;button.c: 22:               break;
  4241     04B5  2CD7               	goto	l614
  4242     04B6                     l2524:
  4243     04B6  0875               	movf	read_button@btn,w
  4244     04B7  0086               	movwf	6
  4245     04B8  0187               	clrf	7
  4246     04B9  0801               	movf	1,w
  4247     04BA  00F3               	movwf	??_read_button
  4248     04BB  01F4               	clrf	??_read_button+1
  4249                           
  4250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4251                           ; Switch size 1, requested type "simple"
  4252                           ; Number of cases is 1, Range of values is 0 to 0
  4253                           ; switch strategies available:
  4254                           ; Name         Instructions Cycles
  4255                           ; simple_byte            4     3 (average)
  4256                           ; direct_byte            8     6 (fixed)
  4257                           ; jumptable            260     6 (fixed)
  4258                           ;	Chosen strategy is simple_byte
  4259     04BC  0874               	movf	??_read_button+1,w
  4260     04BD  3A00               	xorlw	0	; case 0
  4261     04BE  1903               	skipnz
  4262     04BF  2CC1               	goto	l3342
  4263     04C0  2CD7               	goto	l614
  4264     04C1                     l3342:
  4265                           
  4266                           ; Switch size 1, requested type "simple"
  4267                           ; Number of cases is 4, Range of values is 0 to 3
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte           13     7 (average)
  4271                           ; direct_byte           14     6 (fixed)
  4272                           ; jumptable            260     6 (fixed)
  4273                           ;	Chosen strategy is simple_byte
  4274     04C1  0873               	movf	??_read_button,w
  4275     04C2  3A00               	xorlw	0	; case 0
  4276     04C3  1903               	skipnz
  4277     04C4  2C77               	goto	l2506
  4278     04C5  3A01               	xorlw	1	; case 1
  4279     04C6  1903               	skipnz
  4280     04C7  2C8D               	goto	l2512
  4281     04C8  3A03               	xorlw	3	; case 2
  4282     04C9  1903               	skipnz
  4283     04CA  2C9A               	goto	l2516
  4284     04CB  3A01               	xorlw	1	; case 3
  4285     04CC  1903               	skipnz
  4286     04CD  2CB0               	goto	l2522
  4287     04CE  2CD7               	goto	l614
  4288     04CF                     l2526:
  4289                           
  4290                           ;button.c: 28:     {;button.c: 29:        btn->state = RELEASED;
  4291     04CF  0875               	movf	read_button@btn,w
  4292     04D0  0086               	movwf	6
  4293     04D1  0187               	clrf	7
  4294     04D2  0181               	clrf	1
  4295                           
  4296                           ;button.c: 30:        btn->pressed_tick_count = 0;
  4297     04D3  0A75               	incf	read_button@btn,w
  4298     04D4  0086               	movwf	6
  4299     04D5  0187               	clrf	7
  4300     04D6  0181               	clrf	1
  4301     04D7                     l614:
  4302     04D7  0008               	return
  4303     04D8                     __end_of_read_button:
  4304                           
  4305                           	psect	text10
  4306     0F19                     __ptext10:	
  4307 ;; *************** function _handle_state *****************
  4308 ;; Defined at:
  4309 ;;		line 200 in file "main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4323 ;;      Params:         0       0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0
  4325 ;;      Temps:          0       2       0       0       0       0       0       0
  4326 ;;      Totals:         0       2       0       0       0       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 8
  4330 ;; This function calls:
  4331 ;;		_handle_display_date
  4332 ;;		_handle_display_time
  4333 ;;		_handle_set_day
  4334 ;;		_handle_set_hour
  4335 ;;		_handle_set_minute
  4336 ;;		_handle_set_month
  4337 ;; This function is called by:
  4338 ;;		_main
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342     0F19                     _handle_state:	
  4343                           ;psect for function _handle_state
  4344                           
  4345     0F19                     l3178:	
  4346                           ;incstack = 0
  4347                           ; Regs used in _handle_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4348                           
  4349                           
  4350                           ;main.c: 201:     switch (state) {
  4351     0F19  2F32               	goto	l3192
  4352     0F1A                     l3180:
  4353                           
  4354                           ;main.c: 203:             handle_display_time();
  4355     0F1A  318E  26F5  318F   	fcall	_handle_display_time
  4356                           
  4357                           ;main.c: 204:             break;
  4358     0F1D  2F4F               	goto	l329
  4359     0F1E                     l3182:
  4360                           
  4361                           ;main.c: 206:             handle_display_date();
  4362     0F1E  318D  25CF  318F   	fcall	_handle_display_date
  4363                           
  4364                           ;main.c: 207:             break;
  4365     0F21  2F4F               	goto	l329
  4366     0F22                     l3184:
  4367                           
  4368                           ;main.c: 209:             handle_set_hour();
  4369     0F22  318F  27C4  318F   	fcall	_handle_set_hour
  4370                           
  4371                           ;main.c: 210:             break;
  4372     0F25  2F4F               	goto	l329
  4373     0F26                     l3186:
  4374                           
  4375                           ;main.c: 212:             handle_set_minute();
  4376     0F26  3187  27AB  318F   	fcall	_handle_set_minute
  4377                           
  4378                           ;main.c: 213:             break;
  4379     0F29  2F4F               	goto	l329
  4380     0F2A                     l3188:
  4381                           
  4382                           ;main.c: 215:             handle_set_day();
  4383     0F2A  318F  2788  318F   	fcall	_handle_set_day
  4384                           
  4385                           ;main.c: 216:             break;
  4386     0F2D  2F4F               	goto	l329
  4387     0F2E                     l3190:
  4388                           
  4389                           ;main.c: 218:             handle_set_month();
  4390     0F2E  3186  2691  318F   	fcall	_handle_set_month
  4391                           
  4392                           ;main.c: 219:     }
  4393     0F31  2F4F               	goto	l329
  4394     0F32                     l3192:
  4395     0F32  0020               	movlb	0	; select bank0
  4396     0F33  082E               	movf	_state,w
  4397     0F34  00DC               	movwf	??_handle_state
  4398     0F35  01DD               	clrf	??_handle_state+1
  4399                           
  4400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4401                           ; Switch size 1, requested type "simple"
  4402                           ; Number of cases is 1, Range of values is 0 to 0
  4403                           ; switch strategies available:
  4404                           ; Name         Instructions Cycles
  4405                           ; simple_byte            4     3 (average)
  4406                           ; direct_byte            8     6 (fixed)
  4407                           ; jumptable            260     6 (fixed)
  4408                           ;	Chosen strategy is simple_byte
  4409     0F36  085D               	movf	??_handle_state+1,w
  4410     0F37  3A00               	xorlw	0	; case 0
  4411     0F38  1903               	skipnz
  4412     0F39  2F3B               	goto	l3344
  4413     0F3A  2F4F               	goto	l329
  4414     0F3B                     l3344:
  4415                           
  4416                           ; Switch size 1, requested type "simple"
  4417                           ; Number of cases is 6, Range of values is 0 to 5
  4418                           ; switch strategies available:
  4419                           ; Name         Instructions Cycles
  4420                           ; direct_byte           18     6 (fixed)
  4421                           ; simple_byte           19    10 (average)
  4422                           ; jumptable            260     6 (fixed)
  4423                           ;	Chosen strategy is simple_byte
  4424     0F3B  085C               	movf	??_handle_state,w
  4425     0F3C  3A00               	xorlw	0	; case 0
  4426     0F3D  1903               	skipnz
  4427     0F3E  2F1A               	goto	l3180
  4428     0F3F  3A01               	xorlw	1	; case 1
  4429     0F40  1903               	skipnz
  4430     0F41  2F1E               	goto	l3182
  4431     0F42  3A03               	xorlw	3	; case 2
  4432     0F43  1903               	skipnz
  4433     0F44  2F22               	goto	l3184
  4434     0F45  3A01               	xorlw	1	; case 3
  4435     0F46  1903               	skipnz
  4436     0F47  2F26               	goto	l3186
  4437     0F48  3A07               	xorlw	7	; case 4
  4438     0F49  1903               	skipnz
  4439     0F4A  2F2A               	goto	l3188
  4440     0F4B  3A01               	xorlw	1	; case 5
  4441     0F4C  1903               	skipnz
  4442     0F4D  2F2E               	goto	l3190
  4443     0F4E  2F4F               	goto	l329
  4444     0F4F                     l329:
  4445     0F4F  0008               	return
  4446     0F50                     __end_of_handle_state:
  4447                           
  4448                           	psect	text11
  4449     0691                     __ptext11:	
  4450 ;; *************** function _handle_set_month *****************
  4451 ;; Defined at:
  4452 ;;		line 178 in file "main.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;		None
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4466 ;;      Params:         0       0       0       0       0       0       0       0
  4467 ;;      Locals:         0       0       0       0       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0       0       0       0
  4469 ;;      Totals:         0       0       0       0       0       0       0       0
  4470 ;;Total ram usage:        0 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; Hardware stack levels required when called: 7
  4473 ;; This function calls:
  4474 ;;		_copy_time_fields
  4475 ;;		_decrease_month
  4476 ;;		_increase_month
  4477 ;;		_set_date_digits
  4478 ;;		_set_digit_displayed
  4479 ;;		_set_digit_displayed_all
  4480 ;;		_set_time_digits
  4481 ;;		_update_time
  4482 ;; This function is called by:
  4483 ;;		_handle_state
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487     0691                     _handle_set_month:	
  4488                           ;psect for function _handle_set_month
  4489                           
  4490     0691                     l3144:	
  4491                           ;incstack = 0
  4492                           ; Regs used in _handle_set_month: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4493                           
  4494                           
  4495                           ;main.c: 179:     if (btn2.state == PRESSED) {
  4496     0691  0020               	movlb	0	; select bank0
  4497     0692  0344               	decf	_btn2,w
  4498     0693  1D03               	btfss	3,2
  4499     0694  2E96               	goto	u2881
  4500     0695  2E97               	goto	u2880
  4501     0696                     u2881:
  4502     0696  2EA8               	goto	l3154
  4503     0697                     u2880:
  4504     0697                     l3146:
  4505                           
  4506                           ;main.c: 180:         update_time(&updated_time);
  4507     0697  3030               	movlw	(low (_updated_time| 0))& (0+255)
  4508     0698  3180  2029  3186   	fcall	_update_time
  4509     069B                     l3148:
  4510                           
  4511                           ;main.c: 181:         copy_time_fields(&updated_time, &time);
  4512     069B  3039               	movlw	(low (_time| 0))& (0+255)
  4513     069C  00F2               	movwf	copy_time_fields@dest_time
  4514     069D  3030               	movlw	(low (_updated_time| 0))& (0+255)
  4515     069E  3185  2590  3186   	fcall	_copy_time_fields
  4516     06A1                     l3150:
  4517                           
  4518                           ;main.c: 182:         set_time_digits(&time);
  4519     06A1  3039               	movlw	(low (_time| 0))& (0+255)
  4520     06A2  3185  25E8  3186   	fcall	_set_time_digits
  4521     06A5                     l3152:
  4522                           
  4523                           ;main.c: 183:         state = DISPLAY_TIME;
  4524     06A5  0020               	movlb	0	; select bank0
  4525     06A6  01AE               	clrf	_state
  4526                           
  4527                           ;main.c: 184:     } else {
  4528     06A7  2EC3               	goto	l3162
  4529     06A8                     l3154:
  4530                           
  4531                           ;main.c: 185:         if (btn1.state == PRESSED) {
  4532     06A8  0346               	decf	_btn1,w
  4533     06A9  1D03               	btfss	3,2
  4534     06AA  2EAC               	goto	u2891
  4535     06AB  2EAD               	goto	u2890
  4536     06AC                     u2891:
  4537     06AC  2EB6               	goto	l3158
  4538     06AD                     u2890:
  4539     06AD                     l3156:
  4540                           
  4541                           ;main.c: 186:             decrease_month(&updated_time);
  4542     06AD  3030               	movlw	(low (_updated_time| 0))& (0+255)
  4543     06AE  318D  25E8  3186   	fcall	_decrease_month
  4544                           
  4545                           ;main.c: 187:             set_date_digits(&updated_time);
  4546     06B1  3030               	movlw	(low (_updated_time| 0))& (0+255)
  4547     06B2  3185  2538  3186   	fcall	_set_date_digits
  4548                           
  4549                           ;main.c: 188:         } else if (btn3.state == PRESSED) {
  4550     06B5  2EC3               	goto	l3162
  4551     06B6                     l3158:
  4552     06B6  0342               	decf	_btn3,w
  4553     06B7  1D03               	btfss	3,2
  4554     06B8  2EBA               	goto	u2901
  4555     06B9  2EBB               	goto	u2900
  4556     06BA                     u2901:
  4557     06BA  2EC3               	goto	l3162
  4558     06BB                     u2900:
  4559     06BB                     l3160:
  4560                           
  4561                           ;main.c: 189:             increase_month(&updated_time);
  4562     06BB  3030               	movlw	(low (_updated_time| 0))& (0+255)
  4563     06BC  318E  2668  3186   	fcall	_increase_month
  4564                           
  4565                           ;main.c: 190:             set_date_digits(&updated_time);
  4566     06BF  3030               	movlw	(low (_updated_time| 0))& (0+255)
  4567     06C0  3185  2538  3186   	fcall	_set_date_digits
  4568     06C3                     l3162:
  4569                           
  4570                           ;main.c: 193:     if (timer_count < 400 / 2) {
  4571     06C3  3000               	movlw	0
  4572     06C4  0020               	movlb	0	; select bank0
  4573     06C5  022B               	subwf	_timer_count+1,w	;volatile
  4574     06C6  30C8               	movlw	200
  4575     06C7  1903               	skipnz
  4576     06C8  022A               	subwf	_timer_count,w	;volatile
  4577     06C9  1803               	skipnc
  4578     06CA  2ECC               	goto	u2911
  4579     06CB  2ECD               	goto	u2910
  4580     06CC                     u2911:
  4581     06CC  2ED6               	goto	l3166
  4582     06CD                     u2910:
  4583     06CD                     l3164:
  4584                           
  4585                           ;main.c: 194:         set_digit_displayed(1, 1, 0, 0);
  4586     06CD  01F2               	clrf	set_digit_displayed@dig1
  4587     06CE  0AF2               	incf	set_digit_displayed@dig1,f
  4588     06CF  01F3               	clrf	set_digit_displayed@dig2
  4589     06D0  01F4               	clrf	set_digit_displayed@dig3
  4590     06D1  3001               	movlw	1
  4591     06D2  318C  24D9  3186   	fcall	_set_digit_displayed
  4592                           
  4593                           ;main.c: 195:     } else {
  4594     06D5  2ED9               	goto	l318
  4595     06D6                     l3166:
  4596                           
  4597                           ;main.c: 196:         set_digit_displayed_all();
  4598     06D6  318C  24E4  3186   	fcall	_set_digit_displayed_all
  4599     06D9                     l318:
  4600     06D9  0008               	return
  4601     06DA                     __end_of_handle_set_month:
  4602                           
  4603                           	psect	text12
  4604     0029                     __ptext12:	
  4605 ;; *************** function _update_time *****************
  4606 ;; Defined at:
  4607 ;;		line 45 in file "time.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  time            1    wreg     PTR struct Time
  4610 ;;		 -> updated_time(9), 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  time            1   19[BANK0 ] PTR struct Time
  4613 ;;		 -> updated_time(9), 
  4614 ;;  reg_arr         7   12[BANK0 ] unsigned char [7]
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4624 ;;      Params:         0       0       0       0       0       0       0       0
  4625 ;;      Locals:         0       8       0       0       0       0       0       0
  4626 ;;      Temps:          0       8       0       0       0       0       0       0
  4627 ;;      Totals:         0      16       0       0       0       0       0       0
  4628 ;;Total ram usage:       16 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 6
  4631 ;; This function calls:
  4632 ;;		___awdiv
  4633 ;;		___awmod
  4634 ;;		_i2c_start
  4635 ;;		_i2c_stop
  4636 ;;		_i2c_wr
  4637 ;;		_i2c_wr_bytes
  4638 ;; This function is called by:
  4639 ;;		_handle_set_month
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643     0029                     _update_time:	
  4644                           ;psect for function _update_time
  4645                           
  4646                           
  4647                           ;incstack = 0
  4648                           ; Regs used in _update_time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4649                           ;update_time@time stored from wreg
  4650     0029  0020               	movlb	0	; select bank0
  4651     002A  00DB               	movwf	update_time@time
  4652     002B                     l3016:
  4653                           
  4654                           ;time.c: 46:     uint8_t reg_arr[7];;time.c: 48:     reg_arr[0] = (uint8_t) (time->ss / 
      +                          10 << 4 | (time->ss % 10));
  4655     002B  300A               	movlw	10
  4656     002C  00F2               	movwf	___awmod@divisor
  4657     002D  3000               	movlw	0
  4658     002E  00F3               	movwf	___awmod@divisor+1
  4659     002F  085B               	movf	update_time@time,w
  4660     0030  3E04               	addlw	4
  4661     0031  0086               	movwf	6
  4662     0032  0187               	clrf	7
  4663     0033  0801               	movf	1,w
  4664     0034  00CC               	movwf	??_update_time
  4665     0035  01CD               	clrf	??_update_time+1
  4666     0036  084C               	movf	??_update_time,w
  4667     0037  00F4               	movwf	___awmod@dividend
  4668     0038  084D               	movf	??_update_time+1,w
  4669     0039  00F5               	movwf	___awmod@dividend+1
  4670     003A  3186  263E  3180   	fcall	___awmod
  4671     003D  0872               	movf	?___awmod,w
  4672     003E  0020               	movlb	0	; select bank0
  4673     003F  00CE               	movwf	??_update_time+2
  4674     0040  0873               	movf	?___awmod+1,w
  4675     0041  00CF               	movwf	??_update_time+3
  4676     0042  300A               	movlw	10
  4677     0043  00F2               	movwf	___awdiv@divisor
  4678     0044  3000               	movlw	0
  4679     0045  00F3               	movwf	___awdiv@divisor+1
  4680     0046  085B               	movf	update_time@time,w
  4681     0047  3E04               	addlw	4
  4682     0048  0086               	movwf	6
  4683     0049  0187               	clrf	7
  4684     004A  0801               	movf	1,w
  4685     004B  00D0               	movwf	??_update_time+4
  4686     004C  01D1               	clrf	??_update_time+5
  4687     004D  0850               	movf	??_update_time+4,w
  4688     004E  00F4               	movwf	___awdiv@dividend
  4689     004F  0851               	movf	??_update_time+5,w
  4690     0050  00F5               	movwf	___awdiv@dividend+1
  4691     0051  3184  24D8  3180   	fcall	___awdiv
  4692     0054  0872               	movf	?___awdiv,w
  4693     0055  0020               	movlb	0	; select bank0
  4694     0056  00D2               	movwf	??_update_time+6
  4695     0057  3003               	movlw	3
  4696     0058                     u2625:
  4697     0058  35D2               	lslf	??_update_time+6,f
  4698     0059  3EFF               	addlw	-1
  4699     005A  1D03               	skipz
  4700     005B  2858               	goto	u2625
  4701     005C  3552               	lslf	??_update_time+6,w
  4702     005D  044E               	iorwf	??_update_time+2,w
  4703     005E  00D4               	movwf	update_time@reg_arr
  4704                           
  4705                           ;time.c: 49:     reg_arr[1] = (uint8_t) (time->mm / 10 << 4 | (time->mm % 10));
  4706     005F  300A               	movlw	10
  4707     0060  00F2               	movwf	___awmod@divisor
  4708     0061  3000               	movlw	0
  4709     0062  00F3               	movwf	___awmod@divisor+1
  4710     0063  085B               	movf	update_time@time,w
  4711     0064  3E03               	addlw	3
  4712     0065  0086               	movwf	6
  4713     0066  0187               	clrf	7
  4714     0067  0801               	movf	1,w
  4715     0068  00CC               	movwf	??_update_time
  4716     0069  01CD               	clrf	??_update_time+1
  4717     006A  084C               	movf	??_update_time,w
  4718     006B  00F4               	movwf	___awmod@dividend
  4719     006C  084D               	movf	??_update_time+1,w
  4720     006D  00F5               	movwf	___awmod@dividend+1
  4721     006E  3186  263E  3180   	fcall	___awmod
  4722     0071  0872               	movf	?___awmod,w
  4723     0072  0020               	movlb	0	; select bank0
  4724     0073  00CE               	movwf	??_update_time+2
  4725     0074  0873               	movf	?___awmod+1,w
  4726     0075  00CF               	movwf	??_update_time+3
  4727     0076  300A               	movlw	10
  4728     0077  00F2               	movwf	___awdiv@divisor
  4729     0078  3000               	movlw	0
  4730     0079  00F3               	movwf	___awdiv@divisor+1
  4731     007A  085B               	movf	update_time@time,w
  4732     007B  3E03               	addlw	3
  4733     007C  0086               	movwf	6
  4734     007D  0187               	clrf	7
  4735     007E  0801               	movf	1,w
  4736     007F  00D0               	movwf	??_update_time+4
  4737     0080  01D1               	clrf	??_update_time+5
  4738     0081  0850               	movf	??_update_time+4,w
  4739     0082  00F4               	movwf	___awdiv@dividend
  4740     0083  0851               	movf	??_update_time+5,w
  4741     0084  00F5               	movwf	___awdiv@dividend+1
  4742     0085  3184  24D8  3180   	fcall	___awdiv
  4743     0088  0872               	movf	?___awdiv,w
  4744     0089  0020               	movlb	0	; select bank0
  4745     008A  00D2               	movwf	??_update_time+6
  4746     008B  3003               	movlw	3
  4747     008C                     u2635:
  4748     008C  35D2               	lslf	??_update_time+6,f
  4749     008D  3EFF               	addlw	-1
  4750     008E  1D03               	skipz
  4751     008F  288C               	goto	u2635
  4752     0090  3552               	lslf	??_update_time+6,w
  4753     0091  044E               	iorwf	??_update_time+2,w
  4754     0092  00D5               	movwf	update_time@reg_arr+1
  4755     0093                     l3018:
  4756                           
  4757                           ;time.c: 51:     if (time->is_12) {
  4758     0093  0A5B               	incf	update_time@time,w
  4759     0094  0086               	movwf	6
  4760     0095  0187               	clrf	7
  4761     0096  0801               	movf	1,w
  4762     0097  1903               	btfsc	3,2
  4763     0098  289A               	goto	u2641
  4764     0099  289B               	goto	u2640
  4765     009A                     u2641:
  4766     009A  28DA               	goto	l3022
  4767     009B                     u2640:
  4768     009B                     l3020:
  4769                           
  4770                           ;time.c: 52:         reg_arr[2] = (uint8_t) (1 << 6 | time->pm << 5 | time->hh / 10 << 4
      +                           | (time->hh % 10));
  4771     009B  300A               	movlw	10
  4772     009C  00F2               	movwf	___awmod@divisor
  4773     009D  3000               	movlw	0
  4774     009E  00F3               	movwf	___awmod@divisor+1
  4775     009F  085B               	movf	update_time@time,w
  4776     00A0  0086               	movwf	6
  4777     00A1  0187               	clrf	7
  4778     00A2  0801               	movf	1,w
  4779     00A3  00CC               	movwf	??_update_time
  4780     00A4  01CD               	clrf	??_update_time+1
  4781     00A5  084C               	movf	??_update_time,w
  4782     00A6  00F4               	movwf	___awmod@dividend
  4783     00A7  084D               	movf	??_update_time+1,w
  4784     00A8  00F5               	movwf	___awmod@dividend+1
  4785     00A9  3186  263E  3180   	fcall	___awmod
  4786     00AC  0872               	movf	?___awmod,w
  4787     00AD  0020               	movlb	0	; select bank0
  4788     00AE  00CE               	movwf	??_update_time+2
  4789     00AF  0873               	movf	?___awmod+1,w
  4790     00B0  00CF               	movwf	??_update_time+3
  4791     00B1  300A               	movlw	10
  4792     00B2  00F2               	movwf	___awdiv@divisor
  4793     00B3  3000               	movlw	0
  4794     00B4  00F3               	movwf	___awdiv@divisor+1
  4795     00B5  085B               	movf	update_time@time,w
  4796     00B6  0086               	movwf	6
  4797     00B7  0187               	clrf	7
  4798     00B8  0801               	movf	1,w
  4799     00B9  00D0               	movwf	??_update_time+4
  4800     00BA  01D1               	clrf	??_update_time+5
  4801     00BB  0850               	movf	??_update_time+4,w
  4802     00BC  00F4               	movwf	___awdiv@dividend
  4803     00BD  0851               	movf	??_update_time+5,w
  4804     00BE  00F5               	movwf	___awdiv@dividend+1
  4805     00BF  3184  24D8  3180   	fcall	___awdiv
  4806     00C2  0872               	movf	?___awdiv,w
  4807     00C3  0020               	movlb	0	; select bank0
  4808     00C4  00D2               	movwf	??_update_time+6
  4809     00C5  3004               	movlw	4
  4810     00C6                     u2655:
  4811     00C6  35D2               	lslf	??_update_time+6,f
  4812     00C7  0B89               	decfsz	9,f
  4813     00C8  28C6               	goto	u2655
  4814     00C9  085B               	movf	update_time@time,w
  4815     00CA  3E02               	addlw	2
  4816     00CB  0086               	movwf	6
  4817     00CC  0187               	clrf	7
  4818     00CD  0801               	movf	1,w
  4819     00CE  00D3               	movwf	??_update_time+7
  4820     00CF  3004               	movlw	4
  4821     00D0                     u2665:
  4822     00D0  35D3               	lslf	??_update_time+7,f
  4823     00D1  3EFF               	addlw	-1
  4824     00D2  1D03               	skipz
  4825     00D3  28D0               	goto	u2665
  4826     00D4  3553               	lslf	??_update_time+7,w
  4827     00D5  0452               	iorwf	??_update_time+6,w
  4828     00D6  044E               	iorwf	??_update_time+2,w
  4829     00D7  3840               	iorlw	64
  4830     00D8  00D6               	movwf	update_time@reg_arr+2
  4831                           
  4832                           ;time.c: 53:     } else {
  4833     00D9  290C               	goto	l3024
  4834     00DA                     l3022:
  4835                           
  4836                           ;time.c: 54:         reg_arr[2] = (uint8_t) (time->hh / 10 << 4 | (time->hh % 10));
  4837     00DA  300A               	movlw	10
  4838     00DB  00F2               	movwf	___awmod@divisor
  4839     00DC  3000               	movlw	0
  4840     00DD  00F3               	movwf	___awmod@divisor+1
  4841     00DE  085B               	movf	update_time@time,w
  4842     00DF  0086               	movwf	6
  4843     00E0  0187               	clrf	7
  4844     00E1  0801               	movf	1,w
  4845     00E2  00CC               	movwf	??_update_time
  4846     00E3  01CD               	clrf	??_update_time+1
  4847     00E4  084C               	movf	??_update_time,w
  4848     00E5  00F4               	movwf	___awmod@dividend
  4849     00E6  084D               	movf	??_update_time+1,w
  4850     00E7  00F5               	movwf	___awmod@dividend+1
  4851     00E8  3186  263E  3180   	fcall	___awmod
  4852     00EB  0872               	movf	?___awmod,w
  4853     00EC  0020               	movlb	0	; select bank0
  4854     00ED  00CE               	movwf	??_update_time+2
  4855     00EE  0873               	movf	?___awmod+1,w
  4856     00EF  00CF               	movwf	??_update_time+3
  4857     00F0  300A               	movlw	10
  4858     00F1  00F2               	movwf	___awdiv@divisor
  4859     00F2  3000               	movlw	0
  4860     00F3  00F3               	movwf	___awdiv@divisor+1
  4861     00F4  085B               	movf	update_time@time,w
  4862     00F5  0086               	movwf	6
  4863     00F6  0187               	clrf	7
  4864     00F7  0801               	movf	1,w
  4865     00F8  00D0               	movwf	??_update_time+4
  4866     00F9  01D1               	clrf	??_update_time+5
  4867     00FA  0850               	movf	??_update_time+4,w
  4868     00FB  00F4               	movwf	___awdiv@dividend
  4869     00FC  0851               	movf	??_update_time+5,w
  4870     00FD  00F5               	movwf	___awdiv@dividend+1
  4871     00FE  3184  24D8  3180   	fcall	___awdiv
  4872     0101  0872               	movf	?___awdiv,w
  4873     0102  0020               	movlb	0	; select bank0
  4874     0103  00D2               	movwf	??_update_time+6
  4875     0104  3003               	movlw	3
  4876     0105                     u2675:
  4877     0105  35D2               	lslf	??_update_time+6,f
  4878     0106  3EFF               	addlw	-1
  4879     0107  1D03               	skipz
  4880     0108  2905               	goto	u2675
  4881     0109  3552               	lslf	??_update_time+6,w
  4882     010A  044E               	iorwf	??_update_time+2,w
  4883     010B  00D6               	movwf	update_time@reg_arr+2
  4884     010C                     l3024:
  4885                           
  4886                           ;time.c: 57:     reg_arr[3] = time->day;
  4887     010C  085B               	movf	update_time@time,w
  4888     010D  0086               	movwf	6
  4889     010E  0187               	clrf	7
  4890     010F  3F45               	moviw [5]fsr1
  4891     0110  00D7               	movwf	update_time@reg_arr+3
  4892     0111                     l3026:
  4893                           
  4894                           ;time.c: 58:     reg_arr[4] = (uint8_t) (time->dd / 10 << 4 | (time->dd % 10));
  4895     0111  300A               	movlw	10
  4896     0112  00F2               	movwf	___awmod@divisor
  4897     0113  3000               	movlw	0
  4898     0114  00F3               	movwf	___awmod@divisor+1
  4899     0115  085B               	movf	update_time@time,w
  4900     0116  3E06               	addlw	6
  4901     0117  0086               	movwf	6
  4902     0118  0187               	clrf	7
  4903     0119  0801               	movf	1,w
  4904     011A  00CC               	movwf	??_update_time
  4905     011B  01CD               	clrf	??_update_time+1
  4906     011C  084C               	movf	??_update_time,w
  4907     011D  00F4               	movwf	___awmod@dividend
  4908     011E  084D               	movf	??_update_time+1,w
  4909     011F  00F5               	movwf	___awmod@dividend+1
  4910     0120  3186  263E  3180   	fcall	___awmod
  4911     0123  0872               	movf	?___awmod,w
  4912     0124  0020               	movlb	0	; select bank0
  4913     0125  00CE               	movwf	??_update_time+2
  4914     0126  0873               	movf	?___awmod+1,w
  4915     0127  00CF               	movwf	??_update_time+3
  4916     0128  300A               	movlw	10
  4917     0129  00F2               	movwf	___awdiv@divisor
  4918     012A  3000               	movlw	0
  4919     012B  00F3               	movwf	___awdiv@divisor+1
  4920     012C  085B               	movf	update_time@time,w
  4921     012D  3E06               	addlw	6
  4922     012E  0086               	movwf	6
  4923     012F  0187               	clrf	7
  4924     0130  0801               	movf	1,w
  4925     0131  00D0               	movwf	??_update_time+4
  4926     0132  01D1               	clrf	??_update_time+5
  4927     0133  0850               	movf	??_update_time+4,w
  4928     0134  00F4               	movwf	___awdiv@dividend
  4929     0135  0851               	movf	??_update_time+5,w
  4930     0136  00F5               	movwf	___awdiv@dividend+1
  4931     0137  3184  24D8  3180   	fcall	___awdiv
  4932     013A  0872               	movf	?___awdiv,w
  4933     013B  0020               	movlb	0	; select bank0
  4934     013C  00D2               	movwf	??_update_time+6
  4935     013D  3003               	movlw	3
  4936     013E                     u2685:
  4937     013E  35D2               	lslf	??_update_time+6,f
  4938     013F  3EFF               	addlw	-1
  4939     0140  1D03               	skipz
  4940     0141  293E               	goto	u2685
  4941     0142  3552               	lslf	??_update_time+6,w
  4942     0143  044E               	iorwf	??_update_time+2,w
  4943     0144  00D8               	movwf	update_time@reg_arr+4
  4944     0145                     l3028:
  4945                           
  4946                           ;time.c: 59:     reg_arr[5] = (uint8_t) (time->MM / 10 << 4 | (time->MM % 10));
  4947     0145  300A               	movlw	10
  4948     0146  00F2               	movwf	___awmod@divisor
  4949     0147  3000               	movlw	0
  4950     0148  00F3               	movwf	___awmod@divisor+1
  4951     0149  085B               	movf	update_time@time,w
  4952     014A  3E07               	addlw	7
  4953     014B  0086               	movwf	6
  4954     014C  0187               	clrf	7
  4955     014D  0801               	movf	1,w
  4956     014E  00CC               	movwf	??_update_time
  4957     014F  01CD               	clrf	??_update_time+1
  4958     0150  084C               	movf	??_update_time,w
  4959     0151  00F4               	movwf	___awmod@dividend
  4960     0152  084D               	movf	??_update_time+1,w
  4961     0153  00F5               	movwf	___awmod@dividend+1
  4962     0154  3186  263E  3180   	fcall	___awmod
  4963     0157  0872               	movf	?___awmod,w
  4964     0158  0020               	movlb	0	; select bank0
  4965     0159  00CE               	movwf	??_update_time+2
  4966     015A  0873               	movf	?___awmod+1,w
  4967     015B  00CF               	movwf	??_update_time+3
  4968     015C  300A               	movlw	10
  4969     015D  00F2               	movwf	___awdiv@divisor
  4970     015E  3000               	movlw	0
  4971     015F  00F3               	movwf	___awdiv@divisor+1
  4972     0160  085B               	movf	update_time@time,w
  4973     0161  3E07               	addlw	7
  4974     0162  0086               	movwf	6
  4975     0163  0187               	clrf	7
  4976     0164  0801               	movf	1,w
  4977     0165  00D0               	movwf	??_update_time+4
  4978     0166  01D1               	clrf	??_update_time+5
  4979     0167  0850               	movf	??_update_time+4,w
  4980     0168  00F4               	movwf	___awdiv@dividend
  4981     0169  0851               	movf	??_update_time+5,w
  4982     016A  00F5               	movwf	___awdiv@dividend+1
  4983     016B  3184  24D8  3180   	fcall	___awdiv
  4984     016E  0872               	movf	?___awdiv,w
  4985     016F  0020               	movlb	0	; select bank0
  4986     0170  00D2               	movwf	??_update_time+6
  4987     0171  3003               	movlw	3
  4988     0172                     u2695:
  4989     0172  35D2               	lslf	??_update_time+6,f
  4990     0173  3EFF               	addlw	-1
  4991     0174  1D03               	skipz
  4992     0175  2972               	goto	u2695
  4993     0176  3552               	lslf	??_update_time+6,w
  4994     0177  044E               	iorwf	??_update_time+2,w
  4995     0178  00D9               	movwf	update_time@reg_arr+5
  4996     0179                     l3030:
  4997                           
  4998                           ;time.c: 60:     reg_arr[6] = (uint8_t) (time->yy / 10 << 4 | (time->yy % 10));
  4999     0179  300A               	movlw	10
  5000     017A  00F2               	movwf	___awmod@divisor
  5001     017B  3000               	movlw	0
  5002     017C  00F3               	movwf	___awmod@divisor+1
  5003     017D  085B               	movf	update_time@time,w
  5004     017E  3E08               	addlw	8
  5005     017F  0086               	movwf	6
  5006     0180  0187               	clrf	7
  5007     0181  0801               	movf	1,w
  5008     0182  00CC               	movwf	??_update_time
  5009     0183  01CD               	clrf	??_update_time+1
  5010     0184  084C               	movf	??_update_time,w
  5011     0185  00F4               	movwf	___awmod@dividend
  5012     0186  084D               	movf	??_update_time+1,w
  5013     0187  00F5               	movwf	___awmod@dividend+1
  5014     0188  3186  263E  3180   	fcall	___awmod
  5015     018B  0872               	movf	?___awmod,w
  5016     018C  0020               	movlb	0	; select bank0
  5017     018D  00CE               	movwf	??_update_time+2
  5018     018E  0873               	movf	?___awmod+1,w
  5019     018F  00CF               	movwf	??_update_time+3
  5020     0190  300A               	movlw	10
  5021     0191  00F2               	movwf	___awdiv@divisor
  5022     0192  3000               	movlw	0
  5023     0193  00F3               	movwf	___awdiv@divisor+1
  5024     0194  085B               	movf	update_time@time,w
  5025     0195  3E08               	addlw	8
  5026     0196  0086               	movwf	6
  5027     0197  0187               	clrf	7
  5028     0198  0801               	movf	1,w
  5029     0199  00D0               	movwf	??_update_time+4
  5030     019A  01D1               	clrf	??_update_time+5
  5031     019B  0850               	movf	??_update_time+4,w
  5032     019C  00F4               	movwf	___awdiv@dividend
  5033     019D  0851               	movf	??_update_time+5,w
  5034     019E  00F5               	movwf	___awdiv@dividend+1
  5035     019F  3184  24D8  3180   	fcall	___awdiv
  5036     01A2  0872               	movf	?___awdiv,w
  5037     01A3  0020               	movlb	0	; select bank0
  5038     01A4  00D2               	movwf	??_update_time+6
  5039     01A5  3003               	movlw	3
  5040     01A6                     u2705:
  5041     01A6  35D2               	lslf	??_update_time+6,f
  5042     01A7  3EFF               	addlw	-1
  5043     01A8  1D03               	skipz
  5044     01A9  29A6               	goto	u2705
  5045     01AA  3552               	lslf	??_update_time+6,w
  5046     01AB  044E               	iorwf	??_update_time+2,w
  5047     01AC  00DA               	movwf	update_time@reg_arr+6
  5048     01AD                     l3032:
  5049                           
  5050                           ;time.c: 62:     i2c_start();
  5051     01AD  318C  24EF  3180   	fcall	_i2c_start
  5052                           
  5053                           ;time.c: 63:     i2c_wr(0xD0);
  5054     01B0  30D0               	movlw	208
  5055     01B1  318D  25B7  3180   	fcall	_i2c_wr
  5056                           
  5057                           ;time.c: 64:     i2c_wr(0x00);
  5058     01B4  3000               	movlw	0
  5059     01B5  318D  25B7  3180   	fcall	_i2c_wr
  5060                           
  5061                           ;time.c: 65:     i2c_wr_bytes(reg_arr, 7);
  5062     01B8  3007               	movlw	7
  5063     01B9  00F8               	movwf	i2c_wr_bytes@size
  5064     01BA  3054               	movlw	(low (update_time@reg_arr| 0))& (0+255)
  5065     01BB  318E  264E  3180   	fcall	_i2c_wr_bytes
  5066     01BE                     l3034:
  5067                           
  5068                           ;time.c: 66:     i2c_stop();
  5069     01BE  318D  2517  3180   	fcall	_i2c_stop
  5070     01C1                     l634:
  5071     01C1  0008               	return
  5072     01C2                     __end_of_update_time:
  5073                           
  5074                           	psect	text13
  5075     0E4E                     __ptext13:	
  5076 ;; *************** function _i2c_wr_bytes *****************
  5077 ;; Defined at:
  5078 ;;		line 96 in file "i2c.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  byte_arr        1    wreg     PTR unsigned char 
  5081 ;;		 -> update_time@reg_arr(7), 
  5082 ;;  size            1    8[COMMON] unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  byte_arr        1    0[BANK0 ] PTR unsigned char 
  5085 ;;		 -> update_time@reg_arr(7), 
  5086 ;;  i               1    1[BANK0 ] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5096 ;;      Params:         1       0       0       0       0       0       0       0
  5097 ;;      Locals:         0       2       0       0       0       0       0       0
  5098 ;;      Temps:          1       0       0       0       0       0       0       0
  5099 ;;      Totals:         2       2       0       0       0       0       0       0
  5100 ;;Total ram usage:        4 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 5
  5103 ;; This function calls:
  5104 ;;		_i2c_wr
  5105 ;; This function is called by:
  5106 ;;		_update_time
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110     0E4E                     _i2c_wr_bytes:	
  5111                           ;psect for function _i2c_wr_bytes
  5112                           
  5113                           
  5114                           ;incstack = 0
  5115                           ; Regs used in _i2c_wr_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5116                           ;i2c_wr_bytes@byte_arr stored from wreg
  5117     0E4E  0020               	movlb	0	; select bank0
  5118     0E4F  00C8               	movwf	i2c_wr_bytes@byte_arr
  5119     0E50                     l2908:
  5120                           
  5121                           ;i2c.c: 96: void i2c_wr_bytes(uint8_t* byte_arr, uint8_t size);i2c.c: 97: {;i2c.c: 98:  
      +                             for(uint8_t i = 0; i < size; i++)
  5122     0E50  01C9               	clrf	i2c_wr_bytes@i
  5123     0E51  2E61               	goto	l2914
  5124     0E52                     l2910:
  5125                           
  5126                           ;i2c.c: 99:     {;i2c.c: 100:         i2c_wr(byte_arr[i]);
  5127     0E52  0849               	movf	i2c_wr_bytes@i,w
  5128     0E53  0748               	addwf	i2c_wr_bytes@byte_arr,w
  5129     0E54  00F9               	movwf	??_i2c_wr_bytes
  5130     0E55  0879               	movf	??_i2c_wr_bytes,w
  5131     0E56  0086               	movwf	6
  5132     0E57  0187               	clrf	7
  5133     0E58  0801               	movf	1,w
  5134     0E59  318D  25B7  318E   	fcall	_i2c_wr
  5135     0E5C                     l2912:
  5136                           
  5137                           ;i2c.c: 101:     }
  5138     0E5C  3001               	movlw	1
  5139     0E5D  00F9               	movwf	??_i2c_wr_bytes
  5140     0E5E  0879               	movf	??_i2c_wr_bytes,w
  5141     0E5F  0020               	movlb	0	; select bank0
  5142     0E60  07C9               	addwf	i2c_wr_bytes@i,f
  5143     0E61                     l2914:
  5144     0E61  0878               	movf	i2c_wr_bytes@size,w
  5145     0E62  0249               	subwf	i2c_wr_bytes@i,w
  5146     0E63  1C03               	skipc
  5147     0E64  2E66               	goto	u2381
  5148     0E65  2E67               	goto	u2380
  5149     0E66                     u2381:
  5150     0E66  2E52               	goto	l2910
  5151     0E67                     u2380:
  5152     0E67                     l416:
  5153     0E67  0008               	return
  5154     0E68                     __end_of_i2c_wr_bytes:
  5155                           
  5156                           	psect	text14
  5157     0DB7                     __ptext14:	
  5158 ;; *************** function _i2c_wr *****************
  5159 ;; Defined at:
  5160 ;;		line 80 in file "i2c.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  data            1    wreg     unsigned char 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  data            1    6[COMMON] unsigned char 
  5165 ;;  i               1    7[COMMON] unsigned char 
  5166 ;;  ack             1    5[COMMON] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      unsigned char 
  5169 ;; Registers used:
  5170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5176 ;;      Params:         0       0       0       0       0       0       0       0
  5177 ;;      Locals:         3       0       0       0       0       0       0       0
  5178 ;;      Temps:          1       0       0       0       0       0       0       0
  5179 ;;      Totals:         4       0       0       0       0       0       0       0
  5180 ;;Total ram usage:        4 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; Hardware stack levels required when called: 4
  5183 ;; This function calls:
  5184 ;;		_bit_in
  5185 ;;		_bit_out
  5186 ;; This function is called by:
  5187 ;;		_i2c_wr_bytes
  5188 ;;		_read_time
  5189 ;;		_update_time
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193     0DB7                     _i2c_wr:	
  5194                           ;psect for function _i2c_wr
  5195                           
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _i2c_wr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5199                           ;i2c_wr@data stored from wreg
  5200     0DB7  00F6               	movwf	i2c_wr@data
  5201     0DB8                     l2890:
  5202                           
  5203                           ;i2c.c: 80: uint8_t i2c_wr(uint8_t data);i2c.c: 81: {;i2c.c: 82:     uint8_t i;;i2c.c: 8
      +                          3:     uint8_t ack;;i2c.c: 85:     ack = 0;
  5204     0DB8  01F5               	clrf	i2c_wr@ack
  5205                           
  5206                           ;i2c.c: 86:     for (i = 0; i < 8; i++)
  5207     0DB9  01F7               	clrf	i2c_wr@i
  5208     0DBA                     l2896:
  5209                           
  5210                           ;i2c.c: 87:     {;i2c.c: 88:         bit_out(data);
  5211     0DBA  0876               	movf	i2c_wr@data,w
  5212     0DBB  318E  269F  318D   	fcall	_bit_out
  5213     0DBE                     l2898:
  5214                           
  5215                           ;i2c.c: 89:         data = (uint8_t) (data << 1);
  5216     0DBE  3576               	lslf	i2c_wr@data,w
  5217     0DBF  00F6               	movwf	i2c_wr@data
  5218     0DC0                     l2900:
  5219                           
  5220                           ;i2c.c: 90:     }
  5221     0DC0  3001               	movlw	1
  5222     0DC1  00F4               	movwf	??_i2c_wr
  5223     0DC2  0874               	movf	??_i2c_wr,w
  5224     0DC3  07F7               	addwf	i2c_wr@i,f
  5225     0DC4                     l2902:
  5226     0DC4  3008               	movlw	8
  5227     0DC5  0277               	subwf	i2c_wr@i,w
  5228     0DC6  1C03               	skipc
  5229     0DC7  2DC9               	goto	u2371
  5230     0DC8  2DCA               	goto	u2370
  5231     0DC9                     u2371:
  5232     0DC9  2DBA               	goto	l2896
  5233     0DCA                     u2370:
  5234     0DCA                     l2904:
  5235                           
  5236                           ;i2c.c: 92:     bit_in(&ack);
  5237     0DCA  3075               	movlw	(low (i2c_wr@ack| 0))& (0+255)
  5238     0DCB  318D  255E  318D   	fcall	_bit_in
  5239     0DCE                     l410:
  5240     0DCE  0008               	return
  5241     0DCF                     __end_of_i2c_wr:
  5242                           
  5243                           	psect	text15
  5244     0E9F                     __ptext15:	
  5245 ;; *************** function _bit_out *****************
  5246 ;; Defined at:
  5247 ;;		line 43 in file "i2c.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  data            1    wreg     unsigned char 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  data            1    3[COMMON] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5261 ;;      Params:         0       0       0       0       0       0       0       0
  5262 ;;      Locals:         1       0       0       0       0       0       0       0
  5263 ;;      Temps:          1       0       0       0       0       0       0       0
  5264 ;;      Totals:         2       0       0       0       0       0       0       0
  5265 ;;Total ram usage:        2 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 3
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_i2c_wr
  5272 ;;		_i2c_rd
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276     0E9F                     _bit_out:	
  5277                           ;psect for function _bit_out
  5278                           
  5279                           
  5280                           ;incstack = 0
  5281                           ; Regs used in _bit_out: [wreg+status,2+status,0]
  5282                           ;bit_out@data stored from wreg
  5283     0E9F  00F3               	movwf	bit_out@data
  5284     0EA0                     l380:	
  5285                           ;i2c.c: 43: void bit_out(uint8_t data);i2c.c: 44: {;i2c.c: 45:     do { LATCbits.LATC5 =
      +                           0; } while(0);
  5286                           
  5287     0EA0  0022               	movlb	2	; select bank2
  5288     0EA1  128E               	bcf	14,5	;volatile
  5289     0EA2                     l382:	
  5290                           ;i2c.c: 46:     do { TRISCbits.TRISC4 = 0; } while(0);
  5291                           
  5292     0EA2  0021               	movlb	1	; select bank1
  5293     0EA3  120E               	bcf	14,4	;volatile
  5294     0EA4                     l2884:
  5295                           
  5296                           ;i2c.c: 49:     if(data>>7)
  5297     0EA4  0873               	movf	bit_out@data,w
  5298     0EA5  00F2               	movwf	??_bit_out
  5299     0EA6  3007               	movlw	7
  5300     0EA7                     u2355:
  5301     0EA7  36F2               	lsrf	??_bit_out,f
  5302     0EA8  0B89               	decfsz	9,f
  5303     0EA9  2EA7               	goto	u2355
  5304     0EAA  0872               	movf	??_bit_out,w
  5305     0EAB  1903               	btfsc	3,2
  5306     0EAC  2EAE               	goto	u2361
  5307     0EAD  2EAF               	goto	u2360
  5308     0EAE                     u2361:
  5309     0EAE  2EB2               	goto	l388
  5310     0EAF                     u2360:
  5311     0EAF                     l385:	
  5312                           ;i2c.c: 50:     {;i2c.c: 51:         do { LATCbits.LATC4 = 1; } while(0);
  5313                           
  5314     0EAF  0022               	movlb	2	; select bank2
  5315     0EB0  160E               	bsf	14,4	;volatile
  5316     0EB1  2EB4               	goto	l387
  5317     0EB2                     l388:	
  5318                           ;i2c.c: 54:     {;i2c.c: 55:         do { LATCbits.LATC4 = 0; } while(0);
  5319                           
  5320     0EB2  0022               	movlb	2	; select bank2
  5321     0EB3  120E               	bcf	14,4	;volatile
  5322     0EB4                     l387:	
  5323                           ;i2c.c: 56:     }
  5324                           
  5325                           
  5326                           ;i2c.c: 58:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  5327     0EB4  3200               	nop2	;2 cycle nop
  5328     0EB5                     l390:	
  5329                           ;i2c.c: 59:     do { LATCbits.LATC5 = 1; } while(0);
  5330                           
  5331     0EB5  0022               	movlb	2	; select bank2
  5332     0EB6  168E               	bsf	14,5	;volatile
  5333     0EB7                     l391:
  5334                           
  5335                           ;i2c.c: 60:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  5336     0EB7  3200               	nop2	;2 cycle nop
  5337     0EB8                     l392:	
  5338                           ;i2c.c: 61:     do { LATCbits.LATC5 = 0; } while(0);
  5339                           
  5340     0EB8  0022               	movlb	2	; select bank2
  5341     0EB9  128E               	bcf	14,5	;volatile
  5342     0EBA                     l394:
  5343     0EBA  0008               	return
  5344     0EBB                     __end_of_bit_out:
  5345                           
  5346                           	psect	text16
  5347     0D5E                     __ptext16:	
  5348 ;; *************** function _bit_in *****************
  5349 ;; Defined at:
  5350 ;;		line 67 in file "i2c.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  data            1    wreg     PTR unsigned char 
  5353 ;;		 -> i2c_rd@ret(1), i2c_wr@ack(1), 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  data            1    3[COMMON] PTR unsigned char 
  5356 ;;		 -> i2c_rd@ret(1), i2c_wr@ack(1), 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5366 ;;      Params:         0       0       0       0       0       0       0       0
  5367 ;;      Locals:         1       0       0       0       0       0       0       0
  5368 ;;      Temps:          1       0       0       0       0       0       0       0
  5369 ;;      Totals:         2       0       0       0       0       0       0       0
  5370 ;;Total ram usage:        2 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 3
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_i2c_wr
  5377 ;;		_i2c_rd
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381     0D5E                     _bit_in:	
  5382                           ;psect for function _bit_in
  5383                           
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in _bit_in: [wreg+fsr1l+fsr1h+status,2+status,0]
  5387                           ;bit_in@data stored from wreg
  5388     0D5E  00F3               	movwf	bit_in@data
  5389     0D5F                     l397:	
  5390                           ;i2c.c: 67: void bit_in(uint8_t *data);i2c.c: 68: {;i2c.c: 69:     do { LATCbits.LATC5 =
      +                           0; } while(0);
  5391                           
  5392     0D5F  0022               	movlb	2	; select bank2
  5393     0D60  128E               	bcf	14,5	;volatile
  5394     0D61                     l398:
  5395                           
  5396                           ;i2c.c: 70:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  5397     0D61  3200               	nop2	;2 cycle nop
  5398     0D62                     l399:	
  5399                           ;i2c.c: 71:     do { TRISCbits.TRISC4 = 1; } while(0);
  5400                           
  5401     0D62  0021               	movlb	1	; select bank1
  5402     0D63  160E               	bsf	14,4	;volatile
  5403     0D64                     l401:	
  5404                           ;i2c.c: 72:     do { LATCbits.LATC5 = 1; } while(0);
  5405                           
  5406     0D64  0022               	movlb	2	; select bank2
  5407     0D65  168E               	bsf	14,5	;volatile
  5408     0D66                     l2886:
  5409                           
  5410                           ;i2c.c: 73:     *data |= PORTCbits.RC4;
  5411     0D66  0020               	movlb	0	; select bank0
  5412     0D67  0E0E               	swapf	14,w	;volatile
  5413     0D68  3901               	andlw	1
  5414     0D69  00F2               	movwf	??_bit_in
  5415     0D6A  0873               	movf	bit_in@data,w
  5416     0D6B  0086               	movwf	6
  5417     0D6C  0187               	clrf	7
  5418     0D6D  0872               	movf	??_bit_in,w
  5419     0D6E  0481               	iorwf	1,f
  5420     0D6F                     l2888:
  5421     0D6F  0022               	movlb	2	; select bank2
  5422     0D70  128E               	bcf	14,5	;volatile
  5423     0D71                     l405:
  5424     0D71  0008               	return
  5425     0D72                     __end_of_bit_in:
  5426                           
  5427                           	psect	text17
  5428     0D17                     __ptext17:	
  5429 ;; *************** function _i2c_stop *****************
  5430 ;; Defined at:
  5431 ;;		line 28 in file "i2c.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      void 
  5438 ;; Registers used:
  5439 ;;		None
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5445 ;;      Params:         0       0       0       0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0
  5448 ;;      Totals:         0       0       0       0       0       0       0       0
  5449 ;;Total ram usage:        0 bytes
  5450 ;; Hardware stack levels used: 1
  5451 ;; Hardware stack levels required when called: 3
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_read_time
  5456 ;;		_update_time
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460     0D17                     _i2c_stop:	
  5461                           ;psect for function _i2c_stop
  5462                           
  5463     0D17                     l365:	
  5464                           ;incstack = 0
  5465                           ; Regs used in _i2c_stop: []
  5466                           ;i2c.c: 30:     do { LATCbits.LATC5 = 0; } while(0);
  5467                           
  5468     0D17  0022               	movlb	2	; select bank2
  5469     0D18  128E               	bcf	14,5	;volatile
  5470     0D19                     l367:	
  5471                           ;i2c.c: 31:     do { TRISCbits.TRISC4 = 0; } while(0);
  5472                           
  5473     0D19  0021               	movlb	1	; select bank1
  5474     0D1A  120E               	bcf	14,4	;volatile
  5475     0D1B                     l369:	
  5476                           ;i2c.c: 32:     do { LATCbits.LATC4 = 0; } while(0);
  5477                           
  5478     0D1B  0022               	movlb	2	; select bank2
  5479     0D1C  120E               	bcf	14,4	;volatile
  5480     0D1D                     l370:
  5481                           
  5482                           ;i2c.c: 33:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  5483     0D1D  3200               	nop2	;2 cycle nop
  5484     0D1E                     l371:	
  5485                           ;i2c.c: 34:     do { LATCbits.LATC5 = 1; } while(0);
  5486                           
  5487     0D1E  0022               	movlb	2	; select bank2
  5488     0D1F  168E               	bsf	14,5	;volatile
  5489     0D20                     l373:	
  5490                           ;i2c.c: 35:     do { TRISCbits.TRISC4 = 1; } while(0);
  5491                           
  5492     0D20  0021               	movlb	1	; select bank1
  5493     0D21  160E               	bsf	14,4	;volatile
  5494     0D22                     l374:
  5495                           
  5496                           ;i2c.c: 36:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  5497     0D22  3200               	nop2	;2 cycle nop
  5498     0D23                     l375:	
  5499                           ;i2c.c: 37:     do { LATCbits.LATC5 = 0; } while(0);
  5500                           
  5501     0D23  0022               	movlb	2	; select bank2
  5502     0D24  128E               	bcf	14,5	;volatile
  5503     0D25                     l377:
  5504     0D25  0008               	return
  5505     0D26                     __end_of_i2c_stop:
  5506                           
  5507                           	psect	text18
  5508     0CEF                     __ptext18:	
  5509 ;; *************** function _i2c_start *****************
  5510 ;; Defined at:
  5511 ;;		line 15 in file "i2c.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		None
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5525 ;;      Params:         0       0       0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 3
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_read_time
  5536 ;;		_update_time
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540     0CEF                     _i2c_start:	
  5541                           ;psect for function _i2c_start
  5542                           
  5543     0CEF                     l352:	
  5544                           ;incstack = 0
  5545                           ; Regs used in _i2c_start: []
  5546                           ;i2c.c: 17:     do { TRISCbits.TRISC4 = 1; } while(0);
  5547                           
  5548     0CEF  0021               	movlb	1	; select bank1
  5549     0CF0  160E               	bsf	14,4	;volatile
  5550     0CF1                     l354:	
  5551                           ;i2c.c: 18:     do { LATCbits.LATC5 = 1; } while(0);
  5552                           
  5553     0CF1  0022               	movlb	2	; select bank2
  5554     0CF2  168E               	bsf	14,5	;volatile
  5555     0CF3                     l356:	
  5556                           ;i2c.c: 19:     do { TRISCbits.TRISC4 = 0; } while(0);
  5557                           
  5558     0CF3  0021               	movlb	1	; select bank1
  5559     0CF4  120E               	bcf	14,4	;volatile
  5560     0CF5                     l358:	
  5561                           ;i2c.c: 20:     do { LATCbits.LATC4 = 0; } while(0);
  5562                           
  5563     0CF5  0022               	movlb	2	; select bank2
  5564     0CF6  120E               	bcf	14,4	;volatile
  5565     0CF7                     l359:
  5566                           
  5567                           ;i2c.c: 21:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  5568     0CF7  3200               	nop2	;2 cycle nop
  5569     0CF8                     l360:	
  5570                           ;i2c.c: 22:     do { LATCbits.LATC5 = 0; } while(0);
  5571                           
  5572     0CF8  0022               	movlb	2	; select bank2
  5573     0CF9  128E               	bcf	14,5	;volatile
  5574     0CFA                     l362:
  5575     0CFA  0008               	return
  5576     0CFB                     __end_of_i2c_start:
  5577                           
  5578                           	psect	text19
  5579     0E68                     __ptext19:	
  5580 ;; *************** function _increase_month *****************
  5581 ;; Defined at:
  5582 ;;		line 150 in file "time.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  time            1    wreg     PTR struct Time
  5585 ;;		 -> updated_time(9), 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  time            1    3[COMMON] PTR struct Time
  5588 ;;		 -> updated_time(9), 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5598 ;;      Params:         0       0       0       0       0       0       0       0
  5599 ;;      Locals:         1       0       0       0       0       0       0       0
  5600 ;;      Temps:          1       0       0       0       0       0       0       0
  5601 ;;      Totals:         2       0       0       0       0       0       0       0
  5602 ;;Total ram usage:        2 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; Hardware stack levels required when called: 3
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_handle_set_month
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612     0E68                     _increase_month:	
  5613                           ;psect for function _increase_month
  5614                           
  5615                           
  5616                           ;incstack = 0
  5617                           ; Regs used in _increase_month: [wreg+fsr1l+fsr1h+status,2+status,0]
  5618                           ;increase_month@time stored from wreg
  5619     0E68  00F3               	movwf	increase_month@time
  5620     0E69                     l2390:
  5621                           
  5622                           ;time.c: 151:     if (time->MM < 12)
  5623     0E69  0873               	movf	increase_month@time,w
  5624     0E6A  3E07               	addlw	7
  5625     0E6B  0086               	movwf	6
  5626     0E6C  0187               	clrf	7
  5627     0E6D  300C               	movlw	12
  5628     0E6E  0201               	subwf	1,w
  5629     0E6F  1803               	skipnc
  5630     0E70  2E72               	goto	u1841
  5631     0E71  2E73               	goto	u1840
  5632     0E72                     u1841:
  5633     0E72  2E7C               	goto	l2394
  5634     0E73                     u1840:
  5635     0E73                     l2392:
  5636                           
  5637                           ;time.c: 152:         time->MM++;
  5638     0E73  3001               	movlw	1
  5639     0E74  00F2               	movwf	??_increase_month
  5640     0E75  0873               	movf	increase_month@time,w
  5641     0E76  3E07               	addlw	7
  5642     0E77  0086               	movwf	6
  5643     0E78  0187               	clrf	7
  5644     0E79  0872               	movf	??_increase_month,w
  5645     0E7A  0781               	addwf	1,f
  5646     0E7B  2E82               	goto	l693
  5647     0E7C                     l2394:
  5648                           
  5649                           ;time.c: 154:         time->MM = 1;
  5650     0E7C  0873               	movf	increase_month@time,w
  5651     0E7D  3E07               	addlw	7
  5652     0E7E  0086               	movwf	6
  5653     0E7F  0187               	clrf	7
  5654     0E80  0181               	clrf	1
  5655     0E81  0A81               	incf	1,f
  5656     0E82                     l693:
  5657     0E82  0008               	return
  5658     0E83                     __end_of_increase_month:
  5659                           
  5660                           	psect	text20
  5661     0DE8                     __ptext20:	
  5662 ;; *************** function _decrease_month *****************
  5663 ;; Defined at:
  5664 ;;		line 157 in file "time.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  time            1    wreg     PTR struct Time
  5667 ;;		 -> updated_time(9), 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  time            1    2[COMMON] PTR struct Time
  5670 ;;		 -> updated_time(9), 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5680 ;;      Params:         0       0       0       0       0       0       0       0
  5681 ;;      Locals:         1       0       0       0       0       0       0       0
  5682 ;;      Temps:          0       0       0       0       0       0       0       0
  5683 ;;      Totals:         1       0       0       0       0       0       0       0
  5684 ;;Total ram usage:        1 bytes
  5685 ;; Hardware stack levels used: 1
  5686 ;; Hardware stack levels required when called: 3
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_handle_set_month
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694     0DE8                     _decrease_month:	
  5695                           ;psect for function _decrease_month
  5696                           
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _decrease_month: [wreg+fsr1l+fsr1h+status,2+status,0]
  5700                           ;decrease_month@time stored from wreg
  5701     0DE8  00F2               	movwf	decrease_month@time
  5702     0DE9                     l2384:
  5703                           
  5704                           ;time.c: 158:     if (time->MM > 1)
  5705     0DE9  0872               	movf	decrease_month@time,w
  5706     0DEA  3E07               	addlw	7
  5707     0DEB  0086               	movwf	6
  5708     0DEC  0187               	clrf	7
  5709     0DED  3002               	movlw	2
  5710     0DEE  0201               	subwf	1,w
  5711     0DEF  1C03               	skipc
  5712     0DF0  2DF2               	goto	u1831
  5713     0DF1  2DF3               	goto	u1830
  5714     0DF2                     u1831:
  5715     0DF2  2DFA               	goto	l2388
  5716     0DF3                     u1830:
  5717     0DF3                     l2386:
  5718                           
  5719                           ;time.c: 159:         time->MM--;
  5720     0DF3  0872               	movf	decrease_month@time,w
  5721     0DF4  3E07               	addlw	7
  5722     0DF5  0086               	movwf	6
  5723     0DF6  0187               	clrf	7
  5724     0DF7  3001               	movlw	1
  5725     0DF8  0281               	subwf	1,f
  5726     0DF9  2E00               	goto	l698
  5727     0DFA                     l2388:
  5728                           
  5729                           ;time.c: 161:         time->MM = 12;
  5730     0DFA  0872               	movf	decrease_month@time,w
  5731     0DFB  3E07               	addlw	7
  5732     0DFC  0086               	movwf	6
  5733     0DFD  0187               	clrf	7
  5734     0DFE  300C               	movlw	12
  5735     0DFF  0081               	movwf	1
  5736     0E00                     l698:
  5737     0E00  0008               	return
  5738     0E01                     __end_of_decrease_month:
  5739                           
  5740                           	psect	text21
  5741     07AB                     __ptext21:	
  5742 ;; *************** function _handle_set_minute *****************
  5743 ;; Defined at:
  5744 ;;		line 139 in file "main.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5758 ;;      Params:         0       0       0       0       0       0       0       0
  5759 ;;      Locals:         0       0       0       0       0       0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0
  5761 ;;      Totals:         0       0       0       0       0       0       0       0
  5762 ;;Total ram usage:        0 bytes
  5763 ;; Hardware stack levels used: 1
  5764 ;; Hardware stack levels required when called: 7
  5765 ;; This function calls:
  5766 ;;		_decrease_minute
  5767 ;;		_increase_minute
  5768 ;;		_set_date_digits
  5769 ;;		_set_digit_displayed
  5770 ;;		_set_digit_displayed_all
  5771 ;;		_set_time_digits
  5772 ;; This function is called by:
  5773 ;;		_handle_state
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777     07AB                     _handle_set_minute:	
  5778                           ;psect for function _handle_set_minute
  5779                           
  5780     07AB                     l3104:	
  5781                           ;incstack = 0
  5782                           ; Regs used in _handle_set_minute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5783                           
  5784                           
  5785                           ;main.c: 140:     if (btn2.state == PRESSED) {
  5786     07AB  0020               	movlb	0	; select bank0
  5787     07AC  0344               	decf	_btn2,w
  5788     07AD  1D03               	btfss	3,2
  5789     07AE  2FB0               	goto	u2801
  5790     07AF  2FB1               	goto	u2800
  5791     07B0                     u2801:
  5792     07B0  2FB8               	goto	l3110
  5793     07B1                     u2800:
  5794     07B1                     l3106:
  5795                           
  5796                           ;main.c: 141:         state = SET_DD;
  5797     07B1  3004               	movlw	4
  5798     07B2  00AE               	movwf	_state
  5799     07B3                     l3108:
  5800                           
  5801                           ;main.c: 142:         set_date_digits(&updated_time);
  5802     07B3  3030               	movlw	(low (_updated_time| 0))& (0+255)
  5803     07B4  3185  2538  3187   	fcall	_set_date_digits
  5804                           
  5805                           ;main.c: 143:     } else {
  5806     07B7  2FD3               	goto	l3120
  5807     07B8                     l3110:
  5808                           
  5809                           ;main.c: 144:         if (btn1.state == PRESSED) {
  5810     07B8  0346               	decf	_btn1,w
  5811     07B9  1D03               	btfss	3,2
  5812     07BA  2FBC               	goto	u2811
  5813     07BB  2FBD               	goto	u2810
  5814     07BC                     u2811:
  5815     07BC  2FC6               	goto	l3114
  5816     07BD                     u2810:
  5817     07BD                     l3112:
  5818                           
  5819                           ;main.c: 145:             decrease_minute(&updated_time);
  5820     07BD  3030               	movlw	(low (_updated_time| 0))& (0+255)
  5821     07BE  318D  259F  3187   	fcall	_decrease_minute
  5822                           
  5823                           ;main.c: 146:             set_time_digits(&updated_time);
  5824     07C1  3030               	movlw	(low (_updated_time| 0))& (0+255)
  5825     07C2  3185  25E8  3187   	fcall	_set_time_digits
  5826                           
  5827                           ;main.c: 147:         } else if (btn3.state == PRESSED) {
  5828     07C5  2FD3               	goto	l3120
  5829     07C6                     l3114:
  5830     07C6  0342               	decf	_btn3,w
  5831     07C7  1D03               	btfss	3,2
  5832     07C8  2FCA               	goto	u2821
  5833     07C9  2FCB               	goto	u2820
  5834     07CA                     u2821:
  5835     07CA  2FD3               	goto	l3120
  5836     07CB                     u2820:
  5837     07CB                     l3116:
  5838                           
  5839                           ;main.c: 148:             increase_minute(&updated_time);
  5840     07CB  3030               	movlw	(low (_updated_time| 0))& (0+255)
  5841     07CC  318E  2634  3187   	fcall	_increase_minute
  5842     07CF                     l3118:
  5843                           
  5844                           ;main.c: 149:             set_time_digits(&updated_time);
  5845     07CF  3030               	movlw	(low (_updated_time| 0))& (0+255)
  5846     07D0  3185  25E8  3187   	fcall	_set_time_digits
  5847     07D3                     l3120:
  5848                           
  5849                           ;main.c: 152:     if (timer_count < 400 / 2) {
  5850     07D3  3000               	movlw	0
  5851     07D4  0020               	movlb	0	; select bank0
  5852     07D5  022B               	subwf	_timer_count+1,w	;volatile
  5853     07D6  30C8               	movlw	200
  5854     07D7  1903               	skipnz
  5855     07D8  022A               	subwf	_timer_count,w	;volatile
  5856     07D9  1803               	skipnc
  5857     07DA  2FDC               	goto	u2831
  5858     07DB  2FDD               	goto	u2830
  5859     07DC                     u2831:
  5860     07DC  2FE6               	goto	l3124
  5861     07DD                     u2830:
  5862     07DD                     l3122:
  5863                           
  5864                           ;main.c: 153:         set_digit_displayed(1, 1, 0, 0);
  5865     07DD  01F2               	clrf	set_digit_displayed@dig1
  5866     07DE  0AF2               	incf	set_digit_displayed@dig1,f
  5867     07DF  01F3               	clrf	set_digit_displayed@dig2
  5868     07E0  01F4               	clrf	set_digit_displayed@dig3
  5869     07E1  3001               	movlw	1
  5870     07E2  318C  24D9  3187   	fcall	_set_digit_displayed
  5871                           
  5872                           ;main.c: 154:     } else {
  5873     07E5  2FE9               	goto	l298
  5874     07E6                     l3124:
  5875                           
  5876                           ;main.c: 155:         set_digit_displayed_all();
  5877     07E6  318C  24E4  3187   	fcall	_set_digit_displayed_all
  5878     07E9                     l298:
  5879     07E9  0008               	return
  5880     07EA                     __end_of_handle_set_minute:
  5881                           
  5882                           	psect	text22
  5883     0E34                     __ptext22:	
  5884 ;; *************** function _increase_minute *****************
  5885 ;; Defined at:
  5886 ;;		line 99 in file "time.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  time            1    wreg     PTR struct Time
  5889 ;;		 -> updated_time(9), 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  time            1    9[COMMON] PTR struct Time
  5892 ;;		 -> updated_time(9), 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      void 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5902 ;;      Params:         0       0       0       0       0       0       0       0
  5903 ;;      Locals:         1       0       0       0       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0       0       0       0
  5905 ;;      Totals:         1       0       0       0       0       0       0       0
  5906 ;;Total ram usage:        1 bytes
  5907 ;; Hardware stack levels used: 1
  5908 ;; Hardware stack levels required when called: 4
  5909 ;; This function calls:
  5910 ;;		___awmod
  5911 ;; This function is called by:
  5912 ;;		_handle_set_minute
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916     0E34                     _increase_minute:	
  5917                           ;psect for function _increase_minute
  5918                           
  5919                           
  5920                           ;incstack = 0
  5921                           ; Regs used in _increase_minute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5922                           ;increase_minute@time stored from wreg
  5923     0E34  00F9               	movwf	increase_minute@time
  5924     0E35                     l3014:
  5925                           
  5926                           ;time.c: 100:     time->mm = (time->mm + 1) % 60;
  5927     0E35  0879               	movf	increase_minute@time,w
  5928     0E36  3E03               	addlw	3
  5929     0E37  0086               	movwf	6
  5930     0E38  0187               	clrf	7
  5931     0E39  303C               	movlw	60
  5932     0E3A  00F2               	movwf	___awmod@divisor
  5933     0E3B  3000               	movlw	0
  5934     0E3C  00F3               	movwf	___awmod@divisor+1
  5935     0E3D  0879               	movf	increase_minute@time,w
  5936     0E3E  3E03               	addlw	3
  5937     0E3F  0084               	movwf	4
  5938     0E40  0185               	clrf	5
  5939     0E41  0800               	movf	0,w
  5940     0E42  3E01               	addlw	1
  5941     0E43  00F4               	movwf	___awmod@dividend
  5942     0E44  3000               	movlw	0
  5943     0E45  1803               	skipnc
  5944     0E46  3001               	movlw	1
  5945     0E47  00F5               	movwf	___awmod@dividend+1
  5946     0E48  3186  263E  318E   	fcall	___awmod
  5947     0E4B  0872               	movf	?___awmod,w
  5948     0E4C  0081               	movwf	1
  5949     0E4D                     l653:
  5950     0E4D  0008               	return
  5951     0E4E                     __end_of_increase_minute:
  5952                           
  5953                           	psect	text23
  5954     0D9F                     __ptext23:	
  5955 ;; *************** function _decrease_minute *****************
  5956 ;; Defined at:
  5957 ;;		line 103 in file "time.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  time            1    wreg     PTR struct Time
  5960 ;;		 -> updated_time(9), 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  time            1    2[COMMON] PTR struct Time
  5963 ;;		 -> updated_time(9), 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5973 ;;      Params:         0       0       0       0       0       0       0       0
  5974 ;;      Locals:         1       0       0       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0
  5976 ;;      Totals:         1       0       0       0       0       0       0       0
  5977 ;;Total ram usage:        1 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 3
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_handle_set_minute
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987     0D9F                     _decrease_minute:	
  5988                           ;psect for function _decrease_minute
  5989                           
  5990                           
  5991                           ;incstack = 0
  5992                           ; Regs used in _decrease_minute: [wreg+fsr1l+fsr1h+status,2+status,0]
  5993                           ;decrease_minute@time stored from wreg
  5994     0D9F  00F2               	movwf	decrease_minute@time
  5995     0DA0                     l2288:
  5996                           
  5997                           ;time.c: 104:     if (time->mm > 0)
  5998     0DA0  0872               	movf	decrease_minute@time,w
  5999     0DA1  3E03               	addlw	3
  6000     0DA2  0086               	movwf	6
  6001     0DA3  0187               	clrf	7
  6002     0DA4  0801               	movf	1,w
  6003     0DA5  1903               	btfsc	3,2
  6004     0DA6  2DA8               	goto	u1511
  6005     0DA7  2DA9               	goto	u1510
  6006     0DA8                     u1511:
  6007     0DA8  2DB0               	goto	l2292
  6008     0DA9                     u1510:
  6009     0DA9                     l2290:
  6010                           
  6011                           ;time.c: 105:         time->mm--;
  6012     0DA9  0872               	movf	decrease_minute@time,w
  6013     0DAA  3E03               	addlw	3
  6014     0DAB  0086               	movwf	6
  6015     0DAC  0187               	clrf	7
  6016     0DAD  3001               	movlw	1
  6017     0DAE  0281               	subwf	1,f
  6018     0DAF  2DB6               	goto	l658
  6019     0DB0                     l2292:
  6020                           
  6021                           ;time.c: 107:         time->mm = 59;
  6022     0DB0  0872               	movf	decrease_minute@time,w
  6023     0DB1  3E03               	addlw	3
  6024     0DB2  0086               	movwf	6
  6025     0DB3  0187               	clrf	7
  6026     0DB4  303B               	movlw	59
  6027     0DB5  0081               	movwf	1
  6028     0DB6                     l658:
  6029     0DB6  0008               	return
  6030     0DB7                     __end_of_decrease_minute:
  6031                           
  6032                           	psect	text24
  6033     0FC4                     __ptext24:	
  6034 ;; *************** function _handle_set_hour *****************
  6035 ;; Defined at:
  6036 ;;		line 120 in file "main.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6050 ;;      Params:         0       0       0       0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 7
  6057 ;; This function calls:
  6058 ;;		_decrease_hour
  6059 ;;		_increase_hour
  6060 ;;		_set_digit_displayed
  6061 ;;		_set_digit_displayed_all
  6062 ;;		_set_time_digits
  6063 ;; This function is called by:
  6064 ;;		_handle_state
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068     0FC4                     _handle_set_hour:	
  6069                           ;psect for function _handle_set_hour
  6070                           
  6071     0FC4                     l3082:	
  6072                           ;incstack = 0
  6073                           ; Regs used in _handle_set_hour: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6074                           
  6075                           
  6076                           ;main.c: 121:     if (btn2.state == PRESSED)
  6077     0FC4  0020               	movlb	0	; select bank0
  6078     0FC5  0344               	decf	_btn2,w
  6079     0FC6  1D03               	btfss	3,2
  6080     0FC7  2FC9               	goto	u2761
  6081     0FC8  2FCA               	goto	u2760
  6082     0FC9                     u2761:
  6083     0FC9  2FCD               	goto	l3086
  6084     0FCA                     u2760:
  6085     0FCA                     l3084:
  6086                           
  6087                           ;main.c: 122:         state = SET_MM;
  6088     0FCA  3003               	movlw	3
  6089     0FCB  00AE               	movwf	_state
  6090     0FCC  2FE8               	goto	l3098
  6091     0FCD                     l3086:
  6092                           
  6093                           ;main.c: 124:         if (btn1.state == PRESSED) {
  6094     0FCD  0346               	decf	_btn1,w
  6095     0FCE  1D03               	btfss	3,2
  6096     0FCF  2FD1               	goto	u2771
  6097     0FD0  2FD2               	goto	u2770
  6098     0FD1                     u2771:
  6099     0FD1  2FDB               	goto	l3092
  6100     0FD2                     u2770:
  6101     0FD2                     l3088:
  6102                           
  6103                           ;main.c: 125:             decrease_hour(&updated_time);
  6104     0FD2  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6105     0FD3  3187  2769  318F   	fcall	_decrease_hour
  6106     0FD6                     l3090:
  6107                           
  6108                           ;main.c: 126:             set_time_digits(&updated_time);
  6109     0FD6  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6110     0FD7  3185  25E8  318F   	fcall	_set_time_digits
  6111                           
  6112                           ;main.c: 127:         } else if (btn3.state == PRESSED) {
  6113     0FDA  2FE8               	goto	l3098
  6114     0FDB                     l3092:
  6115     0FDB  0342               	decf	_btn3,w
  6116     0FDC  1D03               	btfss	3,2
  6117     0FDD  2FDF               	goto	u2781
  6118     0FDE  2FE0               	goto	u2780
  6119     0FDF                     u2781:
  6120     0FDF  2FE8               	goto	l3098
  6121     0FE0                     u2780:
  6122     0FE0                     l3094:
  6123                           
  6124                           ;main.c: 128:             increase_hour(&updated_time);
  6125     0FE0  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6126     0FE1  3186  26DA  318F   	fcall	_increase_hour
  6127     0FE4                     l3096:
  6128                           
  6129                           ;main.c: 129:             set_time_digits(&updated_time);
  6130     0FE4  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6131     0FE5  3185  25E8  318F   	fcall	_set_time_digits
  6132     0FE8                     l3098:
  6133                           
  6134                           ;main.c: 132:     if (timer_count < 400 / 2) {
  6135     0FE8  3000               	movlw	0
  6136     0FE9  0020               	movlb	0	; select bank0
  6137     0FEA  022B               	subwf	_timer_count+1,w	;volatile
  6138     0FEB  30C8               	movlw	200
  6139     0FEC  1903               	skipnz
  6140     0FED  022A               	subwf	_timer_count,w	;volatile
  6141     0FEE  1803               	skipnc
  6142     0FEF  2FF1               	goto	u2791
  6143     0FF0  2FF2               	goto	u2790
  6144     0FF1                     u2791:
  6145     0FF1  2FFC               	goto	l3102
  6146     0FF2                     u2790:
  6147     0FF2                     l3100:
  6148                           
  6149                           ;main.c: 133:         set_digit_displayed(0, 0, 1, 1);
  6150     0FF2  01F2               	clrf	set_digit_displayed@dig1
  6151     0FF3  01F3               	clrf	set_digit_displayed@dig2
  6152     0FF4  0AF3               	incf	set_digit_displayed@dig2,f
  6153     0FF5  01F4               	clrf	set_digit_displayed@dig3
  6154     0FF6  0AF4               	incf	set_digit_displayed@dig3,f
  6155     0FF7  3000               	movlw	0
  6156     0FF8  318C  24D9  318F   	fcall	_set_digit_displayed
  6157                           
  6158                           ;main.c: 134:     } else {
  6159     0FFB  2FFF               	goto	l288
  6160     0FFC                     l3102:
  6161                           
  6162                           ;main.c: 135:         set_digit_displayed_all();
  6163     0FFC  318C  24E4  318F   	fcall	_set_digit_displayed_all
  6164     0FFF                     l288:
  6165     0FFF  0008               	return
  6166     1000                     __end_of_handle_set_hour:
  6167                           
  6168                           	psect	text25
  6169     06DA                     __ptext25:	
  6170 ;; *************** function _increase_hour *****************
  6171 ;; Defined at:
  6172 ;;		line 69 in file "time.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  time            1    wreg     PTR struct Time
  6175 ;;		 -> updated_time(9), 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  time            1    0[BANK0 ] PTR struct Time
  6178 ;;		 -> updated_time(9), 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1    wreg      void 
  6181 ;; Registers used:
  6182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6188 ;;      Params:         0       0       0       0       0       0       0       0
  6189 ;;      Locals:         0       1       0       0       0       0       0       0
  6190 ;;      Temps:          1       0       0       0       0       0       0       0
  6191 ;;      Totals:         1       1       0       0       0       0       0       0
  6192 ;;Total ram usage:        2 bytes
  6193 ;; Hardware stack levels used: 1
  6194 ;; Hardware stack levels required when called: 4
  6195 ;; This function calls:
  6196 ;;		___awmod
  6197 ;; This function is called by:
  6198 ;;		_handle_set_hour
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202     06DA                     _increase_hour:	
  6203                           ;psect for function _increase_hour
  6204                           
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in _increase_hour: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6208                           ;increase_hour@time stored from wreg
  6209     06DA  0020               	movlb	0	; select bank0
  6210     06DB  00C8               	movwf	increase_hour@time
  6211     06DC                     l3002:
  6212                           
  6213                           ;time.c: 70:     if (time->is_12) {
  6214     06DC  0A48               	incf	increase_hour@time,w
  6215     06DD  0086               	movwf	6
  6216     06DE  0187               	clrf	7
  6217     06DF  0801               	movf	1,w
  6218     06E0  1903               	btfsc	3,2
  6219     06E1  2EE3               	goto	u2581
  6220     06E2  2EE4               	goto	u2580
  6221     06E3                     u2581:
  6222     06E3  2F0B               	goto	l3012
  6223     06E4                     u2580:
  6224     06E4                     l3004:
  6225                           
  6226                           ;time.c: 71:         if (time->hh < 12)
  6227     06E4  0848               	movf	increase_hour@time,w
  6228     06E5  0086               	movwf	6
  6229     06E6  0187               	clrf	7
  6230     06E7  300C               	movlw	12
  6231     06E8  0201               	subwf	1,w
  6232     06E9  1803               	skipnc
  6233     06EA  2EEC               	goto	u2591
  6234     06EB  2EED               	goto	u2590
  6235     06EC                     u2591:
  6236     06EC  2EF5               	goto	l3008
  6237     06ED                     u2590:
  6238     06ED                     l3006:
  6239                           
  6240                           ;time.c: 72:             time->hh++;
  6241     06ED  3001               	movlw	1
  6242     06EE  00F9               	movwf	??_increase_hour
  6243     06EF  0848               	movf	increase_hour@time,w
  6244     06F0  0086               	movwf	6
  6245     06F1  0187               	clrf	7
  6246     06F2  0879               	movf	??_increase_hour,w
  6247     06F3  0781               	addwf	1,f
  6248     06F4  2F21               	goto	l641
  6249     06F5                     l3008:
  6250                           
  6251                           ;time.c: 74:             time->hh = 1;
  6252     06F5  0848               	movf	increase_hour@time,w
  6253     06F6  0086               	movwf	6
  6254     06F7  0187               	clrf	7
  6255     06F8  0181               	clrf	1
  6256     06F9  0A81               	incf	1,f
  6257     06FA                     l3010:
  6258                           
  6259                           ;time.c: 75:             time->pm = (time->pm) ? 0 : 1;
  6260     06FA  0848               	movf	increase_hour@time,w
  6261     06FB  3E02               	addlw	2
  6262     06FC  0086               	movwf	6
  6263     06FD  0187               	clrf	7
  6264     06FE  0848               	movf	increase_hour@time,w
  6265     06FF  3E02               	addlw	2
  6266     0700  0084               	movwf	4
  6267     0701  0185               	clrf	5
  6268     0702  0800               	movf	0,w
  6269     0703  1903               	btfsc	3,2
  6270     0704  2F06               	goto	u2601
  6271     0705  2F08               	goto	u2600
  6272     0706                     u2601:
  6273     0706  3001               	movlw	1
  6274     0707  2F09               	goto	u2610
  6275     0708                     u2600:
  6276     0708  3000               	movlw	0
  6277     0709                     u2610:
  6278     0709  0081               	movwf	1
  6279     070A  2F21               	goto	l641
  6280     070B                     l3012:
  6281                           
  6282                           ;time.c: 78:         time->hh = (time->hh + 1) % 24;
  6283     070B  0848               	movf	increase_hour@time,w
  6284     070C  0086               	movwf	6
  6285     070D  0187               	clrf	7
  6286     070E  3018               	movlw	24
  6287     070F  00F2               	movwf	___awmod@divisor
  6288     0710  3000               	movlw	0
  6289     0711  00F3               	movwf	___awmod@divisor+1
  6290     0712  0848               	movf	increase_hour@time,w
  6291     0713  0084               	movwf	4
  6292     0714  0185               	clrf	5
  6293     0715  0800               	movf	0,w
  6294     0716  3E01               	addlw	1
  6295     0717  00F4               	movwf	___awmod@dividend
  6296     0718  3000               	movlw	0
  6297     0719  1803               	skipnc
  6298     071A  3001               	movlw	1
  6299     071B  00F5               	movwf	___awmod@dividend+1
  6300     071C  3186  263E  3186   	fcall	___awmod
  6301     071F  0872               	movf	?___awmod,w
  6302     0720  0081               	movwf	1
  6303     0721                     l641:
  6304     0721  0008               	return
  6305     0722                     __end_of_increase_hour:
  6306                           
  6307                           	psect	text26
  6308     0769                     __ptext26:	
  6309 ;; *************** function _decrease_hour *****************
  6310 ;; Defined at:
  6311 ;;		line 82 in file "time.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  time            1    wreg     PTR struct Time
  6314 ;;		 -> updated_time(9), 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  time            1    2[COMMON] PTR struct Time
  6317 ;;		 -> updated_time(9), 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6327 ;;      Params:         0       0       0       0       0       0       0       0
  6328 ;;      Locals:         1       0       0       0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0
  6330 ;;      Totals:         1       0       0       0       0       0       0       0
  6331 ;;Total ram usage:        1 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; Hardware stack levels required when called: 3
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_handle_set_hour
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341     0769                     _decrease_hour:	
  6342                           ;psect for function _decrease_hour
  6343                           
  6344                           
  6345                           ;incstack = 0
  6346                           ; Regs used in _decrease_hour: [wreg-fsr1h+status,2+status,0]
  6347                           ;decrease_hour@time stored from wreg
  6348     0769  00F2               	movwf	decrease_hour@time
  6349     076A                     l2260:
  6350                           
  6351                           ;time.c: 83:     if (time->is_12) {
  6352     076A  0A72               	incf	decrease_hour@time,w
  6353     076B  0086               	movwf	6
  6354     076C  0187               	clrf	7
  6355     076D  0801               	movf	1,w
  6356     076E  1903               	btfsc	3,2
  6357     076F  2F71               	goto	u1421
  6358     0770  2F72               	goto	u1420
  6359     0771                     u1421:
  6360     0771  2F97               	goto	l2270
  6361     0772                     u1420:
  6362     0772                     l2262:
  6363                           
  6364                           ;time.c: 84:         if (time->hh > 1)
  6365     0772  0872               	movf	decrease_hour@time,w
  6366     0773  0086               	movwf	6
  6367     0774  0187               	clrf	7
  6368     0775  3002               	movlw	2
  6369     0776  0201               	subwf	1,w
  6370     0777  1C03               	skipc
  6371     0778  2F7A               	goto	u1431
  6372     0779  2F7B               	goto	u1430
  6373     077A                     u1431:
  6374     077A  2F81               	goto	l2266
  6375     077B                     u1430:
  6376     077B                     l2264:
  6377                           
  6378                           ;time.c: 85:             time->hh--;
  6379     077B  0872               	movf	decrease_hour@time,w
  6380     077C  0086               	movwf	6
  6381     077D  0187               	clrf	7
  6382     077E  3001               	movlw	1
  6383     077F  0281               	subwf	1,f
  6384     0780  2FAA               	goto	l650
  6385     0781                     l2266:
  6386                           
  6387                           ;time.c: 87:             time->hh = 1;
  6388     0781  0872               	movf	decrease_hour@time,w
  6389     0782  0086               	movwf	6
  6390     0783  0187               	clrf	7
  6391     0784  0181               	clrf	1
  6392     0785  0A81               	incf	1,f
  6393     0786                     l2268:
  6394                           
  6395                           ;time.c: 88:             time->pm = (time->pm) ? 0 : 1;
  6396     0786  0872               	movf	decrease_hour@time,w
  6397     0787  3E02               	addlw	2
  6398     0788  0086               	movwf	6
  6399     0789  0187               	clrf	7
  6400     078A  0872               	movf	decrease_hour@time,w
  6401     078B  3E02               	addlw	2
  6402     078C  0084               	movwf	4
  6403     078D  0185               	clrf	5
  6404     078E  0800               	movf	0,w
  6405     078F  1903               	btfsc	3,2
  6406     0790  2F92               	goto	u1441
  6407     0791  2F94               	goto	u1440
  6408     0792                     u1441:
  6409     0792  3001               	movlw	1
  6410     0793  2F95               	goto	u1450
  6411     0794                     u1440:
  6412     0794  3000               	movlw	0
  6413     0795                     u1450:
  6414     0795  0081               	movwf	1
  6415     0796  2FAA               	goto	l650
  6416     0797                     l2270:
  6417                           
  6418                           ;time.c: 91:         if (time->hh > 0)
  6419     0797  0872               	movf	decrease_hour@time,w
  6420     0798  0086               	movwf	6
  6421     0799  0187               	clrf	7
  6422     079A  0801               	movf	1,w
  6423     079B  1903               	btfsc	3,2
  6424     079C  2F9E               	goto	u1461
  6425     079D  2F9F               	goto	u1460
  6426     079E                     u1461:
  6427     079E  2FA5               	goto	l2274
  6428     079F                     u1460:
  6429     079F                     l2272:
  6430                           
  6431                           ;time.c: 92:             time->hh--;
  6432     079F  0872               	movf	decrease_hour@time,w
  6433     07A0  0086               	movwf	6
  6434     07A1  0187               	clrf	7
  6435     07A2  3001               	movlw	1
  6436     07A3  0281               	subwf	1,f
  6437     07A4  2FAA               	goto	l650
  6438     07A5                     l2274:
  6439                           
  6440                           ;time.c: 94:             time->hh = 23;
  6441     07A5  0872               	movf	decrease_hour@time,w
  6442     07A6  0086               	movwf	6
  6443     07A7  0187               	clrf	7
  6444     07A8  3017               	movlw	23
  6445     07A9  0081               	movwf	1
  6446     07AA                     l650:
  6447     07AA  0008               	return
  6448     07AB                     __end_of_decrease_hour:
  6449                           
  6450                           	psect	text27
  6451     0F88                     __ptext27:	
  6452 ;; *************** function _handle_set_day *****************
  6453 ;; Defined at:
  6454 ;;		line 159 in file "main.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6468 ;;      Params:         0       0       0       0       0       0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0
  6471 ;;      Totals:         0       0       0       0       0       0       0       0
  6472 ;;Total ram usage:        0 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 7
  6475 ;; This function calls:
  6476 ;;		_decrease_date
  6477 ;;		_increase_date
  6478 ;;		_set_date_digits
  6479 ;;		_set_digit_displayed
  6480 ;;		_set_digit_displayed_all
  6481 ;; This function is called by:
  6482 ;;		_handle_state
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486     0F88                     _handle_set_day:	
  6487                           ;psect for function _handle_set_day
  6488                           
  6489     0F88                     l3126:	
  6490                           ;incstack = 0
  6491                           ; Regs used in _handle_set_day: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6492                           
  6493                           
  6494                           ;main.c: 160:     if (btn2.state == PRESSED) {
  6495     0F88  0020               	movlb	0	; select bank0
  6496     0F89  0344               	decf	_btn2,w
  6497     0F8A  1D03               	btfss	3,2
  6498     0F8B  2F8D               	goto	u2841
  6499     0F8C  2F8E               	goto	u2840
  6500     0F8D                     u2841:
  6501     0F8D  2F91               	goto	l3130
  6502     0F8E                     u2840:
  6503     0F8E                     l3128:
  6504                           
  6505                           ;main.c: 161:         state = SET_MONTH;
  6506     0F8E  3005               	movlw	5
  6507     0F8F  00AE               	movwf	_state
  6508                           
  6509                           ;main.c: 162:     } else {
  6510     0F90  2FAC               	goto	l3138
  6511     0F91                     l3130:
  6512                           
  6513                           ;main.c: 163:         if (btn1.state == PRESSED) {
  6514     0F91  0346               	decf	_btn1,w
  6515     0F92  1D03               	btfss	3,2
  6516     0F93  2F95               	goto	u2851
  6517     0F94  2F96               	goto	u2850
  6518     0F95                     u2851:
  6519     0F95  2F9F               	goto	l3134
  6520     0F96                     u2850:
  6521     0F96                     l3132:
  6522                           
  6523                           ;main.c: 164:             decrease_date(&updated_time);
  6524     0F96  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6525     0F97  3183  23D8  318F   	fcall	_decrease_date
  6526                           
  6527                           ;main.c: 165:             set_date_digits(&updated_time);
  6528     0F9A  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6529     0F9B  3185  2538  318F   	fcall	_set_date_digits
  6530                           
  6531                           ;main.c: 166:         } else if (btn3.state == PRESSED) {
  6532     0F9E  2FAC               	goto	l3138
  6533     0F9F                     l3134:
  6534     0F9F  0342               	decf	_btn3,w
  6535     0FA0  1D03               	btfss	3,2
  6536     0FA1  2FA3               	goto	u2861
  6537     0FA2  2FA4               	goto	u2860
  6538     0FA3                     u2861:
  6539     0FA3  2FAC               	goto	l3138
  6540     0FA4                     u2860:
  6541     0FA4                     l3136:
  6542                           
  6543                           ;main.c: 167:             increase_date(&updated_time);
  6544     0FA4  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6545     0FA5  3182  22A1  318F   	fcall	_increase_date
  6546                           
  6547                           ;main.c: 168:             set_date_digits(&updated_time);
  6548     0FA8  3030               	movlw	(low (_updated_time| 0))& (0+255)
  6549     0FA9  3185  2538  318F   	fcall	_set_date_digits
  6550     0FAC                     l3138:
  6551                           
  6552                           ;main.c: 171:     if (timer_count < 400 / 2) {
  6553     0FAC  3000               	movlw	0
  6554     0FAD  0020               	movlb	0	; select bank0
  6555     0FAE  022B               	subwf	_timer_count+1,w	;volatile
  6556     0FAF  30C8               	movlw	200
  6557     0FB0  1903               	skipnz
  6558     0FB1  022A               	subwf	_timer_count,w	;volatile
  6559     0FB2  1803               	skipnc
  6560     0FB3  2FB5               	goto	u2871
  6561     0FB4  2FB6               	goto	u2870
  6562     0FB5                     u2871:
  6563     0FB5  2FC0               	goto	l3142
  6564     0FB6                     u2870:
  6565     0FB6                     l3140:
  6566                           
  6567                           ;main.c: 172:         set_digit_displayed(0, 0, 1, 1);
  6568     0FB6  01F2               	clrf	set_digit_displayed@dig1
  6569     0FB7  01F3               	clrf	set_digit_displayed@dig2
  6570     0FB8  0AF3               	incf	set_digit_displayed@dig2,f
  6571     0FB9  01F4               	clrf	set_digit_displayed@dig3
  6572     0FBA  0AF4               	incf	set_digit_displayed@dig3,f
  6573     0FBB  3000               	movlw	0
  6574     0FBC  318C  24D9  318F   	fcall	_set_digit_displayed
  6575                           
  6576                           ;main.c: 173:     } else {
  6577     0FBF  2FC3               	goto	l308
  6578     0FC0                     l3142:
  6579                           
  6580                           ;main.c: 174:         set_digit_displayed_all();
  6581     0FC0  318C  24E4  318F   	fcall	_set_digit_displayed_all
  6582     0FC3                     l308:
  6583     0FC3  0008               	return
  6584     0FC4                     __end_of_handle_set_day:
  6585                           
  6586                           	psect	text28
  6587     02A1                     __ptext28:	
  6588 ;; *************** function _increase_date *****************
  6589 ;; Defined at:
  6590 ;;		line 110 in file "time.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  time            1    wreg     PTR struct Time
  6593 ;;		 -> updated_time(9), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  time            1    3[COMMON] PTR struct Time
  6596 ;;		 -> updated_time(9), 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6606 ;;      Params:         0       0       0       0       0       0       0       0
  6607 ;;      Locals:         1       0       0       0       0       0       0       0
  6608 ;;      Temps:          1       0       0       0       0       0       0       0
  6609 ;;      Totals:         2       0       0       0       0       0       0       0
  6610 ;;Total ram usage:        2 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 3
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_handle_set_day
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620     02A1                     _increase_date:	
  6621                           ;psect for function _increase_date
  6622                           
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in _increase_date: [wreg+fsr1l+fsr1h+status,2+status,0]
  6626                           ;increase_date@time stored from wreg
  6627     02A1  00F3               	movwf	increase_date@time
  6628     02A2                     l2330:
  6629                           
  6630                           ;time.c: 111:     if (time->MM == 2) {
  6631     02A2  0873               	movf	increase_date@time,w
  6632     02A3  3E07               	addlw	7
  6633     02A4  0086               	movwf	6
  6634     02A5  0187               	clrf	7
  6635     02A6  3002               	movlw	2
  6636     02A7  0601               	xorwf	1,w
  6637     02A8  1D03               	btfss	3,2
  6638     02A9  2AAB               	goto	u1631
  6639     02AA  2AAC               	goto	u1630
  6640     02AB                     u1631:
  6641     02AB  2AC6               	goto	l2338
  6642     02AC                     u1630:
  6643     02AC                     l2332:
  6644                           
  6645                           ;time.c: 112:         if (time->dd < 28)
  6646     02AC  0873               	movf	increase_date@time,w
  6647     02AD  3E06               	addlw	6
  6648     02AE  0086               	movwf	6
  6649     02AF  0187               	clrf	7
  6650     02B0  301C               	movlw	28
  6651     02B1  0201               	subwf	1,w
  6652     02B2  1803               	skipnc
  6653     02B3  2AB5               	goto	u1641
  6654     02B4  2AB6               	goto	u1640
  6655     02B5                     u1641:
  6656     02B5  2ABF               	goto	l2336
  6657     02B6                     u1640:
  6658     02B6                     l2334:
  6659                           
  6660                           ;time.c: 113:             time->dd++;
  6661     02B6  3001               	movlw	1
  6662     02B7  00F2               	movwf	??_increase_date
  6663     02B8  0873               	movf	increase_date@time,w
  6664     02B9  3E06               	addlw	6
  6665     02BA  0086               	movwf	6
  6666     02BB  0187               	clrf	7
  6667     02BC  0872               	movf	??_increase_date,w
  6668     02BD  0781               	addwf	1,f
  6669     02BE  2B3E               	goto	l673
  6670     02BF                     l2336:
  6671                           
  6672                           ;time.c: 115:             time->dd = 1;
  6673     02BF  0873               	movf	increase_date@time,w
  6674     02C0  3E06               	addlw	6
  6675     02C1  0086               	movwf	6
  6676     02C2  0187               	clrf	7
  6677     02C3  0181               	clrf	1
  6678     02C4  0A81               	incf	1,f
  6679     02C5  2B3E               	goto	l673
  6680     02C6                     l2338:
  6681     02C6  0873               	movf	increase_date@time,w
  6682     02C7  3E07               	addlw	7
  6683     02C8  0086               	movwf	6
  6684     02C9  0187               	clrf	7
  6685     02CA  0301               	decf	1,w
  6686     02CB  1903               	btfsc	3,2
  6687     02CC  2ACE               	goto	u1651
  6688     02CD  2ACF               	goto	u1650
  6689     02CE                     u1651:
  6690     02CE  2B0B               	goto	l2352
  6691     02CF                     u1650:
  6692     02CF                     l2340:
  6693     02CF  0873               	movf	increase_date@time,w
  6694     02D0  3E07               	addlw	7
  6695     02D1  0086               	movwf	6
  6696     02D2  0187               	clrf	7
  6697     02D3  3003               	movlw	3
  6698     02D4  0601               	xorwf	1,w
  6699     02D5  1903               	btfsc	3,2
  6700     02D6  2AD8               	goto	u1661
  6701     02D7  2AD9               	goto	u1660
  6702     02D8                     u1661:
  6703     02D8  2B0B               	goto	l2352
  6704     02D9                     u1660:
  6705     02D9                     l2342:
  6706     02D9  0873               	movf	increase_date@time,w
  6707     02DA  3E07               	addlw	7
  6708     02DB  0086               	movwf	6
  6709     02DC  0187               	clrf	7
  6710     02DD  3005               	movlw	5
  6711     02DE  0601               	xorwf	1,w
  6712     02DF  1903               	btfsc	3,2
  6713     02E0  2AE2               	goto	u1671
  6714     02E1  2AE3               	goto	u1670
  6715     02E2                     u1671:
  6716     02E2  2B0B               	goto	l2352
  6717     02E3                     u1670:
  6718     02E3                     l2344:
  6719     02E3  0873               	movf	increase_date@time,w
  6720     02E4  3E07               	addlw	7
  6721     02E5  0086               	movwf	6
  6722     02E6  0187               	clrf	7
  6723     02E7  3007               	movlw	7
  6724     02E8  0601               	xorwf	1,w
  6725     02E9  1903               	btfsc	3,2
  6726     02EA  2AEC               	goto	u1681
  6727     02EB  2AED               	goto	u1680
  6728     02EC                     u1681:
  6729     02EC  2B0B               	goto	l2352
  6730     02ED                     u1680:
  6731     02ED                     l2346:
  6732     02ED  0873               	movf	increase_date@time,w
  6733     02EE  3E07               	addlw	7
  6734     02EF  0086               	movwf	6
  6735     02F0  0187               	clrf	7
  6736     02F1  3008               	movlw	8
  6737     02F2  0601               	xorwf	1,w
  6738     02F3  1903               	btfsc	3,2
  6739     02F4  2AF6               	goto	u1691
  6740     02F5  2AF7               	goto	u1690
  6741     02F6                     u1691:
  6742     02F6  2B0B               	goto	l2352
  6743     02F7                     u1690:
  6744     02F7                     l2348:
  6745     02F7  0873               	movf	increase_date@time,w
  6746     02F8  3E07               	addlw	7
  6747     02F9  0086               	movwf	6
  6748     02FA  0187               	clrf	7
  6749     02FB  300A               	movlw	10
  6750     02FC  0601               	xorwf	1,w
  6751     02FD  1903               	btfsc	3,2
  6752     02FE  2B00               	goto	u1701
  6753     02FF  2B01               	goto	u1700
  6754     0300                     u1701:
  6755     0300  2B0B               	goto	l2352
  6756     0301                     u1700:
  6757     0301                     l2350:
  6758     0301  0873               	movf	increase_date@time,w
  6759     0302  3E07               	addlw	7
  6760     0303  0086               	movwf	6
  6761     0304  0187               	clrf	7
  6762     0305  300C               	movlw	12
  6763     0306  0601               	xorwf	1,w
  6764     0307  1D03               	btfss	3,2
  6765     0308  2B0A               	goto	u1711
  6766     0309  2B0B               	goto	u1710
  6767     030A                     u1711:
  6768     030A  2B25               	goto	l2358
  6769     030B                     u1710:
  6770     030B                     l2352:
  6771                           
  6772                           ;time.c: 117:             || time->MM == 8 || time->MM == 10 || time->MM == 12) {;time.c
      +                          : 118:         if (time->dd < 31)
  6773     030B  0873               	movf	increase_date@time,w
  6774     030C  3E06               	addlw	6
  6775     030D  0086               	movwf	6
  6776     030E  0187               	clrf	7
  6777     030F  301F               	movlw	31
  6778     0310  0201               	subwf	1,w
  6779     0311  1803               	skipnc
  6780     0312  2B14               	goto	u1721
  6781     0313  2B15               	goto	u1720
  6782     0314                     u1721:
  6783     0314  2B1E               	goto	l2356
  6784     0315                     u1720:
  6785     0315                     l2354:
  6786                           
  6787                           ;time.c: 119:             time->dd++;
  6788     0315  3001               	movlw	1
  6789     0316  00F2               	movwf	??_increase_date
  6790     0317  0873               	movf	increase_date@time,w
  6791     0318  3E06               	addlw	6
  6792     0319  0086               	movwf	6
  6793     031A  0187               	clrf	7
  6794     031B  0872               	movf	??_increase_date,w
  6795     031C  0781               	addwf	1,f
  6796     031D  2B3E               	goto	l673
  6797     031E                     l2356:
  6798                           
  6799                           ;time.c: 121:             time->dd = 1;
  6800     031E  0873               	movf	increase_date@time,w
  6801     031F  3E06               	addlw	6
  6802     0320  0086               	movwf	6
  6803     0321  0187               	clrf	7
  6804     0322  0181               	clrf	1
  6805     0323  0A81               	incf	1,f
  6806     0324  2B3E               	goto	l673
  6807     0325                     l2358:
  6808                           
  6809                           ;time.c: 123:         if (time->dd < 30)
  6810     0325  0873               	movf	increase_date@time,w
  6811     0326  3E06               	addlw	6
  6812     0327  0086               	movwf	6
  6813     0328  0187               	clrf	7
  6814     0329  301E               	movlw	30
  6815     032A  0201               	subwf	1,w
  6816     032B  1803               	skipnc
  6817     032C  2B2E               	goto	u1731
  6818     032D  2B2F               	goto	u1730
  6819     032E                     u1731:
  6820     032E  2B38               	goto	l2362
  6821     032F                     u1730:
  6822     032F                     l2360:
  6823                           
  6824                           ;time.c: 124:             time->dd++;
  6825     032F  3001               	movlw	1
  6826     0330  00F2               	movwf	??_increase_date
  6827     0331  0873               	movf	increase_date@time,w
  6828     0332  3E06               	addlw	6
  6829     0333  0086               	movwf	6
  6830     0334  0187               	clrf	7
  6831     0335  0872               	movf	??_increase_date,w
  6832     0336  0781               	addwf	1,f
  6833     0337  2B3E               	goto	l673
  6834     0338                     l2362:
  6835                           
  6836                           ;time.c: 126:             time->dd = 1;
  6837     0338  0873               	movf	increase_date@time,w
  6838     0339  3E06               	addlw	6
  6839     033A  0086               	movwf	6
  6840     033B  0187               	clrf	7
  6841     033C  0181               	clrf	1
  6842     033D  0A81               	incf	1,f
  6843     033E                     l673:
  6844     033E  0008               	return
  6845     033F                     __end_of_increase_date:
  6846                           
  6847                           	psect	text29
  6848     03D8                     __ptext29:	
  6849 ;; *************** function _decrease_date *****************
  6850 ;; Defined at:
  6851 ;;		line 130 in file "time.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  time            1    wreg     PTR struct Time
  6854 ;;		 -> updated_time(9), 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  time            1    2[COMMON] PTR struct Time
  6857 ;;		 -> updated_time(9), 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6867 ;;      Params:         0       0       0       0       0       0       0       0
  6868 ;;      Locals:         1       0       0       0       0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0
  6870 ;;      Totals:         1       0       0       0       0       0       0       0
  6871 ;;Total ram usage:        1 bytes
  6872 ;; Hardware stack levels used: 1
  6873 ;; Hardware stack levels required when called: 3
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_handle_set_day
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881     03D8                     _decrease_date:	
  6882                           ;psect for function _decrease_date
  6883                           
  6884                           
  6885                           ;incstack = 0
  6886                           ; Regs used in _decrease_date: [wreg+fsr1l+fsr1h+status,2+status,0]
  6887                           ;decrease_date@time stored from wreg
  6888     03D8  00F2               	movwf	decrease_date@time
  6889     03D9                     l2296:
  6890                           
  6891                           ;time.c: 131:     if (time->MM == 2) {
  6892     03D9  0872               	movf	decrease_date@time,w
  6893     03DA  3E07               	addlw	7
  6894     03DB  0086               	movwf	6
  6895     03DC  0187               	clrf	7
  6896     03DD  3002               	movlw	2
  6897     03DE  0601               	xorwf	1,w
  6898     03DF  1D03               	btfss	3,2
  6899     03E0  2BE2               	goto	u1521
  6900     03E1  2BE3               	goto	u1520
  6901     03E2                     u1521:
  6902     03E2  2BFB               	goto	l2304
  6903     03E3                     u1520:
  6904     03E3                     l2298:
  6905                           
  6906                           ;time.c: 132:         if (time->dd > 1)
  6907     03E3  0872               	movf	decrease_date@time,w
  6908     03E4  3E06               	addlw	6
  6909     03E5  0086               	movwf	6
  6910     03E6  0187               	clrf	7
  6911     03E7  3002               	movlw	2
  6912     03E8  0201               	subwf	1,w
  6913     03E9  1C03               	skipc
  6914     03EA  2BEC               	goto	u1531
  6915     03EB  2BED               	goto	u1530
  6916     03EC                     u1531:
  6917     03EC  2BF4               	goto	l2302
  6918     03ED                     u1530:
  6919     03ED                     l2300:
  6920                           
  6921                           ;time.c: 133:             time->dd--;
  6922     03ED  0872               	movf	decrease_date@time,w
  6923     03EE  3E06               	addlw	6
  6924     03EF  0086               	movwf	6
  6925     03F0  0187               	clrf	7
  6926     03F1  3001               	movlw	1
  6927     03F2  0281               	subwf	1,f
  6928     03F3  2C6F               	goto	l688
  6929     03F4                     l2302:
  6930                           
  6931                           ;time.c: 135:             time->dd = 28;
  6932     03F4  0872               	movf	decrease_date@time,w
  6933     03F5  3E06               	addlw	6
  6934     03F6  0086               	movwf	6
  6935     03F7  0187               	clrf	7
  6936     03F8  301C               	movlw	28
  6937     03F9  0081               	movwf	1
  6938     03FA  2C6F               	goto	l688
  6939     03FB                     l2304:
  6940     03FB  0872               	movf	decrease_date@time,w
  6941     03FC  3E07               	addlw	7
  6942     03FD  0086               	movwf	6
  6943     03FE  0187               	clrf	7
  6944     03FF  0301               	decf	1,w
  6945     0400  1903               	btfsc	3,2
  6946     0401  2C03               	goto	u1541
  6947     0402  2C04               	goto	u1540
  6948     0403                     u1541:
  6949     0403  2C40               	goto	l2318
  6950     0404                     u1540:
  6951     0404                     l2306:
  6952     0404  0872               	movf	decrease_date@time,w
  6953     0405  3E07               	addlw	7
  6954     0406  0086               	movwf	6
  6955     0407  0187               	clrf	7
  6956     0408  3003               	movlw	3
  6957     0409  0601               	xorwf	1,w
  6958     040A  1903               	btfsc	3,2
  6959     040B  2C0D               	goto	u1551
  6960     040C  2C0E               	goto	u1550
  6961     040D                     u1551:
  6962     040D  2C40               	goto	l2318
  6963     040E                     u1550:
  6964     040E                     l2308:
  6965     040E  0872               	movf	decrease_date@time,w
  6966     040F  3E07               	addlw	7
  6967     0410  0086               	movwf	6
  6968     0411  0187               	clrf	7
  6969     0412  3005               	movlw	5
  6970     0413  0601               	xorwf	1,w
  6971     0414  1903               	btfsc	3,2
  6972     0415  2C17               	goto	u1561
  6973     0416  2C18               	goto	u1560
  6974     0417                     u1561:
  6975     0417  2C40               	goto	l2318
  6976     0418                     u1560:
  6977     0418                     l2310:
  6978     0418  0872               	movf	decrease_date@time,w
  6979     0419  3E07               	addlw	7
  6980     041A  0086               	movwf	6
  6981     041B  0187               	clrf	7
  6982     041C  3007               	movlw	7
  6983     041D  0601               	xorwf	1,w
  6984     041E  1903               	btfsc	3,2
  6985     041F  2C21               	goto	u1571
  6986     0420  2C22               	goto	u1570
  6987     0421                     u1571:
  6988     0421  2C40               	goto	l2318
  6989     0422                     u1570:
  6990     0422                     l2312:
  6991     0422  0872               	movf	decrease_date@time,w
  6992     0423  3E07               	addlw	7
  6993     0424  0086               	movwf	6
  6994     0425  0187               	clrf	7
  6995     0426  3008               	movlw	8
  6996     0427  0601               	xorwf	1,w
  6997     0428  1903               	btfsc	3,2
  6998     0429  2C2B               	goto	u1581
  6999     042A  2C2C               	goto	u1580
  7000     042B                     u1581:
  7001     042B  2C40               	goto	l2318
  7002     042C                     u1580:
  7003     042C                     l2314:
  7004     042C  0872               	movf	decrease_date@time,w
  7005     042D  3E07               	addlw	7
  7006     042E  0086               	movwf	6
  7007     042F  0187               	clrf	7
  7008     0430  300A               	movlw	10
  7009     0431  0601               	xorwf	1,w
  7010     0432  1903               	btfsc	3,2
  7011     0433  2C35               	goto	u1591
  7012     0434  2C36               	goto	u1590
  7013     0435                     u1591:
  7014     0435  2C40               	goto	l2318
  7015     0436                     u1590:
  7016     0436                     l2316:
  7017     0436  0872               	movf	decrease_date@time,w
  7018     0437  3E07               	addlw	7
  7019     0438  0086               	movwf	6
  7020     0439  0187               	clrf	7
  7021     043A  300C               	movlw	12
  7022     043B  0601               	xorwf	1,w
  7023     043C  1D03               	btfss	3,2
  7024     043D  2C3F               	goto	u1601
  7025     043E  2C40               	goto	u1600
  7026     043F                     u1601:
  7027     043F  2C58               	goto	l2324
  7028     0440                     u1600:
  7029     0440                     l2318:
  7030                           
  7031                           ;time.c: 137:             || time->MM == 8 || time->MM == 10 || time->MM == 12) {;time.c
      +                          : 138:         if (time->dd > 1)
  7032     0440  0872               	movf	decrease_date@time,w
  7033     0441  3E06               	addlw	6
  7034     0442  0086               	movwf	6
  7035     0443  0187               	clrf	7
  7036     0444  3002               	movlw	2
  7037     0445  0201               	subwf	1,w
  7038     0446  1C03               	skipc
  7039     0447  2C49               	goto	u1611
  7040     0448  2C4A               	goto	u1610
  7041     0449                     u1611:
  7042     0449  2C51               	goto	l2322
  7043     044A                     u1610:
  7044     044A                     l2320:
  7045                           
  7046                           ;time.c: 139:             time->dd--;
  7047     044A  0872               	movf	decrease_date@time,w
  7048     044B  3E06               	addlw	6
  7049     044C  0086               	movwf	6
  7050     044D  0187               	clrf	7
  7051     044E  3001               	movlw	1
  7052     044F  0281               	subwf	1,f
  7053     0450  2C6F               	goto	l688
  7054     0451                     l2322:
  7055                           
  7056                           ;time.c: 141:             time->dd = 31;
  7057     0451  0872               	movf	decrease_date@time,w
  7058     0452  3E06               	addlw	6
  7059     0453  0086               	movwf	6
  7060     0454  0187               	clrf	7
  7061     0455  301F               	movlw	31
  7062     0456  0081               	movwf	1
  7063     0457  2C6F               	goto	l688
  7064     0458                     l2324:
  7065                           
  7066                           ;time.c: 143:         if (time->dd > 1)
  7067     0458  0872               	movf	decrease_date@time,w
  7068     0459  3E06               	addlw	6
  7069     045A  0086               	movwf	6
  7070     045B  0187               	clrf	7
  7071     045C  3002               	movlw	2
  7072     045D  0201               	subwf	1,w
  7073     045E  1C03               	skipc
  7074     045F  2C61               	goto	u1621
  7075     0460  2C62               	goto	u1620
  7076     0461                     u1621:
  7077     0461  2C69               	goto	l2328
  7078     0462                     u1620:
  7079     0462                     l2326:
  7080                           
  7081                           ;time.c: 144:             time->dd--;
  7082     0462  0872               	movf	decrease_date@time,w
  7083     0463  3E06               	addlw	6
  7084     0464  0086               	movwf	6
  7085     0465  0187               	clrf	7
  7086     0466  3001               	movlw	1
  7087     0467  0281               	subwf	1,f
  7088     0468  2C6F               	goto	l688
  7089     0469                     l2328:
  7090                           
  7091                           ;time.c: 146:             time->dd = 30;
  7092     0469  0872               	movf	decrease_date@time,w
  7093     046A  3E06               	addlw	6
  7094     046B  0086               	movwf	6
  7095     046C  0187               	clrf	7
  7096     046D  301E               	movlw	30
  7097     046E  0081               	movwf	1
  7098     046F                     l688:
  7099     046F  0008               	return
  7100     0470                     __end_of_decrease_date:
  7101                           
  7102                           	psect	text30
  7103     0EF5                     __ptext30:	
  7104 ;; *************** function _handle_display_time *****************
  7105 ;; Defined at:
  7106 ;;		line 100 in file "main.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;		None
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7120 ;;      Params:         0       0       0       0       0       0       0       0
  7121 ;;      Locals:         0       0       0       0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0
  7123 ;;      Totals:         0       0       0       0       0       0       0       0
  7124 ;;Total ram usage:        0 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 7
  7127 ;; This function calls:
  7128 ;;		_copy_time_fields
  7129 ;;		_set_date_digits
  7130 ;;		_set_time_digits
  7131 ;; This function is called by:
  7132 ;;		_handle_state
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136     0EF5                     _handle_display_time:	
  7137                           ;psect for function _handle_display_time
  7138                           
  7139     0EF5                     l3056:	
  7140                           ;incstack = 0
  7141                           ; Regs used in _handle_display_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7142                           
  7143                           
  7144                           ;main.c: 101:     if (btn2.state == LONG_PRESSED) {
  7145     0EF5  3003               	movlw	3
  7146     0EF6  0020               	movlb	0	; select bank0
  7147     0EF7  0644               	xorwf	_btn2,w
  7148     0EF8  1D03               	btfss	3,2
  7149     0EF9  2EFB               	goto	u2721
  7150     0EFA  2EFC               	goto	u2720
  7151     0EFB                     u2721:
  7152     0EFB  2F0A               	goto	l3064
  7153     0EFC                     u2720:
  7154     0EFC                     l3058:
  7155                           
  7156                           ;main.c: 102:         copy_time_fields(&time, &updated_time);
  7157     0EFC  3030               	movlw	(low (_updated_time| 0))& (0+255)
  7158     0EFD  00F2               	movwf	copy_time_fields@dest_time
  7159     0EFE  3039               	movlw	(low (_time| 0))& (0+255)
  7160     0EFF  3185  2590  318E   	fcall	_copy_time_fields
  7161     0F02                     l3060:
  7162                           
  7163                           ;main.c: 103:         set_time_digits(&updated_time);
  7164     0F02  3030               	movlw	(low (_updated_time| 0))& (0+255)
  7165     0F03  3185  25E8  318E   	fcall	_set_time_digits
  7166     0F06                     l3062:
  7167                           
  7168                           ;main.c: 104:         state = SET_HH;
  7169     0F06  3002               	movlw	2
  7170     0F07  0020               	movlb	0	; select bank0
  7171     0F08  00AE               	movwf	_state
  7172                           
  7173                           ;main.c: 105:     } else if (btn1.state == PRESSED) {
  7174     0F09  2F18               	goto	l272
  7175     0F0A                     l3064:
  7176     0F0A  0346               	decf	_btn1,w
  7177     0F0B  1D03               	btfss	3,2
  7178     0F0C  2F0E               	goto	u2731
  7179     0F0D  2F0F               	goto	u2730
  7180     0F0E                     u2731:
  7181     0F0E  2F18               	goto	l272
  7182     0F0F                     u2730:
  7183     0F0F                     l3066:
  7184                           
  7185                           ;main.c: 106:         set_date_digits(&time);
  7186     0F0F  3039               	movlw	(low (_time| 0))& (0+255)
  7187     0F10  3185  2538  318E   	fcall	_set_date_digits
  7188     0F13                     l3068:
  7189                           
  7190                           ;main.c: 107:         date_displayed_ticks = 0;
  7191     0F13  0020               	movlb	0	; select bank0
  7192     0F14  01A8               	clrf	_date_displayed_ticks
  7193     0F15  01A9               	clrf	_date_displayed_ticks+1
  7194     0F16                     l3070:
  7195                           
  7196                           ;main.c: 108:         state = DISPLAY_DATE;
  7197     0F16  01AE               	clrf	_state
  7198     0F17  0AAE               	incf	_state,f
  7199     0F18                     l272:
  7200     0F18  0008               	return
  7201     0F19                     __end_of_handle_display_time:
  7202                           
  7203                           	psect	text31
  7204     0538                     __ptext31:	
  7205 ;; *************** function _set_date_digits *****************
  7206 ;; Defined at:
  7207 ;;		line 96 in file "main.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;  tm              1    wreg     PTR struct Time
  7210 ;;		 -> updated_time(9), time(9), 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  tm              1   15[BANK0 ] PTR struct Time
  7213 ;;		 -> updated_time(9), time(9), 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  1    wreg      void 
  7216 ;; Registers used:
  7217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7223 ;;      Params:         0       0       0       0       0       0       0       0
  7224 ;;      Locals:         0       1       0       0       0       0       0       0
  7225 ;;      Temps:          0       8       0       0       0       0       0       0
  7226 ;;      Totals:         0       9       0       0       0       0       0       0
  7227 ;;Total ram usage:        9 bytes
  7228 ;; Hardware stack levels used: 1
  7229 ;; Hardware stack levels required when called: 6
  7230 ;; This function calls:
  7231 ;;		___awdiv
  7232 ;;		___awmod
  7233 ;;		_set_digits
  7234 ;; This function is called by:
  7235 ;;		_handle_display_time
  7236 ;;		_handle_set_minute
  7237 ;;		_handle_set_day
  7238 ;;		_handle_set_month
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242     0538                     _set_date_digits:	
  7243                           ;psect for function _set_date_digits
  7244                           
  7245                           
  7246                           ;incstack = 0
  7247                           ; Regs used in _set_date_digits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7248                           ;set_date_digits@tm stored from wreg
  7249     0538  0020               	movlb	0	; select bank0
  7250     0539  00D7               	movwf	set_date_digits@tm
  7251     053A                     l3000:
  7252                           
  7253                           ;main.c: 97:     set_digits(tm->dd / 10, tm->dd % 10, tm->MM / 10, tm->MM % 10);
  7254     053A  300A               	movlw	10
  7255     053B  00F2               	movwf	___awmod@divisor
  7256     053C  3000               	movlw	0
  7257     053D  00F3               	movwf	___awmod@divisor+1
  7258     053E  0857               	movf	set_date_digits@tm,w
  7259     053F  3E06               	addlw	6
  7260     0540  0086               	movwf	6
  7261     0541  0187               	clrf	7
  7262     0542  0801               	movf	1,w
  7263     0543  00CF               	movwf	??_set_date_digits
  7264     0544  01D0               	clrf	??_set_date_digits+1
  7265     0545  084F               	movf	??_set_date_digits,w
  7266     0546  00F4               	movwf	___awmod@dividend
  7267     0547  0850               	movf	??_set_date_digits+1,w
  7268     0548  00F5               	movwf	___awmod@dividend+1
  7269     0549  3186  263E  3185   	fcall	___awmod
  7270     054C  0872               	movf	?___awmod,w
  7271     054D  0020               	movlb	0	; select bank0
  7272     054E  00CC               	movwf	set_digits@dig1
  7273     054F  300A               	movlw	10
  7274     0550  00F2               	movwf	___awdiv@divisor
  7275     0551  3000               	movlw	0
  7276     0552  00F3               	movwf	___awdiv@divisor+1
  7277     0553  0857               	movf	set_date_digits@tm,w
  7278     0554  3E07               	addlw	7
  7279     0555  0086               	movwf	6
  7280     0556  0187               	clrf	7
  7281     0557  0801               	movf	1,w
  7282     0558  00D1               	movwf	??_set_date_digits+2
  7283     0559  01D2               	clrf	??_set_date_digits+3
  7284     055A  0851               	movf	??_set_date_digits+2,w
  7285     055B  00F4               	movwf	___awdiv@dividend
  7286     055C  0852               	movf	??_set_date_digits+3,w
  7287     055D  00F5               	movwf	___awdiv@dividend+1
  7288     055E  3184  24D8  3185   	fcall	___awdiv
  7289     0561  0872               	movf	?___awdiv,w
  7290     0562  0020               	movlb	0	; select bank0
  7291     0563  00CD               	movwf	set_digits@dig2
  7292     0564  300A               	movlw	10
  7293     0565  00F2               	movwf	___awmod@divisor
  7294     0566  3000               	movlw	0
  7295     0567  00F3               	movwf	___awmod@divisor+1
  7296     0568  0857               	movf	set_date_digits@tm,w
  7297     0569  3E07               	addlw	7
  7298     056A  0086               	movwf	6
  7299     056B  0187               	clrf	7
  7300     056C  0801               	movf	1,w
  7301     056D  00D3               	movwf	??_set_date_digits+4
  7302     056E  01D4               	clrf	??_set_date_digits+5
  7303     056F  0853               	movf	??_set_date_digits+4,w
  7304     0570  00F4               	movwf	___awmod@dividend
  7305     0571  0854               	movf	??_set_date_digits+5,w
  7306     0572  00F5               	movwf	___awmod@dividend+1
  7307     0573  3186  263E  3185   	fcall	___awmod
  7308     0576  0872               	movf	?___awmod,w
  7309     0577  0020               	movlb	0	; select bank0
  7310     0578  00CE               	movwf	set_digits@dig3
  7311     0579  300A               	movlw	10
  7312     057A  00F2               	movwf	___awdiv@divisor
  7313     057B  3000               	movlw	0
  7314     057C  00F3               	movwf	___awdiv@divisor+1
  7315     057D  0857               	movf	set_date_digits@tm,w
  7316     057E  3E06               	addlw	6
  7317     057F  0086               	movwf	6
  7318     0580  0187               	clrf	7
  7319     0581  0801               	movf	1,w
  7320     0582  00D5               	movwf	??_set_date_digits+6
  7321     0583  01D6               	clrf	??_set_date_digits+7
  7322     0584  0855               	movf	??_set_date_digits+6,w
  7323     0585  00F4               	movwf	___awdiv@dividend
  7324     0586  0856               	movf	??_set_date_digits+7,w
  7325     0587  00F5               	movwf	___awdiv@dividend+1
  7326     0588  3184  24D8  3185   	fcall	___awdiv
  7327     058B  0872               	movf	?___awdiv,w
  7328     058C  318D  2509  3185   	fcall	_set_digits
  7329     058F                     l266:
  7330     058F  0008               	return
  7331     0590                     __end_of_set_date_digits:
  7332                           
  7333                           	psect	text32
  7334     0590                     __ptext32:	
  7335 ;; *************** function _copy_time_fields *****************
  7336 ;; Defined at:
  7337 ;;		line 164 in file "time.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  src_time        1    wreg     PTR struct Time
  7340 ;;		 -> updated_time(9), time(9), 
  7341 ;;  dest_time       1    2[COMMON] PTR struct Time
  7342 ;;		 -> updated_time(9), time(9), 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  src_time        1    3[COMMON] PTR struct Time
  7345 ;;		 -> updated_time(9), time(9), 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      void 
  7348 ;; Registers used:
  7349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7355 ;;      Params:         1       0       0       0       0       0       0       0
  7356 ;;      Locals:         1       0       0       0       0       0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0
  7358 ;;      Totals:         2       0       0       0       0       0       0       0
  7359 ;;Total ram usage:        2 bytes
  7360 ;; Hardware stack levels used: 1
  7361 ;; Hardware stack levels required when called: 3
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_handle_display_time
  7366 ;;		_handle_set_month
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370     0590                     _copy_time_fields:	
  7371                           ;psect for function _copy_time_fields
  7372                           
  7373                           
  7374                           ;incstack = 0
  7375                           ; Regs used in _copy_time_fields: [wreg-fsr1h+status,2+status,0]
  7376                           ;copy_time_fields@src_time stored from wreg
  7377     0590  00F3               	movwf	copy_time_fields@src_time
  7378     0591                     l2244:
  7379                           
  7380                           ;time.c: 165:     dest_time->hh = src_time->hh;
  7381     0591  0872               	movf	copy_time_fields@dest_time,w
  7382     0592  0086               	movwf	6
  7383     0593  0187               	clrf	7
  7384     0594  0873               	movf	copy_time_fields@src_time,w
  7385     0595  0084               	movwf	4
  7386     0596  0185               	clrf	5
  7387     0597  0800               	movf	0,w
  7388     0598  0081               	movwf	1
  7389                           
  7390                           ;time.c: 166:     dest_time->is_12 = src_time->is_12;
  7391     0599  0A72               	incf	copy_time_fields@dest_time,w
  7392     059A  0086               	movwf	6
  7393     059B  0187               	clrf	7
  7394     059C  0A73               	incf	copy_time_fields@src_time,w
  7395     059D  0084               	movwf	4
  7396     059E  0185               	clrf	5
  7397     059F  0800               	movf	0,w
  7398     05A0  0081               	movwf	1
  7399     05A1                     l2246:
  7400                           
  7401                           ;time.c: 167:     dest_time->pm = src_time->pm;
  7402     05A1  0872               	movf	copy_time_fields@dest_time,w
  7403     05A2  3E02               	addlw	2
  7404     05A3  0086               	movwf	6
  7405     05A4  0187               	clrf	7
  7406     05A5  0873               	movf	copy_time_fields@src_time,w
  7407     05A6  3E02               	addlw	2
  7408     05A7  0084               	movwf	4
  7409     05A8  0185               	clrf	5
  7410     05A9  0800               	movf	0,w
  7411     05AA  0081               	movwf	1
  7412     05AB                     l2248:
  7413                           
  7414                           ;time.c: 169:     dest_time->mm = src_time->mm;
  7415     05AB  0872               	movf	copy_time_fields@dest_time,w
  7416     05AC  3E03               	addlw	3
  7417     05AD  0086               	movwf	6
  7418     05AE  0187               	clrf	7
  7419     05AF  0873               	movf	copy_time_fields@src_time,w
  7420     05B0  3E03               	addlw	3
  7421     05B1  0084               	movwf	4
  7422     05B2  0185               	clrf	5
  7423     05B3  0800               	movf	0,w
  7424     05B4  0081               	movwf	1
  7425     05B5                     l2250:
  7426                           
  7427                           ;time.c: 170:     dest_time->ss = src_time->ss;
  7428     05B5  0872               	movf	copy_time_fields@dest_time,w
  7429     05B6  3E04               	addlw	4
  7430     05B7  0086               	movwf	6
  7431     05B8  0187               	clrf	7
  7432     05B9  0873               	movf	copy_time_fields@src_time,w
  7433     05BA  3E04               	addlw	4
  7434     05BB  0084               	movwf	4
  7435     05BC  0185               	clrf	5
  7436     05BD  0800               	movf	0,w
  7437     05BE  0081               	movwf	1
  7438     05BF                     l2252:
  7439                           
  7440                           ;time.c: 172:     dest_time->day = src_time->day;
  7441     05BF  0872               	movf	copy_time_fields@dest_time,w
  7442     05C0  3E05               	addlw	5
  7443     05C1  0086               	movwf	6
  7444     05C2  0187               	clrf	7
  7445     05C3  0873               	movf	copy_time_fields@src_time,w
  7446     05C4  3E05               	addlw	5
  7447     05C5  0084               	movwf	4
  7448     05C6  0185               	clrf	5
  7449     05C7  0800               	movf	0,w
  7450     05C8  0081               	movwf	1
  7451     05C9                     l2254:
  7452                           
  7453                           ;time.c: 174:     dest_time->dd = src_time->dd;
  7454     05C9  0872               	movf	copy_time_fields@dest_time,w
  7455     05CA  3E06               	addlw	6
  7456     05CB  0086               	movwf	6
  7457     05CC  0187               	clrf	7
  7458     05CD  0873               	movf	copy_time_fields@src_time,w
  7459     05CE  3E06               	addlw	6
  7460     05CF  0084               	movwf	4
  7461     05D0  0185               	clrf	5
  7462     05D1  0800               	movf	0,w
  7463     05D2  0081               	movwf	1
  7464     05D3                     l2256:
  7465                           
  7466                           ;time.c: 176:     dest_time->MM = src_time->MM;
  7467     05D3  0872               	movf	copy_time_fields@dest_time,w
  7468     05D4  3E07               	addlw	7
  7469     05D5  0086               	movwf	6
  7470     05D6  0187               	clrf	7
  7471     05D7  0873               	movf	copy_time_fields@src_time,w
  7472     05D8  3E07               	addlw	7
  7473     05D9  0084               	movwf	4
  7474     05DA  0185               	clrf	5
  7475     05DB  0800               	movf	0,w
  7476     05DC  0081               	movwf	1
  7477     05DD                     l2258:
  7478                           
  7479                           ;time.c: 178:     dest_time->yy = src_time->yy;
  7480     05DD  0872               	movf	copy_time_fields@dest_time,w
  7481     05DE  3E08               	addlw	8
  7482     05DF  0086               	movwf	6
  7483     05E0  0187               	clrf	7
  7484     05E1  0873               	movf	copy_time_fields@src_time,w
  7485     05E2  3E08               	addlw	8
  7486     05E3  0084               	movwf	4
  7487     05E4  0185               	clrf	5
  7488     05E5  0800               	movf	0,w
  7489     05E6  0081               	movwf	1
  7490     05E7                     l701:
  7491     05E7  0008               	return
  7492     05E8                     __end_of_copy_time_fields:
  7493                           
  7494                           	psect	text33
  7495     0DCF                     __ptext33:	
  7496 ;; *************** function _handle_display_date *****************
  7497 ;; Defined at:
  7498 ;;		line 112 in file "main.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;		None
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;		None
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7512 ;;      Params:         0       0       0       0       0       0       0       0
  7513 ;;      Locals:         0       0       0       0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0
  7515 ;;      Totals:         0       0       0       0       0       0       0       0
  7516 ;;Total ram usage:        0 bytes
  7517 ;; Hardware stack levels used: 1
  7518 ;; Hardware stack levels required when called: 7
  7519 ;; This function calls:
  7520 ;;		_set_time_digits
  7521 ;; This function is called by:
  7522 ;;		_handle_state
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526     0DCF                     _handle_display_date:	
  7527                           ;psect for function _handle_display_date
  7528                           
  7529     0DCF                     l3072:	
  7530                           ;incstack = 0
  7531                           ; Regs used in _handle_display_date: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7532                           
  7533                           
  7534                           ;main.c: 113:     date_displayed_ticks++;
  7535     0DCF  3001               	movlw	1
  7536     0DD0  0020               	movlb	0	; select bank0
  7537     0DD1  07A8               	addwf	_date_displayed_ticks,f
  7538     0DD2  3000               	movlw	0
  7539     0DD3  3DA9               	addwfc	_date_displayed_ticks+1,f
  7540     0DD4                     l3074:
  7541                           
  7542                           ;main.c: 114:     if (btn1.state == PRESSED || date_displayed_ticks == 5 * 400) {
  7543     0DD4  0346               	decf	_btn1,w
  7544     0DD5  1903               	btfsc	3,2
  7545     0DD6  2DD8               	goto	u2741
  7546     0DD7  2DD9               	goto	u2740
  7547     0DD8                     u2741:
  7548     0DD8  2DE2               	goto	l3078
  7549     0DD9                     u2740:
  7550     0DD9                     l3076:
  7551     0DD9  30D0               	movlw	208
  7552     0DDA  0628               	xorwf	_date_displayed_ticks,w
  7553     0DDB  3007               	movlw	7
  7554     0DDC  1903               	skipnz
  7555     0DDD  0629               	xorwf	_date_displayed_ticks+1,w
  7556     0DDE  1D03               	btfss	3,2
  7557     0DDF  2DE1               	goto	u2751
  7558     0DE0  2DE2               	goto	u2750
  7559     0DE1                     u2751:
  7560     0DE1  2DE7               	goto	l278
  7561     0DE2                     u2750:
  7562     0DE2                     l3078:
  7563                           
  7564                           ;main.c: 115:         state = DISPLAY_TIME;
  7565     0DE2  01AE               	clrf	_state
  7566     0DE3                     l3080:
  7567                           
  7568                           ;main.c: 116:         set_time_digits(&time);
  7569     0DE3  3039               	movlw	(low (_time| 0))& (0+255)
  7570     0DE4  3185  25E8  318D   	fcall	_set_time_digits
  7571     0DE7                     l278:
  7572     0DE7  0008               	return
  7573     0DE8                     __end_of_handle_display_date:
  7574                           
  7575                           	psect	text34
  7576     05E8                     __ptext34:	
  7577 ;; *************** function _set_time_digits *****************
  7578 ;; Defined at:
  7579 ;;		line 92 in file "main.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  tm              1    wreg     PTR struct Time
  7582 ;;		 -> updated_time(9), time(9), 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  tm              1   15[BANK0 ] PTR struct Time
  7585 ;;		 -> updated_time(9), time(9), 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7595 ;;      Params:         0       0       0       0       0       0       0       0
  7596 ;;      Locals:         0       1       0       0       0       0       0       0
  7597 ;;      Temps:          0       8       0       0       0       0       0       0
  7598 ;;      Totals:         0       9       0       0       0       0       0       0
  7599 ;;Total ram usage:        9 bytes
  7600 ;; Hardware stack levels used: 1
  7601 ;; Hardware stack levels required when called: 6
  7602 ;; This function calls:
  7603 ;;		___awdiv
  7604 ;;		___awmod
  7605 ;;		_set_digits
  7606 ;; This function is called by:
  7607 ;;		_handle_display_time
  7608 ;;		_handle_display_date
  7609 ;;		_handle_set_hour
  7610 ;;		_handle_set_minute
  7611 ;;		_handle_set_month
  7612 ;;		_main
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616     05E8                     _set_time_digits:	
  7617                           ;psect for function _set_time_digits
  7618                           
  7619                           
  7620                           ;incstack = 0
  7621                           ; Regs used in _set_time_digits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7622                           ;set_time_digits@tm stored from wreg
  7623     05E8  0020               	movlb	0	; select bank0
  7624     05E9  00D7               	movwf	set_time_digits@tm
  7625     05EA                     l2998:
  7626                           
  7627                           ;main.c: 93:     set_digits(tm->hh / 10, tm->hh % 10, tm->mm / 10, tm->mm % 10);
  7628     05EA  300A               	movlw	10
  7629     05EB  00F2               	movwf	___awmod@divisor
  7630     05EC  3000               	movlw	0
  7631     05ED  00F3               	movwf	___awmod@divisor+1
  7632     05EE  0857               	movf	set_time_digits@tm,w
  7633     05EF  0086               	movwf	6
  7634     05F0  0187               	clrf	7
  7635     05F1  0801               	movf	1,w
  7636     05F2  00CF               	movwf	??_set_time_digits
  7637     05F3  01D0               	clrf	??_set_time_digits+1
  7638     05F4  084F               	movf	??_set_time_digits,w
  7639     05F5  00F4               	movwf	___awmod@dividend
  7640     05F6  0850               	movf	??_set_time_digits+1,w
  7641     05F7  00F5               	movwf	___awmod@dividend+1
  7642     05F8  3186  263E  3185   	fcall	___awmod
  7643     05FB  0872               	movf	?___awmod,w
  7644     05FC  0020               	movlb	0	; select bank0
  7645     05FD  00CC               	movwf	set_digits@dig1
  7646     05FE  300A               	movlw	10
  7647     05FF  00F2               	movwf	___awdiv@divisor
  7648     0600  3000               	movlw	0
  7649     0601  00F3               	movwf	___awdiv@divisor+1
  7650     0602  0857               	movf	set_time_digits@tm,w
  7651     0603  3E03               	addlw	3
  7652     0604  0086               	movwf	6
  7653     0605  0187               	clrf	7
  7654     0606  0801               	movf	1,w
  7655     0607  00D1               	movwf	??_set_time_digits+2
  7656     0608  01D2               	clrf	??_set_time_digits+3
  7657     0609  0851               	movf	??_set_time_digits+2,w
  7658     060A  00F4               	movwf	___awdiv@dividend
  7659     060B  0852               	movf	??_set_time_digits+3,w
  7660     060C  00F5               	movwf	___awdiv@dividend+1
  7661     060D  3184  24D8  3185   	fcall	___awdiv
  7662     0610  0872               	movf	?___awdiv,w
  7663     0611  0020               	movlb	0	; select bank0
  7664     0612  00CD               	movwf	set_digits@dig2
  7665     0613  300A               	movlw	10
  7666     0614  00F2               	movwf	___awmod@divisor
  7667     0615  3000               	movlw	0
  7668     0616  00F3               	movwf	___awmod@divisor+1
  7669     0617  0857               	movf	set_time_digits@tm,w
  7670     0618  3E03               	addlw	3
  7671     0619  0086               	movwf	6
  7672     061A  0187               	clrf	7
  7673     061B  0801               	movf	1,w
  7674     061C  00D3               	movwf	??_set_time_digits+4
  7675     061D  01D4               	clrf	??_set_time_digits+5
  7676     061E  0853               	movf	??_set_time_digits+4,w
  7677     061F  00F4               	movwf	___awmod@dividend
  7678     0620  0854               	movf	??_set_time_digits+5,w
  7679     0621  00F5               	movwf	___awmod@dividend+1
  7680     0622  3186  263E  3185   	fcall	___awmod
  7681     0625  0872               	movf	?___awmod,w
  7682     0626  0020               	movlb	0	; select bank0
  7683     0627  00CE               	movwf	set_digits@dig3
  7684     0628  300A               	movlw	10
  7685     0629  00F2               	movwf	___awdiv@divisor
  7686     062A  3000               	movlw	0
  7687     062B  00F3               	movwf	___awdiv@divisor+1
  7688     062C  0857               	movf	set_time_digits@tm,w
  7689     062D  0086               	movwf	6
  7690     062E  0187               	clrf	7
  7691     062F  0801               	movf	1,w
  7692     0630  00D5               	movwf	??_set_time_digits+6
  7693     0631  01D6               	clrf	??_set_time_digits+7
  7694     0632  0855               	movf	??_set_time_digits+6,w
  7695     0633  00F4               	movwf	___awdiv@dividend
  7696     0634  0856               	movf	??_set_time_digits+7,w
  7697     0635  00F5               	movwf	___awdiv@dividend+1
  7698     0636  3184  24D8  3185   	fcall	___awdiv
  7699     0639  0872               	movf	?___awdiv,w
  7700     063A  318D  2509  3185   	fcall	_set_digits
  7701     063D                     l263:
  7702     063D  0008               	return
  7703     063E                     __end_of_set_time_digits:
  7704                           
  7705                           	psect	text35
  7706     0D09                     __ptext35:	
  7707 ;; *************** function _set_digits *****************
  7708 ;; Defined at:
  7709 ;;		line 9 in file "nixie.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  dig0            1    wreg     unsigned char 
  7712 ;;  dig1            1    4[BANK0 ] unsigned char 
  7713 ;;  dig2            1    5[BANK0 ] unsigned char 
  7714 ;;  dig3            1    6[BANK0 ] unsigned char 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  dig0            1    9[COMMON] unsigned char 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, status,2, status,0, pclath, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7726 ;;      Params:         0       3       0       0       0       0       0       0
  7727 ;;      Locals:         1       0       0       0       0       0       0       0
  7728 ;;      Temps:          0       0       0       0       0       0       0       0
  7729 ;;      Totals:         1       3       0       0       0       0       0       0
  7730 ;;Total ram usage:        4 bytes
  7731 ;; Hardware stack levels used: 1
  7732 ;; Hardware stack levels required when called: 5
  7733 ;; This function calls:
  7734 ;;		_set_digit_displayed_all
  7735 ;; This function is called by:
  7736 ;;		_set_time_digits
  7737 ;;		_set_date_digits
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741     0D09                     _set_digits:	
  7742                           ;psect for function _set_digits
  7743                           
  7744                           
  7745                           ;incstack = 0
  7746                           ; Regs used in _set_digits: [wreg+status,2+status,0+pclath+cstack]
  7747                           ;set_digits@dig0 stored from wreg
  7748     0D09  00F9               	movwf	set_digits@dig0
  7749     0D0A                     l2144:
  7750                           
  7751                           ;nixie.c: 10:     digit_values[0] = dig0;
  7752     0D0A  0879               	movf	set_digits@dig0,w
  7753     0D0B  0020               	movlb	0	; select bank0
  7754     0D0C  00A4               	movwf	_digit_values
  7755                           
  7756                           ;nixie.c: 11:     digit_values[1] = dig1;
  7757     0D0D  084C               	movf	set_digits@dig1,w
  7758     0D0E  00A5               	movwf	_digit_values+1
  7759                           
  7760                           ;nixie.c: 12:     digit_values[2] = dig2;
  7761     0D0F  084D               	movf	set_digits@dig2,w
  7762     0D10  00A6               	movwf	_digit_values+2
  7763                           
  7764                           ;nixie.c: 13:     digit_values[3] = dig3;
  7765     0D11  084E               	movf	set_digits@dig3,w
  7766     0D12  00A7               	movwf	_digit_values+3
  7767     0D13                     l2146:
  7768                           
  7769                           ;nixie.c: 15:     set_digit_displayed_all();
  7770     0D13  318C  24E4  318D   	fcall	_set_digit_displayed_all
  7771     0D16                     l444:
  7772     0D16  0008               	return
  7773     0D17                     __end_of_set_digits:
  7774                           
  7775                           	psect	text36
  7776     0CE4                     __ptext36:	
  7777 ;; *************** function _set_digit_displayed_all *****************
  7778 ;; Defined at:
  7779 ;;		line 25 in file "nixie.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;		None
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;		None
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  1    wreg      void 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2, status,0, pclath, cstack
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7793 ;;      Params:         0       0       0       0       0       0       0       0
  7794 ;;      Locals:         0       0       0       0       0       0       0       0
  7795 ;;      Temps:          0       0       0       0       0       0       0       0
  7796 ;;      Totals:         0       0       0       0       0       0       0       0
  7797 ;;Total ram usage:        0 bytes
  7798 ;; Hardware stack levels used: 1
  7799 ;; Hardware stack levels required when called: 4
  7800 ;; This function calls:
  7801 ;;		_set_digit_displayed
  7802 ;; This function is called by:
  7803 ;;		_handle_set_hour
  7804 ;;		_handle_set_minute
  7805 ;;		_handle_set_day
  7806 ;;		_handle_set_month
  7807 ;;		_set_digits
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811     0CE4                     _set_digit_displayed_all:	
  7812                           ;psect for function _set_digit_displayed_all
  7813                           
  7814     0CE4                     l2124:	
  7815                           ;incstack = 0
  7816                           ; Regs used in _set_digit_displayed_all: [wreg+status,2+status,0+pclath+cstack]
  7817                           
  7818                           
  7819                           ;nixie.c: 27:     set_digit_displayed(1, 1, 1, 1);
  7820     0CE4  01F2               	clrf	set_digit_displayed@dig1
  7821     0CE5  0AF2               	incf	set_digit_displayed@dig1,f
  7822     0CE6  01F3               	clrf	set_digit_displayed@dig2
  7823     0CE7  0AF3               	incf	set_digit_displayed@dig2,f
  7824     0CE8  01F4               	clrf	set_digit_displayed@dig3
  7825     0CE9  0AF4               	incf	set_digit_displayed@dig3,f
  7826     0CEA  3001               	movlw	1
  7827     0CEB  318C  24D9  318C   	fcall	_set_digit_displayed
  7828     0CEE                     l450:
  7829     0CEE  0008               	return
  7830     0CEF                     __end_of_set_digit_displayed_all:
  7831                           
  7832                           	psect	text37
  7833     0CD9                     __ptext37:	
  7834 ;; *************** function _set_digit_displayed *****************
  7835 ;; Defined at:
  7836 ;;		line 18 in file "nixie.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  dig0            1    wreg     unsigned char 
  7839 ;;  dig1            1    2[COMMON] unsigned char 
  7840 ;;  dig2            1    3[COMMON] unsigned char 
  7841 ;;  dig3            1    4[COMMON] unsigned char 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  dig0            1    5[COMMON] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7853 ;;      Params:         3       0       0       0       0       0       0       0
  7854 ;;      Locals:         1       0       0       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0
  7856 ;;      Totals:         4       0       0       0       0       0       0       0
  7857 ;;Total ram usage:        4 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 3
  7860 ;; This function calls:
  7861 ;;		Nothing
  7862 ;; This function is called by:
  7863 ;;		_handle_set_hour
  7864 ;;		_handle_set_minute
  7865 ;;		_handle_set_day
  7866 ;;		_handle_set_month
  7867 ;;		_set_digit_displayed_all
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871     0CD9                     _set_digit_displayed:	
  7872                           ;psect for function _set_digit_displayed
  7873                           
  7874                           
  7875                           ;incstack = 0
  7876                           ; Regs used in _set_digit_displayed: [wreg]
  7877                           ;set_digit_displayed@dig0 stored from wreg
  7878     0CD9  00F5               	movwf	set_digit_displayed@dig0
  7879     0CDA                     l2116:
  7880                           
  7881                           ;nixie.c: 19:     digit_displayed[0] = dig0;
  7882     0CDA  0875               	movf	set_digit_displayed@dig0,w
  7883     0CDB  0020               	movlb	0	; select bank0
  7884     0CDC  00A0               	movwf	_digit_displayed
  7885                           
  7886                           ;nixie.c: 20:     digit_displayed[1] = dig1;
  7887     0CDD  0872               	movf	set_digit_displayed@dig1,w
  7888     0CDE  00A1               	movwf	_digit_displayed+1
  7889                           
  7890                           ;nixie.c: 21:     digit_displayed[2] = dig2;
  7891     0CDF  0873               	movf	set_digit_displayed@dig2,w
  7892     0CE0  00A2               	movwf	_digit_displayed+2
  7893                           
  7894                           ;nixie.c: 22:     digit_displayed[3] = dig3;
  7895     0CE1  0874               	movf	set_digit_displayed@dig3,w
  7896     0CE2  00A3               	movwf	_digit_displayed+3
  7897     0CE3                     l447:
  7898     0CE3  0008               	return
  7899     0CE4                     __end_of_set_digit_displayed:
  7900                           
  7901                           	psect	text38
  7902     063E                     __ptext38:	
  7903 ;; *************** function ___awmod *****************
  7904 ;; Defined at:
  7905 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  divisor         2    2[COMMON] int 
  7908 ;;  dividend        2    4[COMMON] int 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  sign            1    8[COMMON] unsigned char 
  7911 ;;  counter         1    7[COMMON] unsigned char 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  2    2[COMMON] int 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7921 ;;      Params:         4       0       0       0       0       0       0       0
  7922 ;;      Locals:         2       0       0       0       0       0       0       0
  7923 ;;      Temps:          1       0       0       0       0       0       0       0
  7924 ;;      Totals:         7       0       0       0       0       0       0       0
  7925 ;;Total ram usage:        7 bytes
  7926 ;; Hardware stack levels used: 1
  7927 ;; Hardware stack levels required when called: 3
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_set_time_digits
  7932 ;;		_set_date_digits
  7933 ;;		_update_time
  7934 ;;		_increase_hour
  7935 ;;		_increase_minute
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939     063E                     ___awmod:	
  7940                           ;psect for function ___awmod
  7941                           
  7942     063E                     l2960:	
  7943                           ;incstack = 0
  7944                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7945                           
  7946     063E  01F8               	clrf	___awmod@sign
  7947     063F                     l2962:
  7948     063F  1FF5               	btfss	___awmod@dividend+1,7
  7949     0640  2E42               	goto	u2491
  7950     0641  2E43               	goto	u2490
  7951     0642                     u2491:
  7952     0642  2E4A               	goto	l2968
  7953     0643                     u2490:
  7954     0643                     l2964:
  7955     0643  09F4               	comf	___awmod@dividend,f
  7956     0644  09F5               	comf	___awmod@dividend+1,f
  7957     0645  0AF4               	incf	___awmod@dividend,f
  7958     0646  1903               	skipnz
  7959     0647  0AF5               	incf	___awmod@dividend+1,f
  7960     0648                     l2966:
  7961     0648  01F8               	clrf	___awmod@sign
  7962     0649  0AF8               	incf	___awmod@sign,f
  7963     064A                     l2968:
  7964     064A  1FF3               	btfss	___awmod@divisor+1,7
  7965     064B  2E4D               	goto	u2501
  7966     064C  2E4E               	goto	u2500
  7967     064D                     u2501:
  7968     064D  2E53               	goto	l2972
  7969     064E                     u2500:
  7970     064E                     l2970:
  7971     064E  09F2               	comf	___awmod@divisor,f
  7972     064F  09F3               	comf	___awmod@divisor+1,f
  7973     0650  0AF2               	incf	___awmod@divisor,f
  7974     0651  1903               	skipnz
  7975     0652  0AF3               	incf	___awmod@divisor+1,f
  7976     0653                     l2972:
  7977     0653  0872               	movf	___awmod@divisor,w
  7978     0654  0473               	iorwf	___awmod@divisor+1,w
  7979     0655  1903               	btfsc	3,2
  7980     0656  2E58               	goto	u2511
  7981     0657  2E59               	goto	u2510
  7982     0658                     u2511:
  7983     0658  2E82               	goto	l2990
  7984     0659                     u2510:
  7985     0659                     l2974:
  7986     0659  01F7               	clrf	___awmod@counter
  7987     065A  0AF7               	incf	___awmod@counter,f
  7988     065B  2E65               	goto	l2980
  7989     065C                     l2976:
  7990     065C  3001               	movlw	1
  7991     065D                     u2525:
  7992     065D  35F2               	lslf	___awmod@divisor,f
  7993     065E  0DF3               	rlf	___awmod@divisor+1,f
  7994     065F  0B89               	decfsz	9,f
  7995     0660  2E5D               	goto	u2525
  7996     0661                     l2978:
  7997     0661  3001               	movlw	1
  7998     0662  00F6               	movwf	??___awmod
  7999     0663  0876               	movf	??___awmod,w
  8000     0664  07F7               	addwf	___awmod@counter,f
  8001     0665                     l2980:
  8002     0665  1FF3               	btfss	___awmod@divisor+1,7
  8003     0666  2E68               	goto	u2531
  8004     0667  2E69               	goto	u2530
  8005     0668                     u2531:
  8006     0668  2E5C               	goto	l2976
  8007     0669                     u2530:
  8008     0669                     l2982:
  8009     0669  0873               	movf	___awmod@divisor+1,w
  8010     066A  0275               	subwf	___awmod@dividend+1,w
  8011     066B  1D03               	skipz
  8012     066C  2E6F               	goto	u2545
  8013     066D  0872               	movf	___awmod@divisor,w
  8014     066E  0274               	subwf	___awmod@dividend,w
  8015     066F                     u2545:
  8016     066F  1C03               	skipc
  8017     0670  2E72               	goto	u2541
  8018     0671  2E73               	goto	u2540
  8019     0672                     u2541:
  8020     0672  2E77               	goto	l2986
  8021     0673                     u2540:
  8022     0673                     l2984:
  8023     0673  0872               	movf	___awmod@divisor,w
  8024     0674  02F4               	subwf	___awmod@dividend,f
  8025     0675  0873               	movf	___awmod@divisor+1,w
  8026     0676  3BF5               	subwfb	___awmod@dividend+1,f
  8027     0677                     l2986:
  8028     0677  3001               	movlw	1
  8029     0678                     u2555:
  8030     0678  36F3               	lsrf	___awmod@divisor+1,f
  8031     0679  0CF2               	rrf	___awmod@divisor,f
  8032     067A  0B89               	decfsz	9,f
  8033     067B  2E78               	goto	u2555
  8034     067C                     l2988:
  8035     067C  3001               	movlw	1
  8036     067D  02F7               	subwf	___awmod@counter,f
  8037     067E  1D03               	btfss	3,2
  8038     067F  2E81               	goto	u2561
  8039     0680  2E82               	goto	u2560
  8040     0681                     u2561:
  8041     0681  2E69               	goto	l2982
  8042     0682                     u2560:
  8043     0682                     l2990:
  8044     0682  0878               	movf	___awmod@sign,w
  8045     0683  1903               	btfsc	3,2
  8046     0684  2E86               	goto	u2571
  8047     0685  2E87               	goto	u2570
  8048     0686                     u2571:
  8049     0686  2E8C               	goto	l2994
  8050     0687                     u2570:
  8051     0687                     l2992:
  8052     0687  09F4               	comf	___awmod@dividend,f
  8053     0688  09F5               	comf	___awmod@dividend+1,f
  8054     0689  0AF4               	incf	___awmod@dividend,f
  8055     068A  1903               	skipnz
  8056     068B  0AF5               	incf	___awmod@dividend+1,f
  8057     068C                     l2994:
  8058     068C  0875               	movf	___awmod@dividend+1,w
  8059     068D  00F3               	movwf	?___awmod+1
  8060     068E  0874               	movf	___awmod@dividend,w
  8061     068F  00F2               	movwf	?___awmod
  8062     0690                     l1022:
  8063     0690  0008               	return
  8064     0691                     __end_of___awmod:
  8065                           
  8066                           	psect	text39
  8067     04D8                     __ptext39:	
  8068 ;; *************** function ___awdiv *****************
  8069 ;; Defined at:
  8070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  divisor         2    2[COMMON] int 
  8073 ;;  dividend        2    4[COMMON] int 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  quotient        2    2[BANK0 ] int 
  8076 ;;  sign            1    1[BANK0 ] unsigned char 
  8077 ;;  counter         1    0[BANK0 ] unsigned char 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  2    2[COMMON] int 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2, status,0
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8087 ;;      Params:         4       0       0       0       0       0       0       0
  8088 ;;      Locals:         0       4       0       0       0       0       0       0
  8089 ;;      Temps:          1       0       0       0       0       0       0       0
  8090 ;;      Totals:         5       4       0       0       0       0       0       0
  8091 ;;Total ram usage:        9 bytes
  8092 ;; Hardware stack levels used: 1
  8093 ;; Hardware stack levels required when called: 3
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_set_time_digits
  8098 ;;		_set_date_digits
  8099 ;;		_update_time
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103     04D8                     ___awdiv:	
  8104                           ;psect for function ___awdiv
  8105                           
  8106     04D8                     l2916:	
  8107                           ;incstack = 0
  8108                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8109                           
  8110     04D8  0020               	movlb	0	; select bank0
  8111     04D9  01C9               	clrf	___awdiv@sign
  8112     04DA                     l2918:
  8113     04DA  1FF3               	btfss	___awdiv@divisor+1,7
  8114     04DB  2CDD               	goto	u2391
  8115     04DC  2CDE               	goto	u2390
  8116     04DD                     u2391:
  8117     04DD  2CE5               	goto	l2924
  8118     04DE                     u2390:
  8119     04DE                     l2920:
  8120     04DE  09F2               	comf	___awdiv@divisor,f
  8121     04DF  09F3               	comf	___awdiv@divisor+1,f
  8122     04E0  0AF2               	incf	___awdiv@divisor,f
  8123     04E1  1903               	skipnz
  8124     04E2  0AF3               	incf	___awdiv@divisor+1,f
  8125     04E3                     l2922:
  8126     04E3  01C9               	clrf	___awdiv@sign
  8127     04E4  0AC9               	incf	___awdiv@sign,f
  8128     04E5                     l2924:
  8129     04E5  1FF5               	btfss	___awdiv@dividend+1,7
  8130     04E6  2CE8               	goto	u2401
  8131     04E7  2CE9               	goto	u2400
  8132     04E8                     u2401:
  8133     04E8  2CF2               	goto	l2930
  8134     04E9                     u2400:
  8135     04E9                     l2926:
  8136     04E9  09F4               	comf	___awdiv@dividend,f
  8137     04EA  09F5               	comf	___awdiv@dividend+1,f
  8138     04EB  0AF4               	incf	___awdiv@dividend,f
  8139     04EC  1903               	skipnz
  8140     04ED  0AF5               	incf	___awdiv@dividend+1,f
  8141     04EE                     l2928:
  8142     04EE  3001               	movlw	1
  8143     04EF  00F6               	movwf	??___awdiv
  8144     04F0  0876               	movf	??___awdiv,w
  8145     04F1  06C9               	xorwf	___awdiv@sign,f
  8146     04F2                     l2930:
  8147     04F2  01CA               	clrf	___awdiv@quotient
  8148     04F3  01CB               	clrf	___awdiv@quotient+1
  8149     04F4                     l2932:
  8150     04F4  0872               	movf	___awdiv@divisor,w
  8151     04F5  0473               	iorwf	___awdiv@divisor+1,w
  8152     04F6  1903               	btfsc	3,2
  8153     04F7  2CF9               	goto	u2411
  8154     04F8  2CFA               	goto	u2410
  8155     04F9                     u2411:
  8156     04F9  2D29               	goto	l2952
  8157     04FA                     u2410:
  8158     04FA                     l2934:
  8159     04FA  01C8               	clrf	___awdiv@counter
  8160     04FB  0AC8               	incf	___awdiv@counter,f
  8161     04FC  2D06               	goto	l2940
  8162     04FD                     l2936:
  8163     04FD  3001               	movlw	1
  8164     04FE                     u2425:
  8165     04FE  35F2               	lslf	___awdiv@divisor,f
  8166     04FF  0DF3               	rlf	___awdiv@divisor+1,f
  8167     0500  0B89               	decfsz	9,f
  8168     0501  2CFE               	goto	u2425
  8169     0502                     l2938:
  8170     0502  3001               	movlw	1
  8171     0503  00F6               	movwf	??___awdiv
  8172     0504  0876               	movf	??___awdiv,w
  8173     0505  07C8               	addwf	___awdiv@counter,f
  8174     0506                     l2940:
  8175     0506  1FF3               	btfss	___awdiv@divisor+1,7
  8176     0507  2D09               	goto	u2431
  8177     0508  2D0A               	goto	u2430
  8178     0509                     u2431:
  8179     0509  2CFD               	goto	l2936
  8180     050A                     u2430:
  8181     050A                     l2942:
  8182     050A  3001               	movlw	1
  8183     050B                     u2445:
  8184     050B  35CA               	lslf	___awdiv@quotient,f
  8185     050C  0DCB               	rlf	___awdiv@quotient+1,f
  8186     050D  0B89               	decfsz	9,f
  8187     050E  2D0B               	goto	u2445
  8188     050F  0873               	movf	___awdiv@divisor+1,w
  8189     0510  0275               	subwf	___awdiv@dividend+1,w
  8190     0511  1D03               	skipz
  8191     0512  2D15               	goto	u2455
  8192     0513  0872               	movf	___awdiv@divisor,w
  8193     0514  0274               	subwf	___awdiv@dividend,w
  8194     0515                     u2455:
  8195     0515  1C03               	skipc
  8196     0516  2D18               	goto	u2451
  8197     0517  2D19               	goto	u2450
  8198     0518                     u2451:
  8199     0518  2D1E               	goto	l2948
  8200     0519                     u2450:
  8201     0519                     l2944:
  8202     0519  0872               	movf	___awdiv@divisor,w
  8203     051A  02F4               	subwf	___awdiv@dividend,f
  8204     051B  0873               	movf	___awdiv@divisor+1,w
  8205     051C  3BF5               	subwfb	___awdiv@dividend+1,f
  8206     051D                     l2946:
  8207     051D  144A               	bsf	___awdiv@quotient,0
  8208     051E                     l2948:
  8209     051E  3001               	movlw	1
  8210     051F                     u2465:
  8211     051F  36F3               	lsrf	___awdiv@divisor+1,f
  8212     0520  0CF2               	rrf	___awdiv@divisor,f
  8213     0521  0B89               	decfsz	9,f
  8214     0522  2D1F               	goto	u2465
  8215     0523                     l2950:
  8216     0523  3001               	movlw	1
  8217     0524  02C8               	subwf	___awdiv@counter,f
  8218     0525  1D03               	btfss	3,2
  8219     0526  2D28               	goto	u2471
  8220     0527  2D29               	goto	u2470
  8221     0528                     u2471:
  8222     0528  2D0A               	goto	l2942
  8223     0529                     u2470:
  8224     0529                     l2952:
  8225     0529  0849               	movf	___awdiv@sign,w
  8226     052A  1903               	btfsc	3,2
  8227     052B  2D2D               	goto	u2481
  8228     052C  2D2E               	goto	u2480
  8229     052D                     u2481:
  8230     052D  2D33               	goto	l2956
  8231     052E                     u2480:
  8232     052E                     l2954:
  8233     052E  09CA               	comf	___awdiv@quotient,f
  8234     052F  09CB               	comf	___awdiv@quotient+1,f
  8235     0530  0ACA               	incf	___awdiv@quotient,f
  8236     0531  1903               	skipnz
  8237     0532  0ACB               	incf	___awdiv@quotient+1,f
  8238     0533                     l2956:
  8239     0533  084B               	movf	___awdiv@quotient+1,w
  8240     0534  00F3               	movwf	?___awdiv+1
  8241     0535  084A               	movf	___awdiv@quotient,w
  8242     0536  00F2               	movwf	?___awdiv
  8243     0537                     l1009:
  8244     0537  0008               	return
  8245     0538                     __end_of___awdiv:
  8246                           
  8247                           	psect	text40
  8248     0E1A                     __ptext40:	
  8249 ;; *************** function _add_second *****************
  8250 ;; Defined at:
  8251 ;;		line 181 in file "time.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  time            1    wreg     PTR struct Time
  8254 ;;		 -> time(9), 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  time            1    3[COMMON] PTR struct Time
  8257 ;;		 -> time(9), 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      void 
  8260 ;; Registers used:
  8261 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8267 ;;      Params:         0       0       0       0       0       0       0       0
  8268 ;;      Locals:         1       0       0       0       0       0       0       0
  8269 ;;      Temps:          1       0       0       0       0       0       0       0
  8270 ;;      Totals:         2       0       0       0       0       0       0       0
  8271 ;;Total ram usage:        2 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; Hardware stack levels required when called: 3
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_main
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281     0E1A                     _add_second:	
  8282                           ;psect for function _add_second
  8283                           
  8284                           
  8285                           ;incstack = 0
  8286                           ; Regs used in _add_second: [wreg+fsr1l+fsr1h+status,2+status,0]
  8287                           ;add_second@time stored from wreg
  8288     0E1A  00F3               	movwf	add_second@time
  8289     0E1B                     l2760:
  8290                           
  8291                           ;time.c: 182:     if (time->ss < 59)
  8292     0E1B  0873               	movf	add_second@time,w
  8293     0E1C  3E04               	addlw	4
  8294     0E1D  0086               	movwf	6
  8295     0E1E  0187               	clrf	7
  8296     0E1F  303B               	movlw	59
  8297     0E20  0201               	subwf	1,w
  8298     0E21  1803               	skipnc
  8299     0E22  2E24               	goto	u2271
  8300     0E23  2E25               	goto	u2270
  8301     0E24                     u2271:
  8302     0E24  2E2E               	goto	l2764
  8303     0E25                     u2270:
  8304     0E25                     l2762:
  8305                           
  8306                           ;time.c: 183:         time->ss++;
  8307     0E25  3001               	movlw	1
  8308     0E26  00F2               	movwf	??_add_second
  8309     0E27  0873               	movf	add_second@time,w
  8310     0E28  3E04               	addlw	4
  8311     0E29  0086               	movwf	6
  8312     0E2A  0187               	clrf	7
  8313     0E2B  0872               	movf	??_add_second,w
  8314     0E2C  0781               	addwf	1,f
  8315     0E2D  2E33               	goto	l706
  8316     0E2E                     l2764:
  8317                           
  8318                           ;time.c: 185:         time->ss = 0;
  8319     0E2E  0873               	movf	add_second@time,w
  8320     0E2F  3E04               	addlw	4
  8321     0E30  0086               	movwf	6
  8322     0E31  0187               	clrf	7
  8323     0E32  0181               	clrf	1
  8324     0E33                     l706:
  8325     0E33  0008               	return
  8326     0E34                     __end_of_add_second:
  8327                           
  8328                           	psect	text41
  8329     0D37                     __ptext41:	
  8330 ;; *************** function _SYSTEM_Initialize *****************
  8331 ;; Defined at:
  8332 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, pclath, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8346 ;;      Params:         0       0       0       0       0       0       0       0
  8347 ;;      Locals:         0       0       0       0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0
  8349 ;;      Totals:         0       0       0       0       0       0       0       0
  8350 ;;Total ram usage:        0 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; Hardware stack levels required when called: 5
  8353 ;; This function calls:
  8354 ;;		_EPWM1_Initialize
  8355 ;;		_OSCILLATOR_Initialize
  8356 ;;		_PIN_MANAGER_Initialize
  8357 ;;		_TMR1_Initialize
  8358 ;;		_TMR2_Initialize
  8359 ;;		_WDT_Initialize
  8360 ;; This function is called by:
  8361 ;;		_main
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365     0D37                     _SYSTEM_Initialize:	
  8366                           ;psect for function _SYSTEM_Initialize
  8367                           
  8368     0D37                     l2682:	
  8369                           ;incstack = 0
  8370                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8371                           
  8372                           
  8373                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8374     0D37  318E  2683  318D   	fcall	_PIN_MANAGER_Initialize
  8375                           
  8376                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8377     0D3A  318C  24CA  318D   	fcall	_OSCILLATOR_Initialize
  8378                           
  8379                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8380     0D3D  318C  24B4  318D   	fcall	_WDT_Initialize
  8381                           
  8382                           ;mcc_generated_files/mcc.c: 56:     EPWM1_Initialize();
  8383     0D40  318C  24FB  318D   	fcall	_EPWM1_Initialize
  8384                           
  8385                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  8386     0D43  318C  24D1  318D   	fcall	_TMR2_Initialize
  8387                           
  8388                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  8389     0D46  318D  2587  318D   	fcall	_TMR1_Initialize
  8390     0D49                     l23:
  8391     0D49  0008               	return
  8392     0D4A                     __end_of_SYSTEM_Initialize:
  8393                           
  8394                           	psect	text42
  8395     0CB4                     __ptext42:	
  8396 ;; *************** function _WDT_Initialize *****************
  8397 ;; Defined at:
  8398 ;;		line 71 in file "mcc_generated_files/mcc.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;		None
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;		None
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8412 ;;      Params:         0       0       0       0       0       0       0       0
  8413 ;;      Locals:         0       0       0       0       0       0       0       0
  8414 ;;      Temps:          0       0       0       0       0       0       0       0
  8415 ;;      Totals:         0       0       0       0       0       0       0       0
  8416 ;;Total ram usage:        0 bytes
  8417 ;; Hardware stack levels used: 1
  8418 ;; Hardware stack levels required when called: 3
  8419 ;; This function calls:
  8420 ;;		Nothing
  8421 ;; This function is called by:
  8422 ;;		_SYSTEM_Initialize
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426     0CB4                     _WDT_Initialize:	
  8427                           ;psect for function _WDT_Initialize
  8428                           
  8429     0CB4                     l2442:	
  8430                           ;incstack = 0
  8431                           ; Regs used in _WDT_Initialize: [wreg]
  8432                           
  8433                           
  8434                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  8435     0CB4  3016               	movlw	22
  8436     0CB5  0021               	movlb	1	; select bank1
  8437     0CB6  0097               	movwf	23	;volatile
  8438     0CB7                     l29:
  8439     0CB7  0008               	return
  8440     0CB8                     __end_of_WDT_Initialize:
  8441                           
  8442                           	psect	text43
  8443     0CD1                     __ptext43:	
  8444 ;; *************** function _TMR2_Initialize *****************
  8445 ;; Defined at:
  8446 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;		None
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8460 ;;      Params:         0       0       0       0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0
  8463 ;;      Totals:         0       0       0       0       0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used: 1
  8466 ;; Hardware stack levels required when called: 3
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_SYSTEM_Initialize
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474     0CD1                     _TMR2_Initialize:	
  8475                           ;psect for function _TMR2_Initialize
  8476                           
  8477     0CD1                     l2456:	
  8478                           ;incstack = 0
  8479                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8480                           
  8481                           
  8482                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x4A;
  8483     0CD1  304A               	movlw	74
  8484     0CD2  0020               	movlb	0	; select bank0
  8485     0CD3  009B               	movwf	27	;volatile
  8486     0CD4                     l2458:
  8487                           
  8488                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8489     0CD4  019A               	clrf	26	;volatile
  8490     0CD5                     l2460:
  8491                           
  8492                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8493     0CD5  1091               	bcf	17,1	;volatile
  8494     0CD6                     l2462:
  8495                           
  8496                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  8497     0CD6  3004               	movlw	4
  8498     0CD7  009C               	movwf	28	;volatile
  8499     0CD8                     l76:
  8500     0CD8  0008               	return
  8501     0CD9                     __end_of_TMR2_Initialize:
  8502                           
  8503                           	psect	text44
  8504     0D87                     __ptext44:	
  8505 ;; *************** function _TMR1_Initialize *****************
  8506 ;; Defined at:
  8507 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2, status,0, pclath, cstack
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8521 ;;      Params:         0       0       0       0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used: 1
  8527 ;; Hardware stack levels required when called: 4
  8528 ;; This function calls:
  8529 ;;		_TMR1_SetInterruptHandler
  8530 ;; This function is called by:
  8531 ;;		_SYSTEM_Initialize
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535     0D87                     _TMR1_Initialize:	
  8536                           ;psect for function _TMR1_Initialize
  8537                           
  8538     0D87                     l2464:	
  8539                           ;incstack = 0
  8540                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8541                           
  8542                           
  8543                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  8544     0D87  0020               	movlb	0	; select bank0
  8545     0D88  0199               	clrf	25	;volatile
  8546     0D89                     l2466:
  8547                           
  8548                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xF6;
  8549     0D89  30F6               	movlw	246
  8550     0D8A  0097               	movwf	23	;volatile
  8551     0D8B                     l2468:
  8552                           
  8553                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x3C;
  8554     0D8B  303C               	movlw	60
  8555     0D8C  0096               	movwf	22	;volatile
  8556     0D8D                     l2470:
  8557                           
  8558                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  8559     0D8D  1011               	bcf	17,0	;volatile
  8560     0D8E                     l2472:
  8561                           
  8562                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8563     0D8E  0817               	movf	23,w	;volatile
  8564     0D8F  00AD               	movwf	_timer1ReloadVal+1	;volatile
  8565     0D90  0816               	movf	22,w	;volatile
  8566     0D91  00AC               	movwf	_timer1ReloadVal	;volatile
  8567     0D92                     l2474:
  8568                           
  8569                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  8570     0D92  0021               	movlb	1	; select bank1
  8571     0D93  1411               	bsf	17,0	;volatile
  8572     0D94                     l2476:
  8573                           
  8574                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8575     0D94  3003               	movlw	low _TMR1_DefaultInterruptHandler
  8576     0D95  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8577     0D96  3000               	movlw	high _TMR1_DefaultInterruptHandler
  8578     0D97  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8579     0D98  318C  24B8  318D   	fcall	_TMR1_SetInterruptHandler
  8580     0D9B                     l2478:
  8581                           
  8582                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  8583     0D9B  3001               	movlw	1
  8584     0D9C  0020               	movlb	0	; select bank0
  8585     0D9D  0098               	movwf	24	;volatile
  8586     0D9E                     l142:
  8587     0D9E  0008               	return
  8588     0D9F                     __end_of_TMR1_Initialize:
  8589                           
  8590                           	psect	text45
  8591     0CB8                     __ptext45:	
  8592 ;; *************** function _TMR1_SetInterruptHandler *****************
  8593 ;; Defined at:
  8594 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  8597 ;;		 -> tmr1_ISR(1), TMR1_DefaultInterruptHandler(1), 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;		None
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8609 ;;      Params:         2       0       0       0       0       0       0       0
  8610 ;;      Locals:         0       0       0       0       0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0
  8612 ;;      Totals:         2       0       0       0       0       0       0       0
  8613 ;;Total ram usage:        2 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 3
  8616 ;; This function calls:
  8617 ;;		Nothing
  8618 ;; This function is called by:
  8619 ;;		_TMR1_Initialize
  8620 ;;		_main
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624     0CB8                     _TMR1_SetInterruptHandler:	
  8625                           ;psect for function _TMR1_SetInterruptHandler
  8626                           
  8627     0CB8                     l2238:	
  8628                           ;incstack = 0
  8629                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8630                           
  8631                           
  8632                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  8633     0CB8  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  8634     0CB9  0020               	movlb	0	; select bank0
  8635     0CBA  00DF               	movwf	_TMR1_InterruptHandler+1
  8636     0CBB  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  8637     0CBC  00DE               	movwf	_TMR1_InterruptHandler
  8638     0CBD                     l172:
  8639     0CBD  0008               	return
  8640     0CBE                     __end_of_TMR1_SetInterruptHandler:
  8641                           
  8642                           	psect	text46
  8643     0E83                     __ptext46:	
  8644 ;; *************** function _PIN_MANAGER_Initialize *****************
  8645 ;; Defined at:
  8646 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8660 ;;      Params:         0       0       0       0       0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0
  8663 ;;      Totals:         0       0       0       0       0       0       0       0
  8664 ;;Total ram usage:        0 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 3
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_SYSTEM_Initialize
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674     0E83                     _PIN_MANAGER_Initialize:	
  8675                           ;psect for function _PIN_MANAGER_Initialize
  8676                           
  8677     0E83                     l2416:	
  8678                           ;incstack = 0
  8679                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8680                           
  8681                           
  8682                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8683     0E83  0022               	movlb	2	; select bank2
  8684     0E84  0190               	clrf	16	;volatile
  8685                           
  8686                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  8687     0E85  018C               	clrf	12	;volatile
  8688                           
  8689                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  8690     0E86  018D               	clrf	13	;volatile
  8691                           
  8692                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  8693     0E87  018E               	clrf	14	;volatile
  8694     0E88                     l2418:
  8695                           
  8696                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  8697     0E88  3008               	movlw	8
  8698     0E89  0021               	movlb	1	; select bank1
  8699     0E8A  0090               	movwf	16	;volatile
  8700     0E8B                     l2420:
  8701                           
  8702                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x3C;
  8703     0E8B  303C               	movlw	60
  8704     0E8C  008C               	movwf	12	;volatile
  8705     0E8D                     l2422:
  8706                           
  8707                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xE1;
  8708     0E8D  30E1               	movlw	225
  8709     0E8E  008D               	movwf	13	;volatile
  8710     0E8F                     l2424:
  8711                           
  8712                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xCB;
  8713     0E8F  30CB               	movlw	203
  8714     0E90  008E               	movwf	14	;volatile
  8715     0E91                     l2426:
  8716                           
  8717                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x1F;
  8718     0E91  301F               	movlw	31
  8719     0E92  0023               	movlb	3	; select bank3
  8720     0E93  008D               	movwf	13	;volatile
  8721     0E94                     l2428:
  8722                           
  8723                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  8724     0E94  303F               	movlw	63
  8725     0E95  008C               	movwf	12	;volatile
  8726                           
  8727                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  8728     0E96  0024               	movlb	4	; select bank4
  8729     0E97  0190               	clrf	16	;volatile
  8730     0E98                     l2430:
  8731                           
  8732                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0xE0;
  8733     0E98  30E0               	movlw	224
  8734     0E99  008D               	movwf	13	;volatile
  8735     0E9A                     l2432:
  8736                           
  8737                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 0;
  8738     0E9A  0021               	movlb	1	; select bank1
  8739     0E9B  1395               	bcf	21,7	;volatile
  8740     0E9C                     l2434:
  8741                           
  8742                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  8743     0E9C  0022               	movlb	2	; select bank2
  8744     0E9D  019D               	clrf	29	;volatile
  8745     0E9E                     l60:
  8746     0E9E  0008               	return
  8747     0E9F                     __end_of_PIN_MANAGER_Initialize:
  8748                           
  8749                           	psect	text47
  8750     0CCA                     __ptext47:	
  8751 ;; *************** function _OSCILLATOR_Initialize *****************
  8752 ;; Defined at:
  8753 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8767 ;;      Params:         0       0       0       0       0       0       0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0
  8770 ;;      Totals:         0       0       0       0       0       0       0       0
  8771 ;;Total ram usage:        0 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; Hardware stack levels required when called: 3
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_SYSTEM_Initialize
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781     0CCA                     _OSCILLATOR_Initialize:	
  8782                           ;psect for function _OSCILLATOR_Initialize
  8783                           
  8784     0CCA                     l2436:	
  8785                           ;incstack = 0
  8786                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8787                           
  8788                           
  8789                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x68;
  8790     0CCA  3068               	movlw	104
  8791     0CCB  0021               	movlb	1	; select bank1
  8792     0CCC  0099               	movwf	25	;volatile
  8793     0CCD                     l2438:
  8794                           
  8795                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  8796     0CCD  0198               	clrf	24	;volatile
  8797     0CCE                     l2440:
  8798                           
  8799                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  8800     0CCE  0022               	movlb	2	; select bank2
  8801     0CCF  0196               	clrf	22	;volatile
  8802     0CD0                     l26:
  8803     0CD0  0008               	return
  8804     0CD1                     __end_of_OSCILLATOR_Initialize:
  8805                           
  8806                           	psect	text48
  8807     0CFB                     __ptext48:	
  8808 ;; *************** function _EPWM1_Initialize *****************
  8809 ;; Defined at:
  8810 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;		None
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;		None
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8824 ;;      Params:         0       0       0       0       0       0       0       0
  8825 ;;      Locals:         0       0       0       0       0       0       0       0
  8826 ;;      Temps:          0       0       0       0       0       0       0       0
  8827 ;;      Totals:         0       0       0       0       0       0       0       0
  8828 ;;Total ram usage:        0 bytes
  8829 ;; Hardware stack levels used: 1
  8830 ;; Hardware stack levels required when called: 3
  8831 ;; This function calls:
  8832 ;;		Nothing
  8833 ;; This function is called by:
  8834 ;;		_SYSTEM_Initialize
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838     0CFB                     _EPWM1_Initialize:	
  8839                           ;psect for function _EPWM1_Initialize
  8840                           
  8841     0CFB                     l2444:	
  8842                           ;incstack = 0
  8843                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  8844                           
  8845                           
  8846                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x2C;
  8847     0CFB  302C               	movlw	44
  8848     0CFC  0025               	movlb	5	; select bank5
  8849     0CFD  0093               	movwf	19	;volatile
  8850     0CFE                     l2446:
  8851                           
  8852                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8853     0CFE  0195               	clrf	21	;volatile
  8854     0CFF                     l2448:
  8855                           
  8856                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  8857     0CFF  3080               	movlw	128
  8858     0D00  0094               	movwf	20	;volatile
  8859     0D01                     l2450:
  8860                           
  8861                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  8862     0D01  3001               	movlw	1
  8863     0D02  0096               	movwf	22	;volatile
  8864     0D03                     l2452:
  8865                           
  8866                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8867     0D03  0192               	clrf	18	;volatile
  8868                           
  8869                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x45;
  8870     0D04  3045               	movlw	69
  8871     0D05  0091               	movwf	17	;volatile
  8872     0D06                     l2454:
  8873                           
  8874                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  8875     0D06  30FC               	movlw	-4
  8876     0D07  059E               	andwf	30,f	;volatile
  8877     0D08                     l112:
  8878     0D08  0008               	return
  8879     0D09                     __end_of_EPWM1_Initialize:
  8880                           
  8881                           	psect	intentry
  8882     0004                     __pintentry:	
  8883 ;; *************** function _INTERRUPT_InterruptManager *****************
  8884 ;; Defined at:
  8885 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;		None
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;		None
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2, status,0, pclath, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8899 ;;      Params:         0       0       0       0       0       0       0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0
  8902 ;;      Totals:         0       0       0       0       0       0       0       0
  8903 ;;Total ram usage:        0 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 2
  8906 ;; This function calls:
  8907 ;;		_TMR1_ISR
  8908 ;; This function is called by:
  8909 ;;		Interrupt level 1
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913     0004                     _INTERRUPT_InterruptManager:
  8914                           
  8915                           ;incstack = 0
  8916     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8917                           
  8918                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8919     0005  3180               	pagesel	$
  8920     0006                     i1l2768:
  8921                           
  8922                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8923     0006  1F0B               	btfss	11,6	;volatile
  8924     0007  2809               	goto	u228_21
  8925     0008  280A               	goto	u228_20
  8926     0009                     u228_21:
  8927     0009  2817               	goto	i1l192
  8928     000A                     u228_20:
  8929     000A                     i1l2770:
  8930                           
  8931                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  8932     000A  0021               	movlb	1	; select bank1
  8933     000B  1C11               	btfss	17,0	;volatile
  8934     000C  280E               	goto	u229_21
  8935     000D  280F               	goto	u229_20
  8936     000E                     u229_21:
  8937     000E  2817               	goto	i1l192
  8938     000F                     u229_20:
  8939     000F                     i1l2772:
  8940     000F  0020               	movlb	0	; select bank0
  8941     0010  1C11               	btfss	17,0	;volatile
  8942     0011  2813               	goto	u230_21
  8943     0012  2814               	goto	u230_20
  8944     0013                     u230_21:
  8945     0013  2817               	goto	i1l192
  8946     0014                     u230_20:
  8947     0014                     i1l2774:
  8948                           
  8949                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  8950     0014  3187  27EA  3180   	fcall	_TMR1_ISR
  8951     0017                     i1l192:	
  8952                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8953                           
  8954     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8955     0018  0009               	retfie
  8956     0019                     __end_of_INTERRUPT_InterruptManager:
  8957                           
  8958                           	psect	text50
  8959     07EA                     __ptext50:	
  8960 ;; *************** function _TMR1_ISR *****************
  8961 ;; Defined at:
  8962 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8976 ;;      Params:         0       0       0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0
  8979 ;;      Totals:         0       0       0       0       0       0       0       0
  8980 ;;Total ram usage:        0 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 1
  8983 ;; This function calls:
  8984 ;;		NULL
  8985 ;;		_TMR1_DefaultInterruptHandler
  8986 ;;		_TMR1_WriteTimer
  8987 ;;		_tmr1_ISR
  8988 ;; This function is called by:
  8989 ;;		_INTERRUPT_InterruptManager
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993     07EA                     _TMR1_ISR:	
  8994                           ;psect for function _TMR1_ISR
  8995                           
  8996     07EA                     i1l2684:	
  8997                           ;incstack = 0
  8998                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8999                           
  9000                           
  9001                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  9002     07EA  0020               	movlb	0	; select bank0
  9003     07EB  1011               	bcf	17,0	;volatile
  9004     07EC                     i1l2686:
  9005                           
  9006                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  9007     07EC  082D               	movf	_timer1ReloadVal+1,w	;volatile
  9008     07ED  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9009     07EE  082C               	movf	_timer1ReloadVal,w	;volatile
  9010     07EF  00F0               	movwf	TMR1_WriteTimer@timerVal
  9011     07F0  318D  2526  3187   	fcall	_TMR1_WriteTimer
  9012     07F3                     i1l2688:
  9013                           
  9014                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  9015     07F3  0020               	movlb	0	; select bank0
  9016     07F4  085E               	movf	_TMR1_InterruptHandler,w
  9017     07F5  045F               	iorwf	_TMR1_InterruptHandler+1,w
  9018     07F6  1903               	btfsc	3,2
  9019     07F7  2FF9               	goto	u214_21
  9020     07F8  2FFA               	goto	u214_20
  9021     07F9                     u214_21:
  9022     07F9  2FFF               	goto	i1l169
  9023     07FA                     u214_20:
  9024     07FA                     i1l2690:
  9025                           
  9026                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  9027     07FA  085F               	movf	_TMR1_InterruptHandler+1,w
  9028     07FB  008A               	movwf	10
  9029     07FC  085E               	movf	_TMR1_InterruptHandler,w
  9030     07FD  000A               	callw
  9031     07FE  3187               	pagesel	$
  9032     07FF                     i1l169:
  9033     07FF  0008               	return
  9034     0800                     __end_of_TMR1_ISR:
  9035                           
  9036                           	psect	text51
  9037     0003                     __ptext51:	
  9038 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9039 ;; Defined at:
  9040 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		None
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9054 ;;      Params:         0       0       0       0       0       0       0       0
  9055 ;;      Locals:         0       0       0       0       0       0       0       0
  9056 ;;      Temps:          0       0       0       0       0       0       0       0
  9057 ;;      Totals:         0       0       0       0       0       0       0       0
  9058 ;;Total ram usage:        0 bytes
  9059 ;; Hardware stack levels used: 1
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_TMR1_Initialize
  9064 ;;		_TMR1_ISR
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068     0003                     _TMR1_DefaultInterruptHandler:	
  9069                           ;psect for function _TMR1_DefaultInterruptHandler
  9070                           
  9071     0003                     i1l175:	
  9072                           ;incstack = 0
  9073                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9074                           
  9075     0003  0008               	return
  9076     0004                     __end_of_TMR1_DefaultInterruptHandler:
  9077                           
  9078                           	psect	text52
  9079     0D4A                     __ptext52:	
  9080 ;; *************** function _tmr1_ISR *****************
  9081 ;; Defined at:
  9082 ;;		line 77 in file "main.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;		None
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;		None
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		wreg, status,2, status,0
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9096 ;;      Params:         0       0       0       0       0       0       0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0
  9099 ;;      Totals:         0       0       0       0       0       0       0       0
  9100 ;;Total ram usage:        0 bytes
  9101 ;; Hardware stack levels used: 1
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_main
  9106 ;;		_TMR1_ISR
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110     0D4A                     _tmr1_ISR:	
  9111                           ;psect for function _tmr1_ISR
  9112                           
  9113     0D4A                     i1l2494:	
  9114                           ;incstack = 0
  9115                           ; Regs used in _tmr1_ISR: [wreg+status,2+status,0]
  9116                           
  9117                           
  9118                           ;main.c: 78:     timer_ticked = 1;
  9119     0D4A  3001               	movlw	1
  9120     0D4B  0020               	movlb	0	; select bank0
  9121     0D4C  00AF               	movwf	_timer_ticked	;volatile
  9122     0D4D                     i1l2496:
  9123                           
  9124                           ;main.c: 79:     if (timer_count == 400 - 1) {
  9125     0D4D  308F               	movlw	143
  9126     0D4E  062A               	xorwf	_timer_count,w	;volatile
  9127     0D4F  1D03               	skipz
  9128     0D50  2D55               	goto	u187_21
  9129     0D51  032B               	decf	_timer_count+1,w	;volatile
  9130     0D52  1D03               	btfss	3,2
  9131     0D53  2D55               	goto	u187_21
  9132     0D54  2D56               	goto	u187_20
  9133     0D55                     u187_21:
  9134     0D55  2D59               	goto	i1l2500
  9135     0D56                     u187_20:
  9136     0D56                     i1l2498:
  9137                           
  9138                           ;main.c: 80:         timer_count = 0;
  9139     0D56  01AA               	clrf	_timer_count	;volatile
  9140     0D57  01AB               	clrf	_timer_count+1	;volatile
  9141                           
  9142                           ;main.c: 81:     } else {
  9143     0D58  2D5D               	goto	i1l257
  9144     0D59                     i1l2500:
  9145                           
  9146                           ;main.c: 82:         timer_count++;
  9147     0D59  3001               	movlw	1
  9148     0D5A  07AA               	addwf	_timer_count,f	;volatile
  9149     0D5B  3000               	movlw	0
  9150     0D5C  3DAB               	addwfc	_timer_count+1,f	;volatile
  9151     0D5D                     i1l257:
  9152     0D5D  0008               	return
  9153     0D5E                     __end_of_tmr1_ISR:
  9154                           
  9155                           	psect	text53
  9156     0D26                     __ptext53:	
  9157 ;; *************** function _TMR1_WriteTimer *****************
  9158 ;; Defined at:
  9159 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;  timerVal        2    0[COMMON] unsigned short 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9173 ;;      Params:         2       0       0       0       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0
  9176 ;;      Totals:         2       0       0       0       0       0       0       0
  9177 ;;Total ram usage:        2 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; This function calls:
  9180 ;;		Nothing
  9181 ;; This function is called by:
  9182 ;;		_TMR1_ISR
  9183 ;;		_TMR1_Reload
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187     0D26                     _TMR1_WriteTimer:	
  9188                           ;psect for function _TMR1_WriteTimer
  9189                           
  9190     0D26                     i1l2480:	
  9191                           ;incstack = 0
  9192                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9193                           
  9194                           
  9195                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  9196     0D26  0020               	movlb	0	; select bank0
  9197     0D27  1D18               	btfss	24,2	;volatile
  9198     0D28  2D2A               	goto	u186_21
  9199     0D29  2D2B               	goto	u186_20
  9200     0D2A                     u186_21:
  9201     0D2A  2D32               	goto	i1l2490
  9202     0D2B                     u186_20:
  9203     0D2B                     i1l2482:
  9204                           
  9205                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  9206     0D2B  1018               	bcf	24,0	;volatile
  9207     0D2C                     i1l2484:
  9208                           
  9209                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  9210     0D2C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9211     0D2D  0097               	movwf	23	;volatile
  9212     0D2E                     i1l2486:
  9213                           
  9214                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  9215     0D2E  0870               	movf	TMR1_WriteTimer@timerVal,w
  9216     0D2F  0096               	movwf	22	;volatile
  9217     0D30                     i1l2488:
  9218                           
  9219                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  9220     0D30  1418               	bsf	24,0	;volatile
  9221                           
  9222                           ;mcc_generated_files/tmr1.c: 133:     }
  9223     0D31  2D36               	goto	i1l156
  9224     0D32                     i1l2490:
  9225                           
  9226                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9227     0D32  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9228     0D33  0097               	movwf	23	;volatile
  9229     0D34                     i1l2492:
  9230                           
  9231                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  9232     0D34  0870               	movf	TMR1_WriteTimer@timerVal,w
  9233     0D35  0096               	movwf	22	;volatile
  9234     0D36                     i1l156:
  9235     0D36  0008               	return
  9236     0D37                     __end_of_TMR1_WriteTimer:
  9237     007E                     btemp	set	126	;btemp
  9238     007E                     int$flags	set	126
  9239     007E                     wtemp0	set	126
  9240                           
  9241                           	psect	idloc
  9242                           
  9243                           ;Config register IDLOC0 @ 0x8000
  9244                           ;	unspecified, using default values
  9245     8000                     	org	32768
  9246     8000  3FFF               	dw	16383
  9247                           
  9248                           ;Config register IDLOC1 @ 0x8001
  9249                           ;	unspecified, using default values
  9250     8001                     	org	32769
  9251     8001  3FFF               	dw	16383
  9252                           
  9253                           ;Config register IDLOC2 @ 0x8002
  9254                           ;	unspecified, using default values
  9255     8002                     	org	32770
  9256     8002  3FFF               	dw	16383
  9257                           
  9258                           ;Config register IDLOC3 @ 0x8003
  9259                           ;	unspecified, using default values
  9260     8003                     	org	32771
  9261     8003  3FFF               	dw	16383
  9262                           
  9263                           	psect	config
  9264                           
  9265                           ;Config register CONFIG1 @ 0x8007
  9266                           ;	Oscillator Selection
  9267                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9268                           ;	Watchdog Timer Enable
  9269                           ;	WDTE = OFF, WDT disabled
  9270                           ;	Power-up Timer Enable
  9271                           ;	PWRTE = OFF, PWRT disabled
  9272                           ;	MCLR Pin Function Select
  9273                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9274                           ;	Flash Program Memory Code Protection
  9275                           ;	CP = OFF, Program memory code protection is disabled
  9276                           ;	Data Memory Code Protection
  9277                           ;	CPD = OFF, Data memory code protection is disabled
  9278                           ;	Brown-out Reset Enable
  9279                           ;	BOREN = ON, Brown-out Reset enabled
  9280                           ;	Clock Out Enable
  9281                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9282                           ;	Internal/External Switchover
  9283                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9284                           ;	Fail-Safe Clock Monitor Enable
  9285                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9286     8007                     	org	32775
  9287     8007  3FE4               	dw	16356
  9288                           
  9289                           ;Config register CONFIG2 @ 0x8008
  9290                           ;	Flash Memory Self-Write Protection
  9291                           ;	WRT = OFF, Write protection off
  9292                           ;	Voltage Regulator Capacitor Enable
  9293                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  9294                           ;	PLL Enable
  9295                           ;	PLLEN = OFF, 4x PLL disabled
  9296                           ;	Stack Overflow/Underflow Reset Enable
  9297                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9298                           ;	Brown-out Reset Voltage Selection
  9299                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9300                           ;	Low-Voltage Programming Enable
  9301                           ;	LVP = ON, Low-voltage programming enabled
  9302     8008                     	org	32776
  9303     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    add_second@time	PTR struct Time size(1) Largest target is 9
		 -> time(BANK0[9]), 

    copy_time_fields@src_time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), time(BANK0[9]), 

    copy_time_fields@dest_time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), time(BANK0[9]), 

    decrease_month@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    increase_month@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    decrease_date@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    increase_date@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    decrease_minute@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    increase_minute@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    decrease_hour@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    increase_hour@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    update_time@time	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), 

    read_time@time	PTR struct Time size(1) Largest target is 9
		 -> time(BANK0[9]), 

    read_button@btn	PTR struct Button size(1) Largest target is 2
		 -> btn3(BANK0[2]), btn2(BANK0[2]), btn1(BANK0[2]), 

    i2c_rd_bytes@byte_arr	PTR unsigned char  size(1) Largest target is 7
		 -> read_time@reg_arr(BANK0[7]), 

    i2c_wr_bytes@byte_arr	PTR unsigned char  size(1) Largest target is 7
		 -> update_time@reg_arr(BANK0[7]), 

    bit_in@data	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_rd@ret(COMMON[1]), i2c_wr@ack(COMMON[1]), 

    set_date_digits@tm	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), time(BANK0[9]), 

    set_time_digits@tm	PTR struct Time size(1) Largest target is 9
		 -> updated_time(BANK0[9]), time(BANK0[9]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_ISR(), NULL(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _refresh_digits->_on_digit
    _read_time->_i2c_rd_bytes
    _i2c_rd_bytes->_i2c_rd
    _i2c_rd->_bit_in
    _i2c_rd->_bit_out
    _read_buttons->_read_button
    _update_time->_i2c_wr_bytes
    _i2c_wr_bytes->_i2c_wr
    _i2c_wr->_bit_in
    _i2c_wr->_bit_out
    _handle_set_minute->_increase_minute
    _increase_minute->___awmod
    _handle_set_hour->_increase_hour
    _increase_hour->___awmod
    _set_date_digits->_set_digits
    _set_time_digits->_set_digits
    _set_digits->___awmod
    _set_digit_displayed_all->_set_digit_displayed
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_handle_state
    _read_time->_i2c_rd_bytes
    _handle_set_month->_update_time
    _update_time->___awdiv
    _handle_set_minute->_set_date_digits
    _handle_set_minute->_set_time_digits
    _handle_set_hour->_set_time_digits
    _handle_set_day->_set_date_digits
    _handle_display_time->_set_date_digits
    _handle_display_time->_set_time_digits
    _set_date_digits->_set_digits
    _handle_display_date->_set_time_digits
    _set_time_digits->_set_digits
    _set_digits->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  102737
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                         _add_second
                       _handle_state
                       _read_buttons
                          _read_time
                     _refresh_digits
                    _set_time_digits
 ---------------------------------------------------------------------------------
 (1) _refresh_digits                                       0     0      0      44
                         _off_digits
                           _on_digit
 ---------------------------------------------------------------------------------
 (2) _on_digit                                             3     3      0      44
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _off_digits                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_time                                           10    10      0    2622
                                              4 BANK0     10    10      0
                             ___bmul
                       _i2c_rd_bytes
                          _i2c_start
                           _i2c_stop
                             _i2c_wr
 ---------------------------------------------------------------------------------
 (2) _i2c_rd_bytes                                         5     4      1     656
                                              8 COMMON     1     0      1
                                              0 BANK0      4     4      0
                             _i2c_rd
 ---------------------------------------------------------------------------------
 (3) _i2c_rd                                               4     4      0     338
                                              4 COMMON     4     4      0
                             _bit_in
                            _bit_out
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     624
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _read_buttons                                         0     0      0     613
                        _read_button
 ---------------------------------------------------------------------------------
 (2) _read_button                                          4     3      1     613
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _handle_state                                         2     2      0   91593
                                             20 BANK0      2     2      0
                _handle_display_date
                _handle_display_time
                     _handle_set_day
                    _handle_set_hour
                  _handle_set_minute
                   _handle_set_month
 ---------------------------------------------------------------------------------
 (2) _handle_set_month                                     0     0      0   24937
                   _copy_time_fields
                     _decrease_month
                     _increase_month
                    _set_date_digits
                _set_digit_displayed
            _set_digit_displayed_all
                    _set_time_digits
                        _update_time
 ---------------------------------------------------------------------------------
 (3) _update_time                                         16    16      0    6941
                                              4 BANK0     16    16      0
                            ___awdiv
                            ___awmod
                          _i2c_start
                           _i2c_stop
                             _i2c_wr
                       _i2c_wr_bytes
 ---------------------------------------------------------------------------------
 (4) _i2c_wr_bytes                                         4     3      1     570
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                             _i2c_wr
 ---------------------------------------------------------------------------------
 (2) _i2c_wr                                               4     4      0     314
                                              4 COMMON     4     4      0
                             _bit_in
                            _bit_out
 ---------------------------------------------------------------------------------
 (3) _bit_out                                              2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _bit_in                                               2     2      0     103
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _increase_month                                       2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _decrease_month                                       1     1      0      99
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _handle_set_minute                                    0     0      0   20154
                    _decrease_minute
                    _increase_minute
                    _set_date_digits
                _set_digit_displayed
            _set_digit_displayed_all
                    _set_time_digits
 ---------------------------------------------------------------------------------
 (3) _increase_minute                                      1     1      0    2871
                                              9 COMMON     1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _decrease_minute                                      1     1      0      99
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _handle_set_hour                                      0     0      0   13162
                      _decrease_hour
                      _increase_hour
                _set_digit_displayed
            _set_digit_displayed_all
                    _set_time_digits
 ---------------------------------------------------------------------------------
 (3) _increase_hour                                        2     2      0    3057
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _decrease_hour                                        1     1      0     231
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _handle_set_day                                       0     0      0   10580
                      _decrease_date
                      _increase_date
                    _set_date_digits
                _set_digit_displayed
            _set_digit_displayed_all
 ---------------------------------------------------------------------------------
 (3) _increase_date                                        2     2      0     407
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _decrease_date                                        1     1      0     407
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _handle_display_time                                  0     0      0   15342
                   _copy_time_fields
                    _set_date_digits
                    _set_time_digits
 ---------------------------------------------------------------------------------
 (3) _set_date_digits                                      9     9      0    7310
                                              7 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                         _set_digits
 ---------------------------------------------------------------------------------
 (3) _copy_time_fields                                     2     1      1     614
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _handle_display_date                                  0     0      0    7418
                    _set_time_digits
 ---------------------------------------------------------------------------------
 (1) _set_time_digits                                      9     9      0    7418
                                              7 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                         _set_digits
 ---------------------------------------------------------------------------------
 (2) _set_digits                                           4     1      3    1772
                                              9 COMMON     1     1      0
                                              4 BANK0      3     0      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
            _set_digit_displayed_all
 ---------------------------------------------------------------------------------
 (3) _set_digit_displayed_all                              0     0      0    1228
                _set_digit_displayed
 ---------------------------------------------------------------------------------
 (4) _set_digit_displayed                                  4     1      3    1228
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    2773
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2425
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _add_second                                           2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                   _EPWM1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                           _tmr1_ISR *
 ---------------------------------------------------------------------------------
 (9) _tmr1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _add_second
   _handle_state
     _handle_display_date
       _set_time_digits
         ___awdiv
         ___awmod
         _set_digits
           ___awdiv (ARG)
           ___awmod (ARG)
           _set_digit_displayed_all (ARG)
             _set_digit_displayed
     _handle_display_time
       _copy_time_fields
       _set_date_digits
         ___awdiv
         ___awmod
         _set_digits
       _set_time_digits
     _handle_set_day
       _decrease_date
       _increase_date
       _set_date_digits
       _set_digit_displayed
       _set_digit_displayed_all
     _handle_set_hour
       _decrease_hour
       _increase_hour
         ___awmod
       _set_digit_displayed
       _set_digit_displayed_all
       _set_time_digits
     _handle_set_minute
       _decrease_minute
       _increase_minute
         ___awmod
       _set_date_digits
       _set_digit_displayed
       _set_digit_displayed_all
       _set_time_digits
     _handle_set_month
       _copy_time_fields
       _decrease_month
       _increase_month
       _set_date_digits
       _set_digit_displayed
       _set_digit_displayed_all
       _set_time_digits
       _update_time
         ___awdiv
         ___awmod
         _i2c_start
         _i2c_stop
         _i2c_wr
           _bit_in
           _bit_out
         _i2c_wr_bytes
           _i2c_wr
   _read_buttons
     _read_button
   _read_time
     ___bmul
     _i2c_rd_bytes
       _i2c_rd
         _bit_in
         _bit_out
     _i2c_start
     _i2c_stop
     _i2c_wr
   _refresh_digits
     _off_digits
     _on_digit
   _set_time_digits

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _tmr1_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      4C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu May 11 18:38:43 2023

                             _update_time 0029                              _updated_time 0030  
                          ___bmul@product 0074                                        l23 0D49  
                                      l26 0CD0                                        l60 0E9E  
                                      l29 0CB7                                        l76 0CD8  
                            ___awdiv@sign 0049                                       l112 0D08  
                                     l142 0D9E                                       l401 0D64  
                                     l410 0DCE                                       l172 0CBD  
                                     l308 0FC3                                       l260 0ED6  
                                     l405 0D71                                       l421 0E19  
                                     l501 035F                                       l318 06D9  
                                     l510 0365                                       l263 063D  
                                     l503 0361                                       l272 0F18  
                                     l360 0CF8                                       l352 0CEF  
                                     l416 0E67                                       l512 0367  
                                     l600 0EF4                                       l329 0F4F  
                                     l521 036D                                       l505 0362  
                                     l450 0CEE                                       l266 058F  
                                     l362 0CFA                                       l354 0CF1  
                                     l370 0D1D                                       l530 0373  
                                     l514 0368                                       l371 0D1E  
                                     l427 0F87                                       l523 036E  
                                     l507 0363                                       l444 0D16  
                                     l356 0CF3                                       l380 0EA0  
                                     l532 0374                                       l516 0369  
                                     l701 05E7                                       l373 0D20  
                                     l365 0D17                                       l541 037A  
                                     l525 036F                                       l461 0345  
                                     l278 0DE7                                       l358 0CF5  
                                     l374 0D22                                       l390 0EB5  
                                     l382 0EA2                                       l614 04D7  
                                     l534 0375                                       l447 0CE3  
                                     l359 0CF7                                       l375 0D23  
                                     l367 0D19                                       l391 0EB7  
                                     l551 03AC                                       l543 037B  
                                     l519 036B                                       l471 034B  
                                     l455 0341                                       l288 0FFF  
                                     l392 0EB8                                       l528 0371  
                                     l480 0351                                       l641 0721  
                                     l377 0D25                                       l369 0D1B  
                                     l385 0EAF                                       l561 03B2  
                                     l553 03AD                                       l537 0377  
                                     l465 0347                                       l457 0343  
                                     l706 0E33                                       l650 07AA  
                                     l298 07E9                                       l394 0EBA  
                                     l634 01C1                                       l570 03B8  
                                     l474 034D                                       l387 0EB4  
                                     l563 03B3                                       l547 03A9  
                                     l539 0379                                       l483 0353  
                                     l467 0349                                       l459 0344  
                                     l388 0EB2                                       l572 03B9  
                                     l492 0359                                       l476 034F  
                                     l653 0E4D                                       l397 0D5F  
                                     l629 02A0                                       l581 03BF  
                                     l557 03AF                                       l549 03AB  
                                     l485 0355                                       l469 034A  
                                     l398 0D61                                       l590 0CC1  
                                     l566 03B5                                       l494 035B  
                                     l478 0350                                       l399 0D62  
                                     l575 03BB                                       l559 03B1  
                                     l583 03D7                                       l487 0356  
                                     l592 0CC2                                       l568 03B7  
                                     l496 035C                                       l673 033E  
                                     l577 03BD                                       l489 0357  
                                     l658 0DB6                                       l594 0CC3  
                                     l586 0CBE                                       l498 035D  
                                     l579 03BE                                       l588 0CC0  
                                     l693 0E82                                       l688 046F  
                                     l698 0E00                                       l882 0D86  
                                     _PR2 001B                           _timer1ReloadVal 002C  
                            ___awmod@sign 0078                           _TMR2_Initialize 0CD1  
                        i2c_rd_bytes@size 0078                  ?_set_digit_displayed_all 0070  
                                     wreg 0009                          ?_set_date_digits 0070  
                                    l1022 0690                                      l1009 0537  
                                    l3000 053A                                      l3010 06FA  
                                    l3002 06DC                                      l2116 0CDA  
                                    l2124 0CE4                                      l2300 03ED  
                                    l3004 06E4                                      l3012 070B  
                                    l3100 0FF2                                      l3020 009B  
                                    l2310 0418                                      l2302 03F4  
                                    l3006 06ED                                      l3102 0FFC  
                                    l3014 0E35                                      l3110 07B8  
                                    l3030 0179                                      l3022 00DA  
                                    l2144 0D0A                                      l2320 044A  
                                    l2312 0422                                      l2304 03FB  
                                    l3008 06F5                                      l3112 07BD  
                                    l3120 07D3                                      l3104 07AB  
                                    l3032 01AD                                      l3024 010C  
                                    l3016 002B                                      l3200 01C7  
                                    l2146 0D13                                      l2250 05B5  
                                    l2322 0451                                      l2314 042C  
                                    l2306 0404                                      l2330 02A2  
                                    l3130 0F91                                      l3122 07DD  
                                    l3114 07C6                                      l3106 07B1  
                                    l3034 01BE                                      l3026 0111  
                                    l3018 0093                                      l3050 0E14  
                                    l3042 0E04                                      l3210 01F6  
                                    l3202 01CB                                      l2420 0E8B  
                                    l2252 05BF                                      l2244 0591  
                                    l3060 0F02                                      l2324 0458  
                                    l2316 0436                                      l2308 040E  
                                    l2340 02CF                                      l2332 02AC  
                                    l3140 0FB6                                      l3132 0F96  
                                    l2260 076A                                      l3124 07E6  
                                    l3116 07CB                                      l3108 07B3  
                                    l3028 0145                                      l3052 0E18  
                                    l3044 0E06                                      l3036 0E02  
                                    l3220 0242                                      l3212 020C  
                                    l3204 01D2                                      l2430 0E98  
                                    l2422 0E8D                                      l2238 0CB8  
                                    l2254 05C9                                      l2246 05A1  
                                    l3070 0F16                                      l3062 0F06  
                                    l2326 0462                                      l2318 0440  
                                    l2350 0301                                      l2342 02D9  
                                    l2334 02B6                                      l3142 0FC0  
                                    l3134 0F9F                                      l3126 0F88  
                                    l2262 0772                                      l2270 0797  
                                    l3118 07CF                                      l3150 06A1  
                                    l2510 0487                                      l2502 0471  
                                    l3046 0E0A                                      l3222 0258  
                                    l3214 0217                                      l3206 01D6  
                                    l3230 0722                                      l2440 0CCE  
                                    l2432 0E9A                                      l2424 0E8F  
                                    l2416 0E83                                      l3080 0DE3  
                                    l3072 0DCF                                      l2256 05D3  
                                    l2248 05AB                                      l3064 0F0A  
                                    l3056 0EF5                                      l2328 0469  
                                    l2360 032F                                      l2344 02E3  
                                    l2352 030B                                      l2336 02BF  
                                    l3136 0FA4                                      l3128 0F8E  
                                    l2272 079F                                      l2264 077B  
                                    l3160 06BB                                      l3152 06A5  
                                    l3144 0691                                      l2520 04AA  
                                    l2512 048D                                      l3048 0E0E  
                                    l3224 025E                                      l3216 021F  
                                    l3208 01DF                                      l3240 0736  
                                    l3232 072C                                      l2450 0D01  
                                    l2434 0E9C                                      l2426 0E91  
                                    l2418 0E88                                      l2442 0CB4  
                                    l3074 0DD4                                      l2258 05DD  
                                    l3066 0F0F                                      l3058 0EFC  
                                    l2362 0338                                      l2354 0315  
                                    l2346 02ED                                      l2338 02C6  
                                    l3138 0FAC                                      l2274 07A5  
                                    l2266 0781                                      l3090 0FD6  
                                    l3082 0FC4                                      l2290 0DA9  
                                    l3162 06C3                                      l3146 0697  
                                    l3154 06A8                                      l2522 04B0  
                                    l2514 0494                                      l2506 0477  
                                    l3170 0F54                                      l3226 0274  
                                    l3218 022B                                      l3250 0756  
                                    l3242 073C                                      l3234 072D  
                                    l2452 0D03                                      l2444 0CFB  
                                    l2436 0CCA                                      l2428 0E94  
                                    l2460 0CD5                                      l3076 0DD9  
                                    l3068 0F13                                      l2356 031E  
                                    l2348 02F7                                      l2268 0786  
                                    l3092 0FDB                                      l3084 0FCA  
                                    l2292 0DB0                                      l3164 06CD  
                                    l3156 06AD                                      l3148 069B  
                                    l3180 0F1A                                      l2516 049A  
                                    l2508 047E                                      l2524 04B6  
                                    l3172 0F62                                      l3228 028A  
                                    l3340 03C9                                      l3252 075A  
                                    l3244 0745                                      l3236 072E  
                                    l2454 0D06                                      l2446 0CFE  
                                    l2438 0CCD                                      l2470 0D8D  
                                    l2462 0CD6                                      l3078 0DE2  
                                    l2358 0325                                      l3094 0FE0  
                                    l3086 0FCD                                      l2390 0E69  
                                    l3166 06D6                                      l3158 06B6  
                                    l3190 0F2E                                      l3182 0F1E  
                                    l3342 04C1                                      l2518 04A1  
                                    l2526 04CF                                      l3174 0F66  
                                    l3254 0760                                      l3246 074C  
                                    l3238 0732                                      l2448 0CFF  
                                    l2472 0D8E                                      l2464 0D87  
                                    l2456 0CD1                                      l2296 03D9  
                                    l3096 0FE4                                      l3088 0FD2  
                                    l2288 0DA0                                      l2384 0DE9  
                                    l2392 0E73                                      l3344 0F3B  
                                    l3184 0F22                                      l3192 0F32  
                                    l3176 0F78                                      l3168 0F52  
                                    l3248 0750                                      l3256 0764  
                                    l2474 0D92                                      l2466 0D89  
                                    l2458 0CD4                                      l2298 03E3  
                                    l3098 0FE8                                      l2386 0DF3  
                                    l2394 0E7C                                      l3186 0F26  
                                    l3178 0F19                                      l3338 0389  
                                    l2476 0D94                                      l2468 0D8B  
                                    l2388 0DFA                                      l2900 0DC0  
                                    l3188 0F2A                                      l2478 0D9B  
                                    l2902 0DC4                                      l2910 0E52  
                                    l2670 0D74                                      l3198 01C4  
                                    l2654 0340                                      l2750 0EDF  
                                    l2760 0E1B                                      l2920 04DE  
                                    l2904 0DCA                                      l2912 0E5C  
                                    l2672 0D78                                      l2656 037D  
                                    l2752 0EE1                                      l2682 0D37  
                                    l2762 0E25                                      l2930 04F2  
                                    l2922 04E3                                      l2914 0E61  
                                    l2674 0D7C                                      l2658 03C1  
                                    l2754 0EEA                                      l2746 0ED7  
                                    l2764 0E2E                                      l2940 0506  
                                    l2932 04F4                                      l2924 04E5  
                                    l2916 04D8                                      l2908 0E50  
                                    l2692 0EBB                                      l2676 0D7E  
                                    l2668 0D73                                      l2756 0EEE  
                                    l2748 0EDC                                      l2950 0523  
                                    l2942 050A                                      l2934 04FA  
                                    l2926 04E9                                      l2918 04DA  
                                    l2678 0D85                                      l2758 0EF2  
                                    l2944 0519                                      l2936 04FD  
                                    l2952 0529                                      l2928 04EE  
                                    l2960 063E                                      l2954 052E  
                                    l2946 051D                                      l2938 0502  
                                    l2970 064E                                      l2962 063F  
                                    l2890 0DB8                                      l2956 0533  
                                    l2948 051E                                      l2980 0665  
                                    l2972 0653                                      l2964 0643  
                                    l2884 0EA4                                      l2982 0669  
                                    l2974 0659                                      l2990 0682  
                                    l2966 0648                                      l2886 0D66  
                                    l2992 0687                                      l2984 0673  
                                    l2976 065C                                      l2968 064A  
                                    l2888 0D6F                                      l2896 0DBA  
                                    l2994 068C                                      l2986 0677  
                                    l2978 0661                                      l2898 0DBE  
                                    l2988 067C                                      l2998 05EA  
                                    u2120 0D78                                      u2121 0D77  
                                    u2130 0D85                                      u2131 0D84  
                                    u1420 0772                                      u1421 0771  
                                    u3005 026A                                      _LATA 010C  
                                    u1430 077B                                      u1510 0DA9  
                                    u3030 073C                                      _LATB 010D  
                                    u1431 077A                                      u1511 0DA8  
                                    u3015 0280                                      u3031 073B  
                                    _LATC 010E                                      u2400 04E9  
                                    u1600 0440                                      u1520 03E3  
                                    u1440 0794                                      u3040 074C  
                                    u2401 04E8                                      u1601 043F  
                                    u1521 03E2                                      u1441 0792  
                                    u3025 0296                                      u3041 074B  
                                    _LATE 0110                                      u2410 04FA  
                                    u1610 044A                                      u1530 03ED  
                                    u1450 0795                                      u2250 0EDC  
                                    u3050 0756                                      u2411 04F9  
                                    u1611 0449                                      u1531 03EC  
                                    u2251 0EDB                                      u3051 0755  
                                    u2500 064E                                      u1620 0462  
                                    u1540 0404                                      u1700 0301  
                                    u1460 079F                                      u2260 0EEA  
                                    u3060 0760                                      u2501 064D  
                                    u1621 0461                                      u1541 0403  
                                    u1701 0300                                      u1461 079E  
                                    u2261 0EE9                                      u3061 075F  
                                    u2270 0E25                                      u2430 050A  
                                    u2510 0659                                      u1550 040E  
                                    u1710 030B                                      u1630 02AC  
                                    u2271 0E24                                      u2431 0509  
                                    u2511 0658                                      u1551 040D  
                                    u1711 030A                                      u1631 02AB  
                                    u1560 0418                                      u1720 0315  
                                    u1640 02B6                                      u2600 0708  
                                    u2360 0EAF                                      u2425 04FE  
                                    u1561 0417                                      u1721 0314  
                                    u1641 02B5                                      u2601 0706  
                                    u2361 0EAE                                      u2450 0519  
                                    u2530 0669                                      u1570 0422  
                                    u1730 032F                                      u1650 02CF  
                                    u2610 0709                                      u2370 0DCA  
                                    u2451 0518                                      u2531 0668  
                                    u1571 0421                                      u1731 032E  
                                    u1651 02CE                                      u2355 0EA7  
                                    u2371 0DC9                                      u2540 0673  
                                    u1580 042C                                      u1660 02D9  
                                    u2380 0E67                                      u1900 04AA  
                                    u2445 050B                                      u2541 0672  
                                    u2525 065D                                      u1581 042B  
                                    u1661 02D8                                      u2381 0E66  
                                    u1901 04A9                                      u2470 0529  
                                    u2390 04DE                                      u1590 0436  
                                    u1670 02E3                                      u1830 0DF3  
                                    u2710 0E14                                      u2471 0528  
                                    u2455 0515                                      u2391 04DD  
                                    u1591 0435                                      u1671 02E2  
                                    u1831 0DF2                                      u2711 0E13  
                                    u2480 052E                                      u2560 0682  
                                    u2720 0EFC                                      u1680 02ED  
                                    u2800 07B1                                      u1840 0E73  
                                    u2640 009B                                      u2481 052D  
                                    u2465 051F                                      u2561 0681  
                                    u2545 066F                                      u2721 0EFB  
                                    u1681 02EC                                      u2801 07B0  
                                    u1841 0E72                                      u2705 01A6  
                                    u2641 009A                                      u2625 0058  
                                    u2570 0687                                      u2490 0643  
                                    u2730 0F0F                                      u1690 02F7  
                                    u2810 07BD                                      u2571 0686  
                                    u2555 0678                                      u2491 0642  
                                    u2731 0F0E                                      u1691 02F6  
                                    u2811 07BC                                      u2635 008C  
                                    u2740 0DD9                                      u2580 06E4  
                                    u2820 07CB                                      u2900 06BB  
                                    u2741 0DD8                                      u2581 06E3  
                                    u2821 07CA                                      u2901 06BA  
                                    u2750 0DE2                                      u2590 06ED  
                                    u2830 07DD                                      u2910 06CD  
                                    u2751 0DE1                                      u2591 06EC  
                                    u2831 07DC                                      u2655 00C6  
                                    u2911 06CC                                      u2840 0F8E  
                                    u2760 0FCA                                      u1880 0476  
                                    u2920 0F78                                      u2841 0F8D  
                                    u2761 0FC9                                      u2665 00D0  
                                    u1881 0475                                      u2921 0F77  
                                    u2850 0F96                                      u2770 0FD2  
                                    u1890 0487                                      u2851 0F95  
                                    u2771 0FD1                                      u2675 0105  
                                    u1891 0486                                      u2860 0FA4  
                                    u2780 0FE0                                      u2861 0FA3  
                                    u2781 0FDF                                      u2685 013E  
                                    u2925 0F74                                      u2870 0FB6  
                                    u2790 0FF2                                      u2871 0FB5  
                                    u2791 0FF1                                      u2695 0172  
                                    u2935 01EC                                      u2880 0697  
                                    u2960 021F                                      u2881 0696  
                                    u2961 021E                                      u2945 0202  
                                    u2890 06AD                                      u2891 06AC  
                                    u2955 0212                                      u2975 0226  
                                    u2985 0236                                      u2995 024D  
                                    _TMR2 001A                                      _WPUB 020D  
                                    _WPUE 0210                         set_time_digits@tm 0057  
                              i2c_wr@data 0076                                      _btn1 0046  
                                    _btn2 0044                                      _btn3 0042  
                                    _main 0722                                      _time 0039  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                          ?_increase_minute 0070  
                           ?_i2c_rd_bytes 0078                                      start 0019  
                   ??_handle_display_date 007A                     ??_handle_display_time 007A  
              ??_TMR1_SetInterruptHandler 0074                         ___bmul@multiplier 0075  
           __end_of_OSCILLATOR_Initialize 0CD1                             ?_i2c_wr_bytes 0078  
                   __end_of_decrease_date 0470                                     ?_main 0070  
                   __end_of_decrease_hour 07AB                           __end_of___awdiv 0538  
                         __end_of___awmod 0691                           ___awdiv@divisor 0072  
                                   _T1CON 0018                                     _T2CON 001C  
                                   i1l156 0D36                                     i1l175 0003  
                                   i1l192 0017                                     i1l257 0D5D  
                                   i1l169 07FF                           ___awdiv@counter 0048  
                         _set_time_digits 05E8                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   _TRISE 0090                           __end_of_bit_out 0EBB  
                       decrease_date@time 0072                          __end_of_TMR1_ISR 0800  
                            ?_read_button 0072                            _WDT_Initialize 0CB4  
                                   _is_on 007A                                     _state 002E  
                 __end_of_TMR1_Initialize 0D9F                                     pclath 000A  
                          _decrease_month 0DE8                                     status 0003  
                                   wtemp0 007E                            ??_i2c_rd_bytes 0048  
                         _TMR1_WriteTimer 0D26                           __initialization 001B  
                            __end_of_main 0769                          __end_of_i2c_stop 0D26  
                 __end_of_TMR2_Initialize 0CD9               ?_INTERRUPT_InterruptManager 0070  
                         _handle_set_hour 0FC4                            ??_i2c_wr_bytes 0079  
                                  ??_main 007A                         decrease_hour@time 0072  
                __end_of_copy_time_fields 05E8                       _set_digit_displayed 0CD9  
                    __end_of_handle_state 0F50                            _refresh_digits 0ED7  
                  __end_of_WDT_Initialize 0CB8                                    _CCPR1H 0292  
                                  _CCPR1L 0291                    __end_of_decrease_month 0E01  
                        ___awdiv@dividend 0074                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _BORCON 0116                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0070                                    i1l2500 0D59  
                                  i1l2480 0D26                                    i1l2482 0D2B  
                                  i1l2490 0D32                                    i1l2492 0D34  
                                  i1l2484 0D2C                                    i1l2486 0D2E  
                                  i1l2494 0D4A                                    i1l2488 0D30  
                                  i1l2496 0D4D                                    i1l2498 0D56  
                                  i1l2690 07FA                                    i1l2770 000A  
                                  i1l2684 07EA                                    i1l2772 000F  
                                  i1l2686 07EC                                    i1l2774 0014  
                                  i1l2688 07F3                                    i1l2768 0006  
                                  u214_20 07FA                                    u230_20 0014  
                                  u214_21 07F9                                    u230_21 0013  
                                  u228_20 000A                                    u228_21 0009  
                                  u229_20 000F                                    u229_21 000E  
                                  u186_20 0D2B                                    u186_21 0D2A  
                                  u187_20 0D56                                    u187_21 0D55  
                                  _OSCCON 0099                                    _WDTCON 0097  
                    ?_set_digit_displayed 0072                           update_time@time 005B  
                                  _i2c_rd 0E01                                    _i2c_wr 0DB7  
                           _increase_date 02A1      __end_of_TMR1_DefaultInterruptHandler 0004  
            _TMR1_DefaultInterruptHandler 0003                             _increase_hour 06DA  
                            _CCPTMRS0bits 029E                                    ___bmul 0D72  
                           ?_read_buttons 0070                                 ??___awdiv 0076  
                               ??___awmod 0076                   __end_of_set_time_digits 063E  
                                  _bit_in 0D5E                          ___awdiv@quotient 004A  
                         ___awmod@divisor 0072                          __end_of_on_digit 03D8  
                         ___awmod@counter 0077                                 ??_bit_out 0072  
                  __end_of_refresh_digits 0EF5                          __end_of_tmr1_ISR 0D5E  
                         _decrease_minute 0D9F                           ?_WDT_Initialize 0070  
TMR1_SetInterruptHandler@InterruptHandler 0072                   __end_of_TMR1_WriteTimer 0D37  
                         ?_decrease_month 0070                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0D37                   __end_of__initialization 0025  
                   ??_set_digit_displayed 0075                        ?_SYSTEM_Initialize 0070  
                          ?_increase_date 0070                       ___bmul@multiplicand 0072  
                          ?_increase_hour 0070                   __end_of_handle_set_hour 1000  
                       ?_EPWM1_Initialize 0070                            ??_read_buttons 0076  
                          __pcstackCOMMON 0070                              ?_update_time 0070  
                     ??_SYSTEM_Initialize 0074                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                        ??_EPWM1_Initialize 0072  
                              _add_second 0E1A                          ?_TMR2_Initialize 0070  
                         ?_refresh_digits 0070                         __end_of_i2c_start 0CFB  
                    __end_of_i2c_rd_bytes 0F88                            _OPTION_REGbits 0095  
                        _handle_set_month 0691                            on_digit@number 0074  
               __end_of_SYSTEM_Initialize 0D4A                                __pbssBANK0 0020  
                    __end_of_i2c_wr_bytes 0E68                                 ?_i2c_stop 0070  
                                 ?_i2c_rd 0070                                   ?_i2c_wr 0070  
                              __pmaintext 0722                                   ?___bmul 0072  
                              ??_TMR1_ISR 0072                                   ?_bit_in 0070  
                              __pintentry 0004                          ?_set_time_digits 0070  
                      decrease_month@time 0072                                   _CCP1CON 0293  
                                 _ECCP1AS 0295                   __end_of_decrease_minute 0DB7  
                          set_digits@dig0 0079                            set_digits@dig1 004C  
                          set_digits@dig2 004D                            set_digits@dig3 004E  
                                 _OSCTUNE 0098                                   _PWM1CON 0294  
                            _digit_values 0024                          ?_TMR1_WriteTimer 0070  
                           i2c_rd_bytes@i 004B                                   i2c_rd@i 0076  
             __end_of_handle_display_date 0DE8                                   i2c_wr@i 0077  
             __end_of_handle_display_time 0F19                                ??_i2c_stop 0072  
                         ??_increase_date 0072                           ??_increase_hour 0079  
                               ?_on_digit 0070                                 ?_tmr1_ISR 0070  
                            _handle_state 0F19                          ?_handle_set_hour 0070  
                          _increase_month 0E68                                _off_digits 0CBE  
                                 ___awdiv 04D8                                   ___awmod 063E  
                             ?_add_second 0070                                   _bit_out 0E9F  
                                 __ptext1 0ED7                                   __ptext2 033F  
                                 __ptext3 0CBE                                   __ptext4 01C2  
                                 __ptext5 0F50                                   __ptext6 0E01  
                                 __ptext7 0D72                                   __ptext8 0EBB  
                                 __ptext9 0470            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0CCA  
                               _T2CONbits 001C                                   _current 007B  
                       ?_copy_time_fields 0072                          ___awmod@dividend 0074  
                       __end_of_read_time 02A1                  ??_PIN_MANAGER_Initialize 0072  
               ?_TMR1_SetInterruptHandler 0072                        ??_copy_time_fields 0073  
                    __end_of_read_buttons 0ED7                                   clrloop0 0CC5  
                    end_of_initialization 0025                      _date_displayed_ticks 0028  
                    i2c_rd_bytes@byte_arr 004A                      i2c_wr_bytes@byte_arr 0048  
                              bit_in@data 0073                                ??_on_digit 0072  
                              ??_tmr1_ISR 0070                    __end_of_increase_month 0E83  
                              _set_digits 0D09                            add_second@time 0073  
                           i2c_wr_bytes@i 0049                          ?_decrease_minute 0070  
                        ??_WDT_Initialize 0072                                 _PORTBbits 000D  
                               _PORTCbits 000E                          ??_decrease_month 0072  
                copy_time_fields@src_time 0073                                 _TRISCbits 008E  
                      increase_month@time 0073                 copy_time_fields@dest_time 0072  
                      update_time@reg_arr 0054                                 i2c_rd@ack 0075  
                 _set_digit_displayed_all 0CE4                                 i2c_rd@ret 0077  
                               i2c_wr@ack 0075                              _i2c_rd_bytes 0F50  
                         ?_increase_month 0070                  __end_of_handle_set_month 06DA  
                          __end_of_i2c_rd 0E1A                            __end_of_i2c_wr 0DCF  
                             ?_off_digits 0070                         ??_set_date_digits 004F  
                        ??_refresh_digits 0075                            __end_of___bmul 0D87  
                          __end_of_bit_in 0D72                              _i2c_wr_bytes 0E4E  
                  ?_OSCILLATOR_Initialize 0070                             _decrease_date 03D8  
                           _decrease_hour 0769                         ??_increase_minute 0079  
                     start_initialization 001B                                 _i2c_start 0CEF  
             __end_of_set_digit_displayed 0CE4                            _handle_set_day 0F88  
                       set_date_digits@tm 0057                         _handle_set_minute 07AB  
                 set_digit_displayed@dig0 0075                   set_digit_displayed@dig1 0072  
                 set_digit_displayed@dig2 0073                   set_digit_displayed@dig3 0074  
                                ??_i2c_rd 0074                                  ??_i2c_wr 0074  
                             ?_set_digits 004C                        ?_handle_set_minute 0070  
                                ??___bmul 0073                                  ??_bit_in 0072  
                     ??_handle_set_minute 007A                            ?_decrease_date 0070  
                          ?_decrease_hour 0070                               __pbssCOMMON 007A  
                               ___latbits 0002                    __end_of_handle_set_day 0FC4  
                           __pcstackBANK0 0048                             ??_read_button 0073  
                              ?_i2c_start 0070                 ??_set_digit_displayed_all 0076  
               __end_of_handle_set_minute 07EA                                 __pnvBANK0 005E  
                     decrease_minute@time 0072                    _PIN_MANAGER_Initialize 0E83  
        __end_of_TMR1_SetInterruptHandler 0CBE                              _read_buttons 0EBB  
                                ?___awdiv 0072                                  ?___awmod 0072  
                            ??_add_second 0072                         increase_date@time 0073  
            ??_INTERRUPT_InterruptManager 0072                                  ?_bit_out 0070  
                      read_button@pin_val 0072                           ?_handle_set_day 0070  
                               _read_time 01C2                       __end_of_read_button 04D8  
                      __end_of_add_second 0E34                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
                               clear_ram0 0CC4                                  _PIE1bits 0091  
                   __end_of_increase_date 033F                     __end_of_increase_hour 0722  
                                _PIR1bits 0011                         increase_hour@time 0048  
         __end_of_set_digit_displayed_all 0CEF                                  _TMR1_ISR 07EA  
                                _PSTR1CON 0296                           ??_decrease_date 0072  
                         ??_decrease_hour 0072                         ??_TMR1_Initialize 0074  
                        _EPWM1_Initialize 0CFB                               ??_i2c_start 0072  
                              ?_read_time 0070                          ??_increase_month 0072  
                         _set_date_digits 0538                                  _i2c_stop 0D17  
                       ??_TMR2_Initialize 0072                         ?_handle_set_month 0070  
                           ??_update_time 004C                              ??_off_digits 0072  
                         _increase_minute 0E34                        ??_handle_set_month 007A  
                 ??_OSCILLATOR_Initialize 0072                  _TMR1_SetInterruptHandler 0CB8  
                   _TMR1_InterruptHandler 005E                               _read_button 0470  
                                __ptext10 0F19                                  __ptext11 0691  
                                __ptext20 0DE8                                  __ptext12 0029  
                                __ptext21 07AB                                  __ptext13 0E4E  
                              _T1GCONbits 0019                                  __ptext30 0EF5  
                                __ptext22 0E34                                  __ptext14 0DB7  
                                __ptext31 0538                                  __ptext23 0D9F  
                                __ptext15 0E9F                                  __ptext40 0E1A  
                                __ptext32 0590                                  __ptext24 0FC4  
                                __ptext16 0D5E                                  __ptext41 0D37  
                                __ptext33 0DCF                                  __ptext25 06DA  
                                __ptext17 0D17                                  __ptext50 07EA  
                                __ptext42 0CB4                                  __ptext34 05E8  
                                __ptext26 0769                                  __ptext18 0CEF  
                                __ptext51 0003                                  __ptext43 0CD1  
                                __ptext35 0D09                                  __ptext27 0F88  
                                __ptext19 0E68                                  __ptext52 0D4A  
                                __ptext44 0D87                                  __ptext36 0CE4  
                                __ptext28 02A1                                  __ptext53 0D26  
                                __ptext45 0CB8                                  __ptext37 0CD9  
                                __ptext29 03D8                                  __ptext46 0E83  
                                __ptext38 063E                                  __ptext47 0CCA  
                                __ptext39 04D8                                  __ptext48 0CFB  
                        i2c_wr_bytes@size 0078                        __end_of_off_digits 0CC4  
                       ??_set_time_digits 004F                                  _on_digit 033F  
                                _tmr1_ISR 0D4A                              ??_set_digits 0079  
                                int$flags 007E                          read_time@reg_arr 004E  
      __end_of_INTERRUPT_InterruptManager 0019                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0072                       __end_of_update_time 01C2  
                              _INTCONbits 000B                   __end_of_set_date_digits 0590  
                       ??_handle_set_hour 007A                        __end_of_set_digits 0D17  
                             ??_read_time 004C                                  intlevel1 0000  
                          read_button@btn 0075                   ?_PIN_MANAGER_Initialize 0070  
                 __end_of_increase_minute 0E4E                          _copy_time_fields 0590  
                           ?_handle_state 0070                           _digit_displayed 0020  
                             bit_out@data 0073                              _timer_ticked 002F  
                        ??_handle_set_day 007A                       _handle_display_date 0DCF  
                     _handle_display_time 0EF5                               _timer_count 002A  
          __end_of_PIN_MANAGER_Initialize 0E9F                             read_time@time 0055  
                       ??_decrease_minute 0072                            ??_handle_state 005C  
                         _TMR1_Initialize 0D87                       increase_minute@time 0079  
                __end_of_EPWM1_Initialize 0D09                      ?_handle_display_date 0070  
                    ?_handle_display_time 0070  
